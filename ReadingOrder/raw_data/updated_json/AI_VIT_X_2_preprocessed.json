{
    "id": "32a9aa94-0f94-11ef-8828-426932df3dcf",
    "pdf_path": "/root/data/pdf/2402.03620v1.pdf",
    "elements": [
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 368
                },
                {
                    "x": 2265,
                    "y": 368
                },
                {
                    "x": 2265,
                    "y": 443
                },
                {
                    "x": 225,
                    "y": 443
                }
            ],
            "category": "paragraph",
            "html": "<p id='0' style='font-size:22px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</p>",
            "id": 0,
            "page": 1,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 478,
                    "y": 588
                },
                {
                    "x": 1994,
                    "y": 588
                },
                {
                    "x": 1994,
                    "y": 693
                },
                {
                    "x": 478,
                    "y": 693
                }
            ],
            "category": "paragraph",
            "html": "<p id='1' style='font-size:16px'>Pei Zhou 1 Jay Pujara 1 Xiang Ren 1 Xinyun Chen 2 Heng-Tze Cheng 2<br>Quoc V. Le2 Ed H. Chi2 Denny Zhou 2 Swaroop Mishra 2 Huaixiu Steven Zheng 2</p>",
            "id": 1,
            "page": 1,
            "text": "Pei Zhou 1 Jay Pujara 1 Xiang Ren 1 Xinyun Chen 2 Heng-Tze Cheng 2 Quoc V. Le2 Ed H. Chi2 Denny Zhou 2 Swaroop Mishra 2 Huaixiu Steven Zheng 2"
        },
        {
            "bounding_box": [
                {
                    "x": 619,
                    "y": 781
                },
                {
                    "x": 816,
                    "y": 781
                },
                {
                    "x": 816,
                    "y": 832
                },
                {
                    "x": 619,
                    "y": 832
                }
            ],
            "category": "paragraph",
            "html": "<p id='2' style='font-size:20px'>Abstract</p>",
            "id": 2,
            "page": 1,
            "text": "Abstract"
        },
        {
            "bounding_box": [
                {
                    "x": 306,
                    "y": 847
                },
                {
                    "x": 1139,
                    "y": 847
                },
                {
                    "x": 1139,
                    "y": 1999
                },
                {
                    "x": 306,
                    "y": 1999
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='3' style='font-size:16px'>We introduce SELF-DISCOVER, a general frame-<br>work for LLMs to self-discover the task-intrinsic<br>reasoning structures to tackle complex reasoning<br>problems that are challenging for typical prompt-<br>ing methods. Core to the framework is a self-<br>discovery process where LLMs select multiple<br>atomic reasoning modules such as critical think-<br>ing and step-by-step thinking, and compose them<br>into an explicit reasoning structure for LLMs to<br>follow during decoding. SELF-DISCOVER sub-<br>stantially improves GPT-4 and PaLM 2's per-<br>formance on challenging reasoning benchmarks<br>such as BigBench-Hard, grounded agent reason-<br>ing, and MATH, by as much as 32% compared<br>to Chain of Thought (CoT). Furthermore, SELF-<br>DISCOVER outperforms inference-intensive meth-<br>ods such as CoT-Self-Consistency by more than<br>20%, while requiring 10-40x fewer inference com-<br>pute. Finally, we show that the self-discovered<br>reasoning structures are universally applicable<br>across model families: from PaLM 2-L to GPT-4,<br>and from GPT-4 to Llama2, and share commonal-<br>ities with human reasoning patterns.</p>",
            "id": 3,
            "page": 1,
            "text": "We introduce SELF-DISCOVER, a general framework for LLMs to self-discover the task-intrinsic reasoning structures to tackle complex reasoning problems that are challenging for typical prompting methods. Core to the framework is a selfdiscovery process where LLMs select multiple atomic reasoning modules such as critical thinking and step-by-step thinking, and compose them into an explicit reasoning structure for LLMs to follow during decoding. SELF-DISCOVER substantially improves GPT-4 and PaLM 2's performance on challenging reasoning benchmarks such as BigBench-Hard, grounded agent reasoning, and MATH, by as much as 32% compared to Chain of Thought (CoT). Furthermore, SELFDISCOVER outperforms inference-intensive methods such as CoT-Self-Consistency by more than 20%, while requiring 10-40x fewer inference compute. Finally, we show that the self-discovered reasoning structures are universally applicable across model families: from PaLM 2-L to GPT-4, and from GPT-4 to Llama2, and share commonalities with human reasoning patterns."
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 2124
                },
                {
                    "x": 554,
                    "y": 2124
                },
                {
                    "x": 554,
                    "y": 2176
                },
                {
                    "x": 226,
                    "y": 2176
                }
            ],
            "category": "paragraph",
            "html": "<p id='4' style='font-size:20px'>1. Introduction</p>",
            "id": 4,
            "page": 1,
            "text": "1. Introduction"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2207
                },
                {
                    "x": 1216,
                    "y": 2207
                },
                {
                    "x": 1216,
                    "y": 2707
                },
                {
                    "x": 224,
                    "y": 2707
                }
            ],
            "category": "paragraph",
            "html": "<p id='5' style='font-size:18px'>Large Language Models (LLM) (Brown et al., 2020; Chowd-<br>hery et al., 2022; OpenAI, 2023b; Anil et al., 2023) pow-<br>ered by transformers (Vaswani et al., 2017) have produced<br>impressive breakthroughs in generating coherent texts (Ope-<br>nAI, 2022), and following instructions (Zhong et al., 2021;<br>Mishra et al., 2022c; Wei et al., 2021; Chung et al., 2022;<br>Ouyang et al., 2022). In pursuit of the goal to enhance<br>LLMs' capability to reason and solve complex problems,<br>various prompting methods have been proposed, drawing<br>inspirations from cognitive theories of how humans rea-</p>",
            "id": 5,
            "page": 1,
            "text": "Large Language Models (LLM) (Brown , 2020; Chowdhery , 2022; OpenAI, 2023b; Anil , 2023) powered by transformers (Vaswani , 2017) have produced impressive breakthroughs in generating coherent texts (OpenAI, 2022), and following instructions (Zhong , 2021; Mishra , 2022c; Wei , 2021; Chung , 2022; Ouyang , 2022). In pursuit of the goal to enhance LLMs' capability to reason and solve complex problems, various prompting methods have been proposed, drawing inspirations from cognitive theories of how humans rea-"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2737
                },
                {
                    "x": 1212,
                    "y": 2737
                },
                {
                    "x": 1212,
                    "y": 2908
                },
                {
                    "x": 224,
                    "y": 2908
                }
            ],
            "category": "paragraph",
            "html": "<p id='6' style='font-size:16px'>1University of Southern California 2Google DeepMind. Cor-<br>respondence to: Pei Zhou <peiz@usc.edu>, Swaroop Mishra<br><swaroopmishra@google.com>, Huaixiu Steven Zheng < steven-<br>zheng@google.com>.</p>",
            "id": 6,
            "page": 1,
            "text": "1University of Southern California 2Google DeepMind. Correspondence to: Pei Zhou <peiz@usc.edu>, Swaroop Mishra <swaroopmishra@google.com>, Huaixiu Steven Zheng < stevenzheng@google.com>."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2947
                },
                {
                    "x": 363,
                    "y": 2947
                },
                {
                    "x": 363,
                    "y": 2989
                },
                {
                    "x": 225,
                    "y": 2989
                }
            ],
            "category": "paragraph",
            "html": "<p id='7' style='font-size:18px'>Preprint.</p>",
            "id": 7,
            "page": 1,
            "text": "Preprint."
        },
        {
            "bounding_box": [
                {
                    "x": 1270,
                    "y": 789
                },
                {
                    "x": 2265,
                    "y": 789
                },
                {
                    "x": 2265,
                    "y": 1832
                },
                {
                    "x": 1270,
                    "y": 1832
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='8' style='font-size:16px'>son. For example, few-shot and zero-shot chain-of-thought<br>(CoT) (Nye et al., 2021; Wei et al., 2022; Kojima et al., 2022;<br>Yasunaga et al., 2023) resembles how humans solve prob-<br>lems step-by-step, decomposition-based prompting (Zhou<br>et al., 2022a; Drozdov et al., 2022; Patel et al., 2022; Hao<br>et al., 2023; Khot et al., 2022) is inspired by how humans<br>breakdown a complex problem into a series of smaller<br>subproblems, and then solve those subproblems one by<br>one (Polya, 2004), and step-back prompting (Zheng et al.,<br>2023) is motivated by how humans reflect on task nature<br>to derive general principles. However, a fundamental limi-<br>tation is that each technique itself serves as an atomic rea-<br>soning module making an implicit prior assumption of the<br>process on how to tackle a given task. Instead, we argue<br>that each task has a unique intrinsic structure underlying<br>the reasoning process involved in solving it efficiently. For<br>instance, least-to-most prompting (Zhou et al., 2022a; Droz-<br>dov et al., 2022) has shown to be much more effective than<br>CoT (Wei et al., 2022) at solving tasks such as symbolic<br>manipulation and compositional generalization, due to the<br>decomposition structure of the tasks.</p>",
            "id": 8,
            "page": 1,
            "text": "son. For example, few-shot and zero-shot chain-of-thought (CoT) (Nye , 2021; Wei , 2022; Kojima , 2022; Yasunaga , 2023) resembles how humans solve problems step-by-step, decomposition-based prompting (Zhou , 2022a; Drozdov , 2022; Patel , 2022; Hao , 2023; Khot , 2022) is inspired by how humans breakdown a complex problem into a series of smaller subproblems, and then solve those subproblems one by one (Polya, 2004), and step-back prompting (Zheng , 2023) is motivated by how humans reflect on task nature to derive general principles. However, a fundamental limitation is that each technique itself serves as an atomic reasoning module making an implicit prior assumption of the process on how to tackle a given task. Instead, we argue that each task has a unique intrinsic structure underlying the reasoning process involved in solving it efficiently. For instance, least-to-most prompting (Zhou , 2022a; Drozdov , 2022) has shown to be much more effective than CoT (Wei , 2022) at solving tasks such as symbolic manipulation and compositional generalization, due to the decomposition structure of the tasks."
        },
        {
            "bounding_box": [
                {
                    "x": 1270,
                    "y": 1857
                },
                {
                    "x": 2265,
                    "y": 1857
                },
                {
                    "x": 2265,
                    "y": 2653
                },
                {
                    "x": 1270,
                    "y": 2653
                }
            ],
            "category": "paragraph",
            "html": "<p id='9' style='font-size:16px'>This paper aims at self-discovering the underlying reasoning<br>structure unique to each task, while being highly efficient in<br>terms of computation. Our approach, SELF-DISCOVER, is<br>inspired by how humans internally devise a reasoning pro-<br>gram for problem-solving (Newell et al., 1958; Rasmussen,<br>1983), as illustrated in Figure 2 · From a set of atomic<br>reasoning modules described in natural language such as<br>\"breakdown into sub tasks\" and \"critical thinking\", an LLM,<br>and task examples without labels, SELF-DISCOVER com-<br>poses a coherent reasoning structure intrinsic to the task<br>(Stage 1) and then solves instances of the task using the<br>discovered structure (Stage 2). Stage 1 operates at the task-<br>level and uses three actions to guide the LLM to generate<br>a reasoning structure for the task. At Stage 2, during the<br>final decoding, the LLM simply follows the self-discovered<br>structure to arrive at the final answer.</p>",
            "id": 9,
            "page": 1,
            "text": "This paper aims at self-discovering the underlying reasoning structure unique to each task, while being highly efficient in terms of computation. Our approach, SELF-DISCOVER, is inspired by how humans internally devise a reasoning program for problem-solving (Newell , 1958; Rasmussen, 1983), as illustrated in Figure 2 · From a set of atomic reasoning modules described in natural language such as \"breakdown into sub tasks\" and \"critical thinking\", an LLM, and task examples without labels, SELF-DISCOVER composes a coherent reasoning structure intrinsic to the task (Stage 1) and then solves instances of the task using the discovered structure (Stage 2). Stage 1 operates at the tasklevel and uses three actions to guide the LLM to generate a reasoning structure for the task. At Stage 2, during the final decoding, the LLM simply follows the self-discovered structure to arrive at the final answer."
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 2680
                },
                {
                    "x": 2262,
                    "y": 2680
                },
                {
                    "x": 2262,
                    "y": 2979
                },
                {
                    "x": 1273,
                    "y": 2979
                }
            ],
            "category": "paragraph",
            "html": "<p id='10' style='font-size:18px'>Solving problems using SELF-DISCOVER brings several<br>benefits compared to other methods for LLM reasoning.<br>First, the discovered reasoning structure is grounded in<br>atomic reasoning modules benefiting from the strengths of<br>multiple reasoning modules in contrast to applying a priori<br>module such as CoT. Second, SELF-DISCOVER is efficient</p>",
            "id": 10,
            "page": 1,
            "text": "Solving problems using SELF-DISCOVER brings several benefits compared to other methods for LLM reasoning. First, the discovered reasoning structure is grounded in atomic reasoning modules benefiting from the strengths of multiple reasoning modules in contrast to applying a priori module such as CoT. Second, SELF-DISCOVER is efficient"
        },
        {
            "bounding_box": [
                {
                    "x": 63,
                    "y": 921
                },
                {
                    "x": 150,
                    "y": 921
                },
                {
                    "x": 150,
                    "y": 2319
                },
                {
                    "x": 63,
                    "y": 2319
                }
            ],
            "category": "footer",
            "html": "<br><footer id='11' style='font-size:14px'>2024<br>Feb<br>6<br>[cs.AI]<br>arXiv:2402.03620v1</footer>",
            "id": 11,
            "page": 1,
            "text": "2024 Feb 6 [cs.AI] arXiv:2402.03620v1"
        },
        {
            "bounding_box": [
                {
                    "x": 1230,
                    "y": 3052
                },
                {
                    "x": 1254,
                    "y": 3052
                },
                {
                    "x": 1254,
                    "y": 3088
                },
                {
                    "x": 1230,
                    "y": 3088
                }
            ],
            "category": "footer",
            "html": "<footer id='12' style='font-size:14px'>1</footer>",
            "id": 12,
            "page": 1,
            "text": "1"
        },
        {
            "bounding_box": [
                {
                    "x": 599,
                    "y": 193
                },
                {
                    "x": 1883,
                    "y": 193
                },
                {
                    "x": 1883,
                    "y": 235
                },
                {
                    "x": 599,
                    "y": 235
                }
            ],
            "category": "header",
            "html": "<header id='13' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 13,
            "page": 2,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 435,
                    "y": 269
                },
                {
                    "x": 2040,
                    "y": 269
                },
                {
                    "x": 2040,
                    "y": 1108
                },
                {
                    "x": 435,
                    "y": 1108
                }
            ],
            "category": "figure",
            "html": "<figure><img id='14' style='font-size:14px' alt=\"Direct Answer Task Answer\nChain-of-Thought\nTask Rationale Answer\n(CoT)\nSelf-Discover Task-Specific Structured\nTask Answer\nReasoning Reasoning Structure Reasoning\nStructures (Ours)\nSelf-Discover Over Direct Answer Self-Discover Over Chain-of-Thought\n40\n40 Avg. BBH: +11% Avg. BBH: +7%\nT4D: + 39% 30 T4D: + 29%\n30 MATH: +5.5% MATH: +8.5%\nAccuracy\n20\n10\n10\n△ Accuracy 20\n△\n0\n0\n-10\n-10\n-20\n-20\" data-coord=\"top-left:(435,269); bottom-right:(2040,1108)\" /></figure>",
            "id": 14,
            "page": 2,
            "text": "Direct Answer Task Answer Chain-of-Thought Task Rationale Answer (CoT) Self-Discover Task-Specific Structured Task Answer Reasoning Reasoning Structure Reasoning Structures (Ours) Self-Discover Over Direct Answer Self-Discover Over Chain-of-Thought 40 40 Avg. BBH: +11% Avg. BBH: +7% T4D: + 39% 30 T4D: + 29% 30 MATH: +5.5% MATH: +8.5% Accuracy 20 10 10 △ Accuracy 20 △ 0 0 -10 -10 -20 -20"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 1170
                },
                {
                    "x": 2263,
                    "y": 1170
                },
                {
                    "x": 2263,
                    "y": 1354
                },
                {
                    "x": 223,
                    "y": 1354
                }
            ],
            "category": "paragraph",
            "html": "<p id='15' style='font-size:14px'>Figure 1. SELF-DISCOVER guides LLMs to self-discover and compose atomic reasoning modules into a reasoning structure to solve<br>challenging tasks. Through testing on challenging reasoning benchmarks incuding Big Bench-Hard (BBH), agent reasoning (T4D), and<br>MATH, we find that SELF-DISCOVER outperforms Direct Answering on 23/25 and CoT on 21/25 tasks in zero-shot setting using PaLM<br>2-L. Full BBH results are in Appendix C Table 3.</p>",
            "id": 15,
            "page": 2,
            "text": "Figure 1. SELF-DISCOVER guides LLMs to self-discover and compose atomic reasoning modules into a reasoning structure to solve challenging tasks. Through testing on challenging reasoning benchmarks incuding Big Bench-Hard (BBH), agent reasoning (T4D), and MATH, we find that SELF-DISCOVER outperforms Direct Answering on 23/25 and CoT on 21/25 tasks in zero-shot setting using PaLM 2-L. Full BBH results are in Appendix C Table 3."
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 1381
                },
                {
                    "x": 1215,
                    "y": 1381
                },
                {
                    "x": 1215,
                    "y": 1727
                },
                {
                    "x": 223,
                    "y": 1727
                }
            ],
            "category": "paragraph",
            "html": "<p id='16' style='font-size:18px'>in computation as it only requires 3 more inference steps on<br>the task-level, while being more performant than inference-<br>heavy ensemble approaches such as self-consistency (Wang<br>et al., 2022). Lastly, the discovered reasoning structure<br>is intrinsic to the task, and conveys LLMs' insights about<br>the task in a more interpretable way than the optimized<br>prompts (Zhou et al., 2022b; Yang et al., 2023).</p>",
            "id": 16,
            "page": 2,
            "text": "in computation as it only requires 3 more inference steps on the task-level, while being more performant than inferenceheavy ensemble approaches such as self-consistency (Wang , 2022). Lastly, the discovered reasoning structure is intrinsic to the task, and conveys LLMs' insights about the task in a more interpretable way than the optimized prompts (Zhou , 2022b; Yang , 2023)."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1750
                },
                {
                    "x": 1214,
                    "y": 1750
                },
                {
                    "x": 1214,
                    "y": 2600
                },
                {
                    "x": 224,
                    "y": 2600
                }
            ],
            "category": "paragraph",
            "html": "<p id='17' style='font-size:18px'>We test SELF-DISCOVER on 25 challenging reasoning<br>tasks including Big Bench-Hard (BBH) (Suzgun et al.,<br>2022), Thinking for Doing (T4D) (Zhou et al., 2023) and<br>MATH (Hendrycks et al., 2021). SELF-DISCOVER outper-<br>forms CoT on 21/25 task with performance gains up to 42%<br>(Figure 1), highlighting the advantage of the self-discovered<br>reasoning structure composed from the atomic reasoning<br>modules against a single a priori CoT module. Furthermore,<br>we demonstrate that SELF- DISCOVER achieves superior<br>performance against inference-heavy methods such as CoT<br>+ Self-Consistency and majority voting of every module<br>while requiring 10-40x fewer inference compute (Figure 5).<br>Finally, we compare SELF-DISCOVER with prompts op-<br>timized (OPRO) using a training set (Yang et al., 2023)<br>(Figure 9). We find that SELF-DISCOVER still performs on<br>par or better than OPRO while the self-discovered reasoning<br>structure are much more interpretable.</p>",
            "id": 17,
            "page": 2,
            "text": "We test SELF-DISCOVER on 25 challenging reasoning tasks including Big Bench-Hard (BBH) (Suzgun , 2022), Thinking for Doing (T4D) (Zhou , 2023) and MATH (Hendrycks , 2021). SELF-DISCOVER outperforms CoT on 21/25 task with performance gains up to 42% (Figure 1), highlighting the advantage of the self-discovered reasoning structure composed from the atomic reasoning modules against a single a priori CoT module. Furthermore, we demonstrate that SELF- DISCOVER achieves superior performance against inference-heavy methods such as CoT + Self-Consistency and majority voting of every module while requiring 10-40x fewer inference compute (Figure 5). Finally, we compare SELF-DISCOVER with prompts optimized (OPRO) using a training set (Yang , 2023) (Figure 9). We find that SELF-DISCOVER still performs on par or better than OPRO while the self-discovered reasoning structure are much more interpretable."
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 2622
                },
                {
                    "x": 1213,
                    "y": 2622
                },
                {
                    "x": 1213,
                    "y": 2973
                },
                {
                    "x": 223,
                    "y": 2973
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='18' style='font-size:16px'>We conduct a set of analysis to understand the effectiveness<br>of SELF-DISCOVER. By breaking down BBH tasks into 4<br>different categories, we find that SELF-DISCOVER performs<br>best on tasks requiring world knowledge and has a mod-<br>erate performance boost on algorithmic tasks compared to<br>CoT (Figure 4). This is further confirmed by the error anal-<br>ysis on MATH, where 74.7% model failures comes from</p>",
            "id": 18,
            "page": 2,
            "text": "We conduct a set of analysis to understand the effectiveness of SELF-DISCOVER. By breaking down BBH tasks into 4 different categories, we find that SELF-DISCOVER performs best on tasks requiring world knowledge and has a moderate performance boost on algorithmic tasks compared to CoT (Figure 4). This is further confirmed by the error analysis on MATH, where 74.7% model failures comes from"
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 1381
                },
                {
                    "x": 2262,
                    "y": 1381
                },
                {
                    "x": 2262,
                    "y": 1679
                },
                {
                    "x": 1273,
                    "y": 1679
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='19' style='font-size:18px'>computation errors (e.g. math). We also take a closer look<br>at the self-discovered reasoning structures, and show the<br>universality of them by transferability study from PaLM<br>2-L to GPT-4, and from GPT-4 to Llama-2-70B. We hope<br>to encourage more future work on structured reasoning for<br>solving challenging problems using LLMs.</p>",
            "id": 19,
            "page": 2,
            "text": "computation errors (e.g. math). We also take a closer look at the self-discovered reasoning structures, and show the universality of them by transferability study from PaLM 2-L to GPT-4, and from GPT-4 to Llama-2-70B. We hope to encourage more future work on structured reasoning for solving challenging problems using LLMs."
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 1741
                },
                {
                    "x": 2229,
                    "y": 1741
                },
                {
                    "x": 2229,
                    "y": 1854
                },
                {
                    "x": 1275,
                    "y": 1854
                }
            ],
            "category": "paragraph",
            "html": "<p id='20' style='font-size:22px'>2. Self-Discovering Reasoning Structures for<br>Problem-Solving</p>",
            "id": 20,
            "page": 2,
            "text": "2. Self-Discovering Reasoning Structures for Problem-Solving"
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 1884
                },
                {
                    "x": 2264,
                    "y": 1884
                },
                {
                    "x": 2264,
                    "y": 2382
                },
                {
                    "x": 1273,
                    "y": 2382
                }
            ],
            "category": "paragraph",
            "html": "<p id='21' style='font-size:16px'>We take inspiration from how humans use prior knowledge<br>and skills to devise a reasoning program to solve prob-<br>lems (Newell et al., 1958; Rasmussen, 1983). When we<br>face a new problem, we often first search internally what<br>knowledge and skills from our prior experience might be<br>helpful to solve it. Then we will attempt to apply relevant<br>knowledge and skills to this task. And finally we will con-<br>nect multiple individual skills and knowledge to solve the<br>problem. We design SELF-DISCOVER to enact these steps<br>into two stages as illustrated in Figure 2.</p>",
            "id": 21,
            "page": 2,
            "text": "We take inspiration from how humans use prior knowledge and skills to devise a reasoning program to solve problems (Newell , 1958; Rasmussen, 1983). When we face a new problem, we often first search internally what knowledge and skills from our prior experience might be helpful to solve it. Then we will attempt to apply relevant knowledge and skills to this task. And finally we will connect multiple individual skills and knowledge to solve the problem. We design SELF-DISCOVER to enact these steps into two stages as illustrated in Figure 2."
        },
        {
            "bounding_box": [
                {
                    "x": 1269,
                    "y": 2407
                },
                {
                    "x": 2264,
                    "y": 2407
                },
                {
                    "x": 2264,
                    "y": 2958
                },
                {
                    "x": 1269,
                    "y": 2958
                }
            ],
            "category": "paragraph",
            "html": "<p id='22' style='font-size:18px'>Given a task and a set of reasoning module descriptions<br>representing high-level problem-solving heuristics such as<br>\"Use critical thinking\" and \"Let's think step by step\", , Stage 1<br>of SELF-DISCOVER aims to uncover the intrinsic reasoning<br>structure for solving this task via meta-reasoning. Specifi-<br>cally, we uses three meta-prompts to guide LLMs to select,<br>adapt, and implement an actionable reasoning structure with<br>no labels or training required. We format the structure in<br>key-value pairs similar to JSON due to interpretability and<br>findings on following JSON boosts reasoning and generation<br>quality (Zhou et al., 2023; OpenAI, 2023a). The structure of</p>",
            "id": 22,
            "page": 2,
            "text": "Given a task and a set of reasoning module descriptions representing high-level problem-solving heuristics such as \"Use critical thinking\" and \"Let's think step by step\", , Stage 1 of SELF-DISCOVER aims to uncover the intrinsic reasoning structure for solving this task via meta-reasoning. Specifically, we uses three meta-prompts to guide LLMs to select, adapt, and implement an actionable reasoning structure with no labels or training required. We format the structure in key-value pairs similar to JSON due to interpretability and findings on following JSON boosts reasoning and generation quality (Zhou , 2023; OpenAI, 2023a). The structure of"
        },
        {
            "bounding_box": [
                {
                    "x": 1227,
                    "y": 3048
                },
                {
                    "x": 1257,
                    "y": 3048
                },
                {
                    "x": 1257,
                    "y": 3088
                },
                {
                    "x": 1227,
                    "y": 3088
                }
            ],
            "category": "footer",
            "html": "<footer id='23' style='font-size:16px'>2</footer>",
            "id": 23,
            "page": 2,
            "text": "2"
        },
        {
            "bounding_box": [
                {
                    "x": 601,
                    "y": 192
                },
                {
                    "x": 1881,
                    "y": 192
                },
                {
                    "x": 1881,
                    "y": 235
                },
                {
                    "x": 601,
                    "y": 235
                }
            ],
            "category": "header",
            "html": "<header id='24' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 24,
            "page": 3,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 339,
                    "y": 280
                },
                {
                    "x": 2162,
                    "y": 280
                },
                {
                    "x": 2162,
                    "y": 916
                },
                {
                    "x": 339,
                    "y": 916
                }
            ],
            "category": "figure",
            "html": "<figure><img id='25' style='font-size:14px' alt=\"Stage 1: Discover Reasoning Structure on Task-Level Reasoning Structure\nKey-Value pairs\n{\nLanguage Task: Reasoning 'Type and color of each item' :\n' '\nModel colored objects 'Number of items of each color' :\n''\nSelf-Discover 'Number of items of each type ' :\n''\n'Number of items of each color and type' :\nAtomic Reasoning Modules 'Final answer' :\n}\nStage 2: Solve Problems Using Discovered Structure on Instance-Level\nFill in the Values based on\nKeys during decoding\nTask Instance Reasoning Structure Language\nAnswer\nModel\" data-coord=\"top-left:(339,280); bottom-right:(2162,916)\" /></figure>",
            "id": 25,
            "page": 3,
            "text": "Stage 1: Discover Reasoning Structure on Task-Level Reasoning Structure Key-Value pairs { Language Task: Reasoning \"Type and color of each item\" : \" \" Model colored objects \"Number of items of each color\" : \"\" Self-Discover \"Number of items of each type \" : \"\" \"Number of items of each color and type\" : Atomic Reasoning Modules \"Final answer\" : } Stage 2: Solve Problems Using Discovered Structure on Instance-Level Fill in the Values based on Keys during decoding Task Instance Reasoning Structure Language Answer Model"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 976
                },
                {
                    "x": 2262,
                    "y": 976
                },
                {
                    "x": 2262,
                    "y": 1113
                },
                {
                    "x": 223,
                    "y": 1113
                }
            ],
            "category": "caption",
            "html": "<caption id='26' style='font-size:14px'>Figure 2. Illustration of using SELF-DISCOVER for problem-solving. Given a generative LM, task, and seed reasoning module<br>descriptions, we guide LMs to generate a reasoning structure in key-value format to solve the task. Finally, models can follow the<br>self-discovered structures to solve the every instance from the task by filling in the values in JSON step-by-step.</caption>",
            "id": 26,
            "page": 3,
            "text": "Figure 2. Illustration of using SELF-DISCOVER for problem-solving. Given a generative LM, task, and seed reasoning module descriptions, we guide LMs to generate a reasoning structure in key-value format to solve the task. Finally, models can follow the self-discovered structures to solve the every instance from the task by filling in the values in JSON step-by-step."
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 1161
                },
                {
                    "x": 1214,
                    "y": 1161
                },
                {
                    "x": 1214,
                    "y": 1508
                },
                {
                    "x": 223,
                    "y": 1508
                }
            ],
            "category": "paragraph",
            "html": "<p id='27' style='font-size:16px'>the meta-prompts and full prompts are shown in Appendix.<br>Stage 1 operates on task-level, meaning we only need to run<br>SELF-DISCOVER once for each task. Then, in Stage 2, we<br>can simply use the discovered reasoning structure to solve<br>every instance of the given task by instructing models to<br>follow the provided structure by filling each key and arrive<br>at a final answer.</p>",
            "id": 27,
            "page": 3,
            "text": "the meta-prompts and full prompts are shown in Appendix. Stage 1 operates on task-level, meaning we only need to run SELF-DISCOVER once for each task. Then, in Stage 2, we can simply use the discovered reasoning structure to solve every instance of the given task by instructing models to follow the provided structure by filling each key and arrive at a final answer."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1564
                },
                {
                    "x": 1137,
                    "y": 1564
                },
                {
                    "x": 1137,
                    "y": 1610
                },
                {
                    "x": 225,
                    "y": 1610
                }
            ],
            "category": "paragraph",
            "html": "<p id='28' style='font-size:18px'>2.1. Stage 1: Self-Discover Task-Specific Structures</p>",
            "id": 28,
            "page": 3,
            "text": "2.1. Stage 1: Self-Discover Task-Specific Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1644
                },
                {
                    "x": 1213,
                    "y": 1644
                },
                {
                    "x": 1213,
                    "y": 2039
                },
                {
                    "x": 224,
                    "y": 2039
                }
            ],
            "category": "paragraph",
            "html": "<p id='29' style='font-size:18px'>The first stage consists of three actions: 1) SELECT, where<br>relevant reasoning modules for task-solving are chosen from<br>the set of reasoning module descriptions; 2) ADAPT, where<br>descriptions of selected reasoning modules are rephrased to<br>be more specific to the task at hand; and 3) IMPLEMENT,<br>where the adapted reasoning descriptions are implemented<br>into a structured actionable plan SO that the task can be<br>solved by following the structure.</p>",
            "id": 29,
            "page": 3,
            "text": "The first stage consists of three actions: 1) SELECT, where relevant reasoning modules for task-solving are chosen from the set of reasoning module descriptions; 2) ADAPT, where descriptions of selected reasoning modules are rephrased to be more specific to the task at hand; and 3) IMPLEMENT, where the adapted reasoning descriptions are implemented into a structured actionable plan SO that the task can be solved by following the structure."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2092
                },
                {
                    "x": 1213,
                    "y": 2092
                },
                {
                    "x": 1213,
                    "y": 2693
                },
                {
                    "x": 224,
                    "y": 2693
                }
            ],
            "category": "paragraph",
            "html": "<p id='30' style='font-size:16px'>SELECT First, not every reasoning module is helpful for<br>every task, SO the first stage of SELF-DISCOVER guides<br>model to select modules that are useful based on task exam-<br>ples. For example, \"reflective thinking\" might help search<br>for first-principle theories on science problems, while \"cre-<br>ative thinking\" helps on generating a novel continuation to<br>a story. Given raw set of reasoning module descriptions<br>D such as \"critical thinking\", and \"break the problem into<br>sub-problems\" (full set in Appendix A), and a few task ex-<br>amples without labels ti E T, SELF-DISCOVER first selects<br>a subset of reasoning modules Ds that are useful for solving<br>the tasks by using a model M and a meta-prompt ps:</p>",
            "id": 30,
            "page": 3,
            "text": "SELECT First, not every reasoning module is helpful for every task, SO the first stage of SELF-DISCOVER guides model to select modules that are useful based on task examples. For example, \"reflective thinking\" might help search for first-principle theories on science problems, while \"creative thinking\" helps on generating a novel continuation to a story. Given raw set of reasoning module descriptions D such as \"critical thinking\", and \"break the problem into sub-problems\" (full set in Appendix A), and a few task examples without labels ti E T, SELF-DISCOVER first selects a subset of reasoning modules Ds that are useful for solving the tasks by using a model M and a meta-prompt ps:"
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2846
                },
                {
                    "x": 1213,
                    "y": 2846
                },
                {
                    "x": 1213,
                    "y": 2991
                },
                {
                    "x": 225,
                    "y": 2991
                }
            ],
            "category": "paragraph",
            "html": "<p id='31' style='font-size:16px'>ADAPT Since each reasoning module provides a general<br>description of how to solve problems, the next step of SELF-<br>DISCOVER aims at tailoring each selected module to the</p>",
            "id": 31,
            "page": 3,
            "text": "ADAPT Since each reasoning module provides a general description of how to solve problems, the next step of SELFDISCOVER aims at tailoring each selected module to the"
        },
        {
            "bounding_box": [
                {
                    "x": 1272,
                    "y": 1162
                },
                {
                    "x": 2264,
                    "y": 1162
                },
                {
                    "x": 2264,
                    "y": 1558
                },
                {
                    "x": 1272,
                    "y": 1558
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='32' style='font-size:16px'>task at hand. For example, from \"break the problem into sub-<br>problems\" to \"calculate each arithmetic operation in order\"<br>for arithmetic problems. Given selected reasoning module<br>subset Ds from the previous step, ADAPT rephrases each<br>of the selected module to be more specific to the task. Sim-<br>ilarly to SELECT, this stage uses a meta-prompt PA and<br>a generative model M to generate the adapted reasoning<br>module descriptions DA:</p>",
            "id": 32,
            "page": 3,
            "text": "task at hand. For example, from \"break the problem into subproblems\" to \"calculate each arithmetic operation in order\" for arithmetic problems. Given selected reasoning module subset Ds from the previous step, ADAPT rephrases each of the selected module to be more specific to the task. Similarly to SELECT, this stage uses a meta-prompt PA and a generative model M to generate the adapted reasoning module descriptions DA:"
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 1677
                },
                {
                    "x": 2264,
                    "y": 1677
                },
                {
                    "x": 2264,
                    "y": 2078
                },
                {
                    "x": 1274,
                    "y": 2078
                }
            ],
            "category": "paragraph",
            "html": "<p id='33' style='font-size:16px'>IMPLEMENT Finally, given the adapted reasoning mod-<br>ule descriptions DA, SELF-DISCOVER operationalizes the<br>reasoning modules into an implemented reasoning struc-<br>ture DI with specified instruction on what to generate for<br>each step. In addition to a meta prompt PI, IMPLEMENT<br>also provides a demonstration of a human-written reason-<br>ing structure Shuman on another task to better convert the<br>natural language descriptions into a reasoning structure:</p>",
            "id": 33,
            "page": 3,
            "text": "IMPLEMENT Finally, given the adapted reasoning module descriptions DA, SELF-DISCOVER operationalizes the reasoning modules into an implemented reasoning structure DI with specified instruction on what to generate for each step. In addition to a meta prompt PI, IMPLEMENT also provides a demonstration of a human-written reasoning structure Shuman on another task to better convert the natural language descriptions into a reasoning structure:"
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 2197
                },
                {
                    "x": 2249,
                    "y": 2197
                },
                {
                    "x": 2249,
                    "y": 2241
                },
                {
                    "x": 1274,
                    "y": 2241
                }
            ],
            "category": "paragraph",
            "html": "<p id='34' style='font-size:18px'>2.2. Stage 2: Tackle Tasks Using Discovered Structures</p>",
            "id": 34,
            "page": 3,
            "text": "2.2. Stage 2: Tackle Tasks Using Discovered Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 2274
                },
                {
                    "x": 2261,
                    "y": 2274
                },
                {
                    "x": 2261,
                    "y": 2520
                },
                {
                    "x": 1274,
                    "y": 2520
                }
            ],
            "category": "paragraph",
            "html": "<p id='35' style='font-size:16px'>After the three stages, we have an implemented reasoning<br>structure DI uniquely adapted for the task we need to solve<br>T. Then we can simply append the reasoning structure to<br>all instances of the task and prompt models to follow the<br>reasoning structure to generate an answer A:</p>",
            "id": 35,
            "page": 3,
            "text": "After the three stages, we have an implemented reasoning structure DI uniquely adapted for the task we need to solve T. Then we can simply append the reasoning structure to all instances of the task and prompt models to follow the reasoning structure to generate an answer A:"
        },
        {
            "bounding_box": [
                {
                    "x": 1276,
                    "y": 2619
                },
                {
                    "x": 2164,
                    "y": 2619
                },
                {
                    "x": 2164,
                    "y": 2664
                },
                {
                    "x": 1276,
                    "y": 2664
                }
            ],
            "category": "paragraph",
            "html": "<p id='36' style='font-size:18px'>More details of prompts are included in Appendix A.</p>",
            "id": 36,
            "page": 3,
            "text": "More details of prompts are included in Appendix A."
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 2729
                },
                {
                    "x": 1720,
                    "y": 2729
                },
                {
                    "x": 1720,
                    "y": 2784
                },
                {
                    "x": 1274,
                    "y": 2784
                }
            ],
            "category": "paragraph",
            "html": "<p id='37' style='font-size:22px'>3. Experiment Setup</p>",
            "id": 37,
            "page": 3,
            "text": "3. Experiment Setup"
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 2817
                },
                {
                    "x": 1458,
                    "y": 2817
                },
                {
                    "x": 1458,
                    "y": 2861
                },
                {
                    "x": 1275,
                    "y": 2861
                }
            ],
            "category": "paragraph",
            "html": "<p id='38' style='font-size:18px'>3.1. Tasks</p>",
            "id": 38,
            "page": 3,
            "text": "3.1. Tasks"
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 2896
                },
                {
                    "x": 2259,
                    "y": 2896
                },
                {
                    "x": 2259,
                    "y": 2990
                },
                {
                    "x": 1275,
                    "y": 2990
                }
            ],
            "category": "paragraph",
            "html": "<p id='39' style='font-size:18px'>We focus on diverse reasoning benchmarks that are still<br>challenging for LLMs: BIG-Bench Hard (BBH) (Suzgun</p>",
            "id": 39,
            "page": 3,
            "text": "We focus on diverse reasoning benchmarks that are still challenging for LLMs: BIG-Bench Hard (BBH) (Suzgun"
        },
        {
            "bounding_box": [
                {
                    "x": 1229,
                    "y": 3051
                },
                {
                    "x": 1256,
                    "y": 3051
                },
                {
                    "x": 1256,
                    "y": 3087
                },
                {
                    "x": 1229,
                    "y": 3087
                }
            ],
            "category": "footer",
            "html": "<footer id='40' style='font-size:16px'>3</footer>",
            "id": 40,
            "page": 3,
            "text": "3"
        },
        {
            "bounding_box": [
                {
                    "x": 601,
                    "y": 194
                },
                {
                    "x": 1882,
                    "y": 194
                },
                {
                    "x": 1882,
                    "y": 234
                },
                {
                    "x": 601,
                    "y": 234
                }
            ],
            "category": "header",
            "html": "<header id='41' style='font-size:22px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 41,
            "page": 4,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 337,
                    "y": 275
                },
                {
                    "x": 2153,
                    "y": 275
                },
                {
                    "x": 2153,
                    "y": 1058
                },
                {
                    "x": 337,
                    "y": 1058
                }
            ],
            "category": "figure",
            "html": "<figure><img id='42' style='font-size:14px' alt=\"Selected\nSelf-Discover Modules\nAll Seed Modules\nStep-by-step Step-by-step\nSELECT Break down Language\nBreak down\nModel\nPropose-verify\n...\nAdapted Modules\nSelected Language Step-by-step analyze each item\nADAPT\nModules Model Break down to type and color ..\nReasoning Structure\nIMPLEMENT Adapted Language { 'Type and color of each item' :\nModules Model 'Number of items of each color' :\n'Number of items of each type' :\n}\" data-coord=\"top-left:(337,275); bottom-right:(2153,1058)\" /></figure>",
            "id": 42,
            "page": 4,
            "text": "Selected Self-Discover Modules All Seed Modules Step-by-step Step-by-step SELECT Break down Language Break down Model Propose-verify ... Adapted Modules Selected Language Step-by-step analyze each item ADAPT Modules Model Break down to type and color .. Reasoning Structure IMPLEMENT Adapted Language { \"Type and color of each item\" : Modules Model \"Number of items of each color\" : \"Number of items of each type\" : }"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1112
                },
                {
                    "x": 2262,
                    "y": 1112
                },
                {
                    "x": 2262,
                    "y": 1205
                },
                {
                    "x": 224,
                    "y": 1205
                }
            ],
            "category": "caption",
            "html": "<caption id='43' style='font-size:16px'>Figure 3. Illustration of three actions of SELF-DISCOVER. We use LMs to compose a coherent reasoning structure by selecting relevant<br>modules, adapting to task-specific descriptions, and implement a reasoning structure in JSON.</caption>",
            "id": 43,
            "page": 4,
            "text": "Figure 3. Illustration of three actions of SELF-DISCOVER. We use LMs to compose a coherent reasoning structure by selecting relevant modules, adapting to task-specific descriptions, and implement a reasoning structure in JSON."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1250
                },
                {
                    "x": 1215,
                    "y": 1250
                },
                {
                    "x": 1215,
                    "y": 2103
                },
                {
                    "x": 224,
                    "y": 2103
                }
            ],
            "category": "paragraph",
            "html": "<p id='44' style='font-size:20px'>et al., 2022) contains 23 carefully-selected challenging tasks<br>from BIG-Bench (Srivastava et al., 2023). BBH tasks cover<br>a diverse range of reasoning problems spanning the follow-<br>ing 4 categories according to their authors: 1) Algorithmic<br>and Multi-Step Arithmetic Reasoning, 2) Natural Language<br>Understanding, 3) Use of World Knowledge, and 4) Mul-<br>tilingual Knowledge and Reasoning. We also test on a<br>grounded social agent reasoning task called Thinking for<br>Doing (T4D) where models must leverage mental state rea-<br>soning to determine actions to perform (Zhou et al., 2023),<br>where GPT-4 with CoT only reaches around 50%. Finally,<br>we subsample 200 examples from the MATH (Hendrycks<br>et al., 2021) test set, and generate instance-level reasoning<br>structures via a one-shot demonstration to adapt to the com-<br>plexity of MATH tasks. For evaluations, we use accuracy to<br>measure the model performance on BBH, T4D and MATH<br>(details can be found in Appendix B).</p>",
            "id": 44,
            "page": 4,
            "text": ", 2022) contains 23 carefully-selected challenging tasks from BIG-Bench (Srivastava , 2023). BBH tasks cover a diverse range of reasoning problems spanning the following 4 categories according to their authors: 1) Algorithmic and Multi-Step Arithmetic Reasoning, 2) Natural Language Understanding, 3) Use of World Knowledge, and 4) Multilingual Knowledge and Reasoning. We also test on a grounded social agent reasoning task called Thinking for Doing (T4D) where models must leverage mental state reasoning to determine actions to perform (Zhou , 2023), where GPT-4 with CoT only reaches around 50%. Finally, we subsample 200 examples from the MATH (Hendrycks , 2021) test set, and generate instance-level reasoning structures via a one-shot demonstration to adapt to the complexity of MATH tasks. For evaluations, we use accuracy to measure the model performance on BBH, T4D and MATH (details can be found in Appendix B)."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2155
                },
                {
                    "x": 436,
                    "y": 2155
                },
                {
                    "x": 436,
                    "y": 2200
                },
                {
                    "x": 224,
                    "y": 2200
                }
            ],
            "category": "paragraph",
            "html": "<p id='45' style='font-size:20px'>3.2. Models</p>",
            "id": 45,
            "page": 4,
            "text": "3.2. Models"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 2233
                },
                {
                    "x": 1215,
                    "y": 2233
                },
                {
                    "x": 1215,
                    "y": 2479
                },
                {
                    "x": 223,
                    "y": 2479
                }
            ],
            "category": "paragraph",
            "html": "<p id='46' style='font-size:20px'>We use several state-of-the-art LLMs: GPT-4 (gpt-4-turbo-<br>preview) (OpenAI, 2023b), GPT-3.5-turbo (ChatGPT) (Ope-<br>nAI, 2022)1 , instruction-tuned PaLM 2-L (Anil et al.,<br>2023)2, and an open-source LLM Llama2-70B (Touvron<br>et al., 2023).</p>",
            "id": 46,
            "page": 4,
            "text": "We use several state-of-the-art LLMs: GPT-4 (gpt-4-turbopreview) (OpenAI, 2023b), GPT-3.5-turbo (ChatGPT) (OpenAI, 2022)1 , instruction-tuned PaLM 2-L (Anil , 2023)2, and an open-source LLM Llama2-70B (Touvron , 2023)."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2537
                },
                {
                    "x": 472,
                    "y": 2537
                },
                {
                    "x": 472,
                    "y": 2583
                },
                {
                    "x": 225,
                    "y": 2583
                }
            ],
            "category": "paragraph",
            "html": "<p id='47' style='font-size:18px'>3.3. Baselines</p>",
            "id": 47,
            "page": 4,
            "text": "3.3. Baselines"
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2615
                },
                {
                    "x": 1213,
                    "y": 2615
                },
                {
                    "x": 1213,
                    "y": 2712
                },
                {
                    "x": 225,
                    "y": 2712
                }
            ],
            "category": "paragraph",
            "html": "<p id='48' style='font-size:20px'>We compare SELF-DISCOVER with other zero-shot prompt-<br>ing methods for LLM reasoning:</p>",
            "id": 48,
            "page": 4,
            "text": "We compare SELF-DISCOVER with other zero-shot prompting methods for LLM reasoning:"
        },
        {
            "bounding_box": [
                {
                    "x": 279,
                    "y": 2746
                },
                {
                    "x": 850,
                    "y": 2746
                },
                {
                    "x": 850,
                    "y": 2787
                },
                {
                    "x": 279,
                    "y": 2787
                }
            ],
            "category": "paragraph",
            "html": "<p id='49' style='font-size:14px'>1 accessed in October-December 2023</p>",
            "id": 49,
            "page": 4,
            "text": "1 accessed in October-December 2023"
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2794
                },
                {
                    "x": 1213,
                    "y": 2794
                },
                {
                    "x": 1213,
                    "y": 2918
                },
                {
                    "x": 225,
                    "y": 2918
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='50' style='font-size:14px'>2For MATH, we use a PaLM 2-L model with a stronger instruc-<br>tion tuning to enable better instruction following of more complex<br>reasoning structures.</p>",
            "id": 50,
            "page": 4,
            "text": "2For MATH, we use a PaLM 2-L model with a stronger instruction tuning to enable better instruction following of more complex reasoning structures."
        },
        {
            "bounding_box": [
                {
                    "x": 1319,
                    "y": 1250
                },
                {
                    "x": 2264,
                    "y": 1250
                },
                {
                    "x": 2264,
                    "y": 1871
                },
                {
                    "x": 1319,
                    "y": 1871
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='51' style='font-size:18px'>● Direct Prompting, where model directly generates the<br>answer without intermediate reasoning steps.<br>· CoT (Wei et al., 2022; Kojima et al., 2022), where<br>models are prompted to generate a reasoning process<br>leading to the final answer.<br>· Plan-and-Solve (Wang et al., 2023), where models are<br>prompted to first generate a plan and then solve the<br>problem. SELF-DISCOVER differs by grounding the<br>reasoning structure in atomic reasoning modules, and<br>prompting the decoding to follow the explicit key-value<br>reasoning structure.</p>",
            "id": 51,
            "page": 4,
            "text": "● Direct Prompting, where model directly generates the answer without intermediate reasoning steps. · CoT (Wei , 2022; Kojima , 2022), where models are prompted to generate a reasoning process leading to the final answer. · Plan-and-Solve (Wang , 2023), where models are prompted to first generate a plan and then solve the problem. SELF-DISCOVER differs by grounding the reasoning structure in atomic reasoning modules, and prompting the decoding to follow the explicit key-value reasoning structure."
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 1924
                },
                {
                    "x": 2264,
                    "y": 1924
                },
                {
                    "x": 2264,
                    "y": 2170
                },
                {
                    "x": 1273,
                    "y": 2170
                }
            ],
            "category": "paragraph",
            "html": "<p id='52' style='font-size:16px'>Next, we also consider other baselines that make use of<br>the raw seed reasoning modules (RM) we pass to SELF-<br>DISCOVER. We compare with the following methods' per-<br>formance and the inference call efficiency on a subset of<br>tasks.</p>",
            "id": 52,
            "page": 4,
            "text": "Next, we also consider other baselines that make use of the raw seed reasoning modules (RM) we pass to SELFDISCOVER. We compare with the following methods' performance and the inference call efficiency on a subset of tasks."
        },
        {
            "bounding_box": [
                {
                    "x": 1323,
                    "y": 2230
                },
                {
                    "x": 2264,
                    "y": 2230
                },
                {
                    "x": 2264,
                    "y": 2429
                },
                {
                    "x": 1323,
                    "y": 2429
                }
            ],
            "category": "paragraph",
            "html": "<p id='53' style='font-size:16px'>· CoT-Self-Consistency (Wang et al., 2022), we sample<br>multiple outputs from LLM with CoT and aggregate an-<br>swers to get the final answer. We compare this method<br>on a subset of tasks due to the cost of repetitive queries.</p>",
            "id": 53,
            "page": 4,
            "text": "· CoT-Self-Consistency (Wang , 2022), we sample multiple outputs from LLM with CoT and aggregate answers to get the final answer. We compare this method on a subset of tasks due to the cost of repetitive queries."
        },
        {
            "bounding_box": [
                {
                    "x": 1321,
                    "y": 2459
                },
                {
                    "x": 2264,
                    "y": 2459
                },
                {
                    "x": 2264,
                    "y": 2861
                },
                {
                    "x": 1321,
                    "y": 2861
                }
            ],
            "category": "paragraph",
            "html": "<p id='54' style='font-size:16px'>· Majority voting of each RM: we prompt models to<br>solve the tasks by appending each RM and use majority<br>voting of all answers to get the final answer. We exam-<br>ine whether integrating multiple RMs into a coherent<br>reasoning structure is advantageous to applying each<br>RM to solve the task and use majority voting to ensem-<br>ble them post-hoc, which costs much more inference<br>computation.</p>",
            "id": 54,
            "page": 4,
            "text": "· Majority voting of each RM: we prompt models to solve the tasks by appending each RM and use majority voting of all answers to get the final answer. We examine whether integrating multiple RMs into a coherent reasoning structure is advantageous to applying each RM to solve the task and use majority voting to ensemble them post-hoc, which costs much more inference computation."
        },
        {
            "bounding_box": [
                {
                    "x": 1322,
                    "y": 2894
                },
                {
                    "x": 2265,
                    "y": 2894
                },
                {
                    "x": 2265,
                    "y": 2992
                },
                {
                    "x": 1322,
                    "y": 2992
                }
            ],
            "category": "paragraph",
            "html": "<p id='55' style='font-size:14px'>● Best of each RM: this method assumes that we have ac-<br>cess to oracle labels and uses the highest accuracy from</p>",
            "id": 55,
            "page": 4,
            "text": "● Best of each RM: this method assumes that we have access to oracle labels and uses the highest accuracy from"
        },
        {
            "bounding_box": [
                {
                    "x": 1228,
                    "y": 3050
                },
                {
                    "x": 1257,
                    "y": 3050
                },
                {
                    "x": 1257,
                    "y": 3088
                },
                {
                    "x": 1228,
                    "y": 3088
                }
            ],
            "category": "footer",
            "html": "<footer id='56' style='font-size:16px'>4</footer>",
            "id": 56,
            "page": 4,
            "text": "4"
        },
        {
            "bounding_box": [
                {
                    "x": 602,
                    "y": 193
                },
                {
                    "x": 1882,
                    "y": 193
                },
                {
                    "x": 1882,
                    "y": 235
                },
                {
                    "x": 602,
                    "y": 235
                }
            ],
            "category": "header",
            "html": "<header id='57' style='font-size:22px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 57,
            "page": 5,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 313
                },
                {
                    "x": 1213,
                    "y": 313
                },
                {
                    "x": 1213,
                    "y": 494
                },
                {
                    "x": 223,
                    "y": 494
                }
            ],
            "category": "caption",
            "html": "<caption id='58' style='font-size:16px'>Table 1. Self-Discover significantly improves LLM reasoning<br>across a diverse set of 25 complex tasks: BBH, T4D and MATH.<br>CoT: zero-shot Chain of Thought (Kojima et al., 2022). PS: plan-<br>and-solve prompting (Wang et al., 2023).</caption>",
            "id": 58,
            "page": 5,
            "text": "Table 1. Self-Discover significantly improves LLM reasoning across a diverse set of 25 complex tasks: BBH, T4D and MATH. CoT: zero-shot Chain of Thought (Kojima , 2022). PS: planand-solve prompting (Wang , 2023)."
        },
        {
            "bounding_box": [
                {
                    "x": 249,
                    "y": 511
                },
                {
                    "x": 1188,
                    "y": 511
                },
                {
                    "x": 1188,
                    "y": 1034
                },
                {
                    "x": 249,
                    "y": 1034
                }
            ],
            "category": "table",
            "html": "<br><table id='59' style='font-size:18px'><tr><td>Method</td><td>BBH</td><td>T4D</td><td>MATH</td></tr><tr><td>PaLM 2-L</td><td>56%</td><td>30%</td><td>45%</td></tr><tr><td>PaLM 2-L + CoT</td><td>60%</td><td>40%</td><td>42%</td></tr><tr><td>PaLM 2-L + PS</td><td>61%</td><td>42%</td><td>49%</td></tr><tr><td>PaLM 2-L + Self-Discover</td><td>67%</td><td>69%</td><td>50.5%</td></tr><tr><td>GPT-4</td><td>58%</td><td>51%</td><td>70.5%</td></tr><tr><td>GPT-4 + CoT</td><td>75%</td><td>52%</td><td>71%</td></tr><tr><td>GPT-4 + PS</td><td>73%</td><td>53%</td><td>70%</td></tr><tr><td>GPT-4 + Self-Discover</td><td>81 %</td><td>85 %</td><td>73%</td></tr></table>",
            "id": 59,
            "page": 5,
            "text": "Method BBH T4D MATH  PaLM 2-L 56% 30% 45%  PaLM 2-L + CoT 60% 40% 42%  PaLM 2-L + PS 61% 42% 49%  PaLM 2-L + Self-Discover 67% 69% 50.5%  GPT-4 58% 51% 70.5%  GPT-4 + CoT 75% 52% 71%  GPT-4 + PS 73% 53% 70%  GPT-4 + Self-Discover 81 % 85 %"
        },
        {
            "bounding_box": [
                {
                    "x": 302,
                    "y": 1080
                },
                {
                    "x": 1214,
                    "y": 1080
                },
                {
                    "x": 1214,
                    "y": 1273
                },
                {
                    "x": 302,
                    "y": 1273
                }
            ],
            "category": "paragraph",
            "html": "<p id='60' style='font-size:18px'>applying each RM. We compare with this to examine<br>whether SELF-DISCOVER competes with methods that<br>depend on perfect prior knowledge of which RM to<br>use on a new task.</p>",
            "id": 60,
            "page": 5,
            "text": "applying each RM. We compare with this to examine whether SELF-DISCOVER competes with methods that depend on perfect prior knowledge of which RM to use on a new task."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1341
                },
                {
                    "x": 1214,
                    "y": 1341
                },
                {
                    "x": 1214,
                    "y": 1690
                },
                {
                    "x": 224,
                    "y": 1690
                }
            ],
            "category": "paragraph",
            "html": "<p id='61' style='font-size:18px'>Furthermore, for analysis on universality of reasoning struc-<br>tures, we compare with a prompt-optimization method that<br>require a training set to improve prompts: LLMs as optimiz-<br>ers (OPRO) (Yang et al., 2023). We aim to show that when<br>we apply structures or prompts optimized from one model,<br>the reasoning structures can retain more performance gains<br>than the wordings of prompts.</p>",
            "id": 61,
            "page": 5,
            "text": "Furthermore, for analysis on universality of reasoning structures, we compare with a prompt-optimization method that require a training set to improve prompts: LLMs as optimizers (OPRO) (Yang , 2023). We aim to show that when we apply structures or prompts optimized from one model, the reasoning structures can retain more performance gains than the wordings of prompts."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1756
                },
                {
                    "x": 439,
                    "y": 1756
                },
                {
                    "x": 439,
                    "y": 1804
                },
                {
                    "x": 225,
                    "y": 1804
                }
            ],
            "category": "paragraph",
            "html": "<p id='62' style='font-size:22px'>4. Results</p>",
            "id": 62,
            "page": 5,
            "text": "4. Results"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1841
                },
                {
                    "x": 1213,
                    "y": 1841
                },
                {
                    "x": 1213,
                    "y": 2288
                },
                {
                    "x": 224,
                    "y": 2288
                }
            ],
            "category": "paragraph",
            "html": "<p id='63' style='font-size:20px'>We answer the following questions through experimental<br>results: 1) Does discovering reasoning structures improve<br>LLM reasoning capabilities? (4.1) 2) Which categories<br>of problems do SELF-DISCOVER perform the best? (4.2)<br>and 3) Can SELF-DISCOVER boost LLM performance ef-<br>ficiently? (4.3) Finally, we will show qualitative examples<br>of self-discovered structures, LLM output following the<br>structures, and compare with LLM output following other<br>prompting methods for reasoning (4.4).</p>",
            "id": 63,
            "page": 5,
            "text": "We answer the following questions through experimental results: 1) Does discovering reasoning structures improve LLM reasoning capabilities? (4.1) 2) Which categories of problems do SELF-DISCOVER perform the best? (4.2) and 3) Can SELF-DISCOVER boost LLM performance efficiently? (4.3) Finally, we will show qualitative examples of self-discovered structures, LLM output following the structures, and compare with LLM output following other prompting methods for reasoning (4.4)."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2343
                },
                {
                    "x": 1192,
                    "y": 2343
                },
                {
                    "x": 1192,
                    "y": 2390
                },
                {
                    "x": 225,
                    "y": 2390
                }
            ],
            "category": "paragraph",
            "html": "<p id='64' style='font-size:20px'>4.1. Does SELF-DISCOVER Improve LLM Reasoning?</p>",
            "id": 64,
            "page": 5,
            "text": "4.1. Does SELF-DISCOVER Improve LLM Reasoning?"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 2421
                },
                {
                    "x": 1213,
                    "y": 2421
                },
                {
                    "x": 1213,
                    "y": 2719
                },
                {
                    "x": 223,
                    "y": 2719
                }
            ],
            "category": "paragraph",
            "html": "<p id='65' style='font-size:20px'>Overall, SELF-DISCOVER improves PaLM 2-L and GPT-<br>4's reasoning across diverse set of reasoning tasks. Ta-<br>ble 1 shows the overall results on complex reasoning tasks<br>of BBH, T4D and MATH using PaLM 2-L and GPT-4.<br>We compare Self-Discover with baselines including direct<br>prompting, CoT, and Plan-and-Solve (PS).</p>",
            "id": 65,
            "page": 5,
            "text": "Overall, SELF-DISCOVER improves PaLM 2-L and GPT4's reasoning across diverse set of reasoning tasks. Table 1 shows the overall results on complex reasoning tasks of BBH, T4D and MATH using PaLM 2-L and GPT-4. We compare Self-Discover with baselines including direct prompting, CoT, and Plan-and-Solve (PS)."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2745
                },
                {
                    "x": 1213,
                    "y": 2745
                },
                {
                    "x": 1213,
                    "y": 2992
                },
                {
                    "x": 224,
                    "y": 2992
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='66' style='font-size:18px'>On aggregated 23 tasks of BBH, SELF-DISCOVER achieves<br>7% and 6% absolute improvement on PaLM 2-L over Chain-<br>of-Thought and Plan-and-Solve, respectively. Similar gains<br>(6% and 8%) are observed when SELF-DISCOVER is applied<br>to GPT-4. Breakdown results of each task's improvement</p>",
            "id": 66,
            "page": 5,
            "text": "On aggregated 23 tasks of BBH, SELF-DISCOVER achieves 7% and 6% absolute improvement on PaLM 2-L over Chainof-Thought and Plan-and-Solve, respectively. Similar gains (6% and 8%) are observed when SELF-DISCOVER is applied to GPT-4. Breakdown results of each task's improvement"
        },
        {
            "bounding_box": [
                {
                    "x": 1304,
                    "y": 285
                },
                {
                    "x": 2213,
                    "y": 285
                },
                {
                    "x": 2213,
                    "y": 846
                },
                {
                    "x": 1304,
                    "y": 846
                }
            ],
            "category": "figure",
            "html": "<br><figure><img id='67' style='font-size:14px' alt=\"Self-Discover Performance Improvement Across 4 Categories\n25\nSelf-Discover Over Direct\nSelf-Discover Over CoT\n19.8 19.7\n190 20\nDelta 15 14.2 14.3\nAccuracy\n12.0\n10\n8.0\nAvg.\n5.2\n5\n4.0\n0\nMultilingual Algorithmic NLU World Knowledge\nProblem Categories\" data-coord=\"top-left:(1304,285); bottom-right:(2213,846)\" /></figure>",
            "id": 67,
            "page": 5,
            "text": "Self-Discover Performance Improvement Across 4 Categories 25 Self-Discover Over Direct Self-Discover Over CoT 19.8 19.7 190 20 Delta 15 14.2 14.3 Accuracy 12.0 10 8.0 Avg. 5.2 5 4.0 0 Multilingual Algorithmic NLU World Knowledge Problem Categories"
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 854
                },
                {
                    "x": 2265,
                    "y": 854
                },
                {
                    "x": 2265,
                    "y": 991
                },
                {
                    "x": 1275,
                    "y": 991
                }
            ],
            "category": "caption",
            "html": "<br><caption id='68' style='font-size:14px'>Figure 4. Breakdown of SELF-DISCOVER performance im-<br>provement on 4 categories on PaLM 2-L. SELF-DISCOVER per-<br>forms the best on tasks requiring world knowledge.</caption>",
            "id": 68,
            "page": 5,
            "text": "Figure 4. Breakdown of SELF-DISCOVER performance improvement on 4 categories on PaLM 2-L. SELF-DISCOVER performs the best on tasks requiring world knowledge."
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 1045
                },
                {
                    "x": 2261,
                    "y": 1045
                },
                {
                    "x": 2261,
                    "y": 1240
                },
                {
                    "x": 1274,
                    "y": 1240
                }
            ],
            "category": "paragraph",
            "html": "<p id='69' style='font-size:16px'>over direct answering and CoT of PaLM 2-L are shown<br>in Figure 1, where we find SELF-DISCOVER outperforms<br>them on over 20/24 tasks. For a per-task performance for<br>all 23 BBH tasks, please refer to Appendix C.</p>",
            "id": 69,
            "page": 5,
            "text": "over direct answering and CoT of PaLM 2-L are shown in Figure 1, where we find SELF-DISCOVER outperforms them on over 20/24 tasks. For a per-task performance for all 23 BBH tasks, please refer to Appendix C."
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 1267
                },
                {
                    "x": 2265,
                    "y": 1267
                },
                {
                    "x": 2265,
                    "y": 1762
                },
                {
                    "x": 1274,
                    "y": 1762
                }
            ],
            "category": "paragraph",
            "html": "<p id='70' style='font-size:18px'>On the grounded social agent task T4D, SELF-<br>DISCOVER reaches over ≥ 27% (32%) absolute<br>improvement over all baselines on PaLM 2-L (GPT-4).<br>SELF-DISCOVER achieves 69% and 85% accuracy on<br>PaLM 2-L and GPT-4, significantly outperforming previous<br>SoTA prompting method such as Foresee and Reflect (FaR)<br>which employs an expert-designed reasoning structure.<br>In contrast, SELF-DISCOVER generates the reasoning<br>structure automatically from a set of atomic reasoning<br>modules without human interventions.</p>",
            "id": 70,
            "page": 5,
            "text": "On the grounded social agent task T4D, SELFDISCOVER reaches over ≥ 27% (32%) absolute improvement over all baselines on PaLM 2-L (GPT-4). SELF-DISCOVER achieves 69% and 85% accuracy on PaLM 2-L and GPT-4, significantly outperforming previous SoTA prompting method such as Foresee and Reflect (FaR) which employs an expert-designed reasoning structure. In contrast, SELF-DISCOVER generates the reasoning structure automatically from a set of atomic reasoning modules without human interventions."
        },
        {
            "bounding_box": [
                {
                    "x": 1272,
                    "y": 1790
                },
                {
                    "x": 2264,
                    "y": 1790
                },
                {
                    "x": 2264,
                    "y": 2239
                },
                {
                    "x": 1272,
                    "y": 2239
                }
            ],
            "category": "paragraph",
            "html": "<p id='71' style='font-size:18px'>For MATH, we observe a moderate gain of 1%-7% (2%-3%)<br>on PaLM 2-L (GPT-4) from SELF-DISCOVER compared<br>to the baselines. Upon error analysis (see Appendix D for<br>details), we find that the reasoning structures generated by<br>PaLM 2-L from SELF-DISCOVER are correct 87.5% of the<br>time: human experts can follow the reasoning structures<br>to solve the tasks perfectly. The majority of the failures<br>(74.7%) comes from errors in executing the computations,<br>consistent with prior findings (Zheng et al., 2023).</p>",
            "id": 71,
            "page": 5,
            "text": "For MATH, we observe a moderate gain of 1%-7% (2%-3%) on PaLM 2-L (GPT-4) from SELF-DISCOVER compared to the baselines. Upon error analysis (see Appendix D for details), we find that the reasoning structures generated by PaLM 2-L from SELF-DISCOVER are correct 87.5% of the time: human experts can follow the reasoning structures to solve the tasks perfectly. The majority of the failures (74.7%) comes from errors in executing the computations, consistent with prior findings (Zheng , 2023)."
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 2293
                },
                {
                    "x": 1946,
                    "y": 2293
                },
                {
                    "x": 1946,
                    "y": 2389
                },
                {
                    "x": 1275,
                    "y": 2389
                }
            ],
            "category": "paragraph",
            "html": "<p id='72' style='font-size:20px'>4.2. Which Types of Problems Do<br>SELF-DISCOVER Help the Most?</p>",
            "id": 72,
            "page": 5,
            "text": "4.2. Which Types of Problems Do SELF-DISCOVER Help the Most?"
        },
        {
            "bounding_box": [
                {
                    "x": 1272,
                    "y": 2419
                },
                {
                    "x": 2266,
                    "y": 2419
                },
                {
                    "x": 2266,
                    "y": 2915
                },
                {
                    "x": 1272,
                    "y": 2915
                }
            ],
            "category": "paragraph",
            "html": "<p id='73' style='font-size:18px'>SELF-DISCOVER performs best on tasks that require<br>diverse world knowledge. Figure 4 presents the aver-<br>age improvement in terms of delta in accuracy of SELF-<br>DISCOVER over direct answer and CoT on 4 categories<br>of reasoning tasks we test. We adopt the categoriza-<br>tion from Suzgun et al. (2022). We find that SELF-<br>DISCOVER improves over these two baselines on all cate-<br>gories, but especially on tasks that require world knowledge<br>such as sports understanding, movie recommendation, and<br>ruin names.</p>",
            "id": 73,
            "page": 5,
            "text": "SELF-DISCOVER performs best on tasks that require diverse world knowledge. Figure 4 presents the average improvement in terms of delta in accuracy of SELFDISCOVER over direct answer and CoT on 4 categories of reasoning tasks we test. We adopt the categorization from Suzgun  (2022). We find that SELFDISCOVER improves over these two baselines on all categories, but especially on tasks that require world knowledge such as sports understanding, movie recommendation, and ruin names."
        },
        {
            "bounding_box": [
                {
                    "x": 1276,
                    "y": 2945
                },
                {
                    "x": 2259,
                    "y": 2945
                },
                {
                    "x": 2259,
                    "y": 2991
                },
                {
                    "x": 1276,
                    "y": 2991
                }
            ],
            "category": "paragraph",
            "html": "<p id='74' style='font-size:16px'>These tasks demand models to reason using fact and general</p>",
            "id": 74,
            "page": 5,
            "text": "These tasks demand models to reason using fact and general"
        },
        {
            "bounding_box": [
                {
                    "x": 1227,
                    "y": 3048
                },
                {
                    "x": 1258,
                    "y": 3048
                },
                {
                    "x": 1258,
                    "y": 3089
                },
                {
                    "x": 1227,
                    "y": 3089
                }
            ],
            "category": "footer",
            "html": "<footer id='75' style='font-size:18px'>5</footer>",
            "id": 75,
            "page": 5,
            "text": "5"
        },
        {
            "bounding_box": [
                {
                    "x": 599,
                    "y": 191
                },
                {
                    "x": 1883,
                    "y": 191
                },
                {
                    "x": 1883,
                    "y": 236
                },
                {
                    "x": 599,
                    "y": 236
                }
            ],
            "category": "header",
            "html": "<header id='76' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 76,
            "page": 6,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 326,
                    "y": 236
                },
                {
                    "x": 2131,
                    "y": 236
                },
                {
                    "x": 2131,
                    "y": 920
                },
                {
                    "x": 326,
                    "y": 920
                }
            ],
            "category": "figure",
            "html": "<figure><img id='77' style='font-size:14px' alt=\"BBH-Movie Recommendation BBH-Geometric Shapes\n85 60\n55\nAccuracy\n80 Self-Discover\nDirect\n50\nCoT\nCoT+Self-Consistency\n75\nAverage\n45 Plan-and-Solve\nx Majority voting each RM\n40 Best of each RM*\n70\n35\n65\n0 10 20 30 40 0 10 20 30 40\n# of Inference Calls Per Instance\" data-coord=\"top-left:(326,236); bottom-right:(2131,920)\" /></figure>",
            "id": 77,
            "page": 6,
            "text": "BBH-Movie Recommendation BBH-Geometric Shapes 85 60 55 Accuracy 80 Self-Discover Direct 50 CoT CoT+Self-Consistency 75 Average 45 Plan-and-Solve x Majority voting each RM 40 Best of each RM* 70 35 65 0 10 20 30 40 0 10 20 30 40 # of Inference Calls Per Instance"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 945
                },
                {
                    "x": 2262,
                    "y": 945
                },
                {
                    "x": 2262,
                    "y": 1224
                },
                {
                    "x": 224,
                    "y": 1224
                }
            ],
            "category": "caption",
            "html": "<caption id='78' style='font-size:16px'>Figure 5. Comparison of accuracy with number of inference calls required per instance. For CoT-Self-Consistency, we sample 10<br>times. Best of each RM method requires gold labels (*). SELF-DISCOVER requires only 1 inference call per instance (plus 3 more<br>meta-prompts on the task-level), same as Direct and CoT while reaching better performance compared with 40x more call required<br>methods (majority voting of each RM) on GPT-4. We acknowledge that SELF-DISCOVER input and output are longer than CoT and<br>Direct prompting, increasing cost. However, as the number of instances increases, the efficiency of SELF-DISCOVER in terms of inference<br>per instance is highly desirable.</caption>",
            "id": 78,
            "page": 6,
            "text": "Figure 5. Comparison of accuracy with number of inference calls required per instance. For CoT-Self-Consistency, we sample 10 times. Best of each RM method requires gold labels (*). SELF-DISCOVER requires only 1 inference call per instance (plus 3 more meta-prompts on the task-level), same as Direct and CoT while reaching better performance compared with 40x more call required methods (majority voting of each RM) on GPT-4. We acknowledge that SELF-DISCOVER input and output are longer than CoT and Direct prompting, increasing cost. However, as the number of instances increases, the efficiency of SELF-DISCOVER in terms of inference per instance is highly desirable."
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 1250
                },
                {
                    "x": 1214,
                    "y": 1250
                },
                {
                    "x": 1214,
                    "y": 1596
                },
                {
                    "x": 223,
                    "y": 1596
                }
            ],
            "category": "paragraph",
            "html": "<p id='79' style='font-size:18px'>commonsense knowledge. We interpret SELF-DISCOVER's<br>advantages on these tasks as strength from integrating mul-<br>tiple reasoning modules from various perspectives as only<br>applying CoT might miss key knowledge in the reasoning<br>process. We observe that the gain on the Algorithmic cate-<br>gory is moderate, consistent with the findings from Sec. 4.1<br>on MATH.</p>",
            "id": 79,
            "page": 6,
            "text": "commonsense knowledge. We interpret SELF-DISCOVER's advantages on these tasks as strength from integrating multiple reasoning modules from various perspectives as only applying CoT might miss key knowledge in the reasoning process. We observe that the gain on the Algorithmic category is moderate, consistent with the findings from Sec. 4.1 on MATH."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1652
                },
                {
                    "x": 927,
                    "y": 1652
                },
                {
                    "x": 927,
                    "y": 1700
                },
                {
                    "x": 225,
                    "y": 1700
                }
            ],
            "category": "paragraph",
            "html": "<p id='80' style='font-size:18px'>4.3. How Efficient is SELF-DISCOVER?</p>",
            "id": 80,
            "page": 6,
            "text": "4.3. How Efficient is SELF-DISCOVER?"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1729
                },
                {
                    "x": 1216,
                    "y": 1729
                },
                {
                    "x": 1216,
                    "y": 2682
                },
                {
                    "x": 224,
                    "y": 2682
                }
            ],
            "category": "paragraph",
            "html": "<p id='81' style='font-size:18px'>SELF-DISCOVER achieves better performance while re-<br>quiring 10-40x fewer inference computer compared to<br>self-consistency or majority voting. Here we examine<br>a subset of 2 tasks from BBH and present a more thor-<br>ough comparison of methods including those requiring<br>many inference calls that are too costly to run on all 24<br>tasks. Figure 5 shows average accuracy and number of<br>inference calls required per instance for each method us-<br>ing GPT-4. Accuracy wise (y-axis), we find that SELF-<br>DISCOVER outperforms other baselines even those that re-<br>quire repeated inference calls such as CoT-self-consistency<br>and majority voting of applying each RM. Efficiency wise<br>(x-axis), SELF-DISCOVER only requires one call per in-<br>stance and three more inference calls on the task-level, CoT-<br>self-consistency requires 10 times more since we have to<br>sample 10 times for each instance, and methods using each<br>RM requires 40 times more as we use 40 RMs. In summary,<br>SELF-DISCOVER presents itself a strong reasoning boosting<br>method that is efficient to deploy on large-scale.</p>",
            "id": 81,
            "page": 6,
            "text": "SELF-DISCOVER achieves better performance while requiring 10-40x fewer inference computer compared to self-consistency or majority voting. Here we examine a subset of 2 tasks from BBH and present a more thorough comparison of methods including those requiring many inference calls that are too costly to run on all 24 tasks. Figure 5 shows average accuracy and number of inference calls required per instance for each method using GPT-4. Accuracy wise (y-axis), we find that SELFDISCOVER outperforms other baselines even those that require repeated inference calls such as CoT-self-consistency and majority voting of applying each RM. Efficiency wise (x-axis), SELF-DISCOVER only requires one call per instance and three more inference calls on the task-level, CoTself-consistency requires 10 times more since we have to sample 10 times for each instance, and methods using each RM requires 40 times more as we use 40 RMs. In summary, SELF-DISCOVER presents itself a strong reasoning boosting method that is efficient to deploy on large-scale."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2732
                },
                {
                    "x": 689,
                    "y": 2732
                },
                {
                    "x": 689,
                    "y": 2781
                },
                {
                    "x": 224,
                    "y": 2781
                }
            ],
            "category": "paragraph",
            "html": "<p id='82' style='font-size:20px'>4.4. Qualitative Examples</p>",
            "id": 82,
            "page": 6,
            "text": "4.4. Qualitative Examples"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2809
                },
                {
                    "x": 1214,
                    "y": 2809
                },
                {
                    "x": 1214,
                    "y": 2959
                },
                {
                    "x": 224,
                    "y": 2959
                }
            ],
            "category": "paragraph",
            "html": "<p id='83' style='font-size:18px'>We show examples of model-discovered structures for differ-<br>ent reasoning tasks in Figure 6 from PaLM 2-L. We observe<br>that each structure is uniquely adapted to the task, integrates</p>",
            "id": 83,
            "page": 6,
            "text": "We show examples of model-discovered structures for different reasoning tasks in Figure 6 from PaLM 2-L. We observe that each structure is uniquely adapted to the task, integrates"
        },
        {
            "bounding_box": [
                {
                    "x": 1310,
                    "y": 1245
                },
                {
                    "x": 2224,
                    "y": 1245
                },
                {
                    "x": 2224,
                    "y": 1880
                },
                {
                    "x": 1310,
                    "y": 1880
                }
            ],
            "category": "figure",
            "html": "<br><figure><img id='84' style='font-size:14px' alt=\"reasoning about colored objects causal judgement\n{ {\n'Type and color of each item ': 'Identify the chain of events in\n' Number of items of each color': the story':\n' Number of items of each type ': 'Identify the consequences of\n' Number of items of each color each event':\nand type ': 'Identify the cause-and-effect\n'Final answer': Break down relationships between events ' :\n} to sub-tasks 'Choose a final answer based\non the reasoning':\nReflect on\ntask nature\ndyck languages\nDevise an algorithm\n{\n' Parentheses that are not closed properly':\n' Stack to store the closing parentheses':\n'If the next symbol is a closing parenthesis, pop the stack and\ncheck if the popped symbol matches the next symbol':\n'If the stack is empty, add the next symbol to the stack':\n}\" data-coord=\"top-left:(1310,1245); bottom-right:(2224,1880)\" /></figure>",
            "id": 84,
            "page": 6,
            "text": "reasoning about colored objects causal judgement { { \"Type and color of each item \": \"Identify the chain of events in \" Number of items of each color\": the story\": \" Number of items of each type \": \"Identify the consequences of \" Number of items of each color each event\": and type \": \"Identify the cause-and-effect \"Final answer\": Break down relationships between events \" : } to sub-tasks \"Choose a final answer based on the reasoning\": Reflect on task nature dyck languages Devise an algorithm { \" Parentheses that are not closed properly\": \" Stack to store the closing parentheses\": \"If the next symbol is a closing parenthesis, pop the stack and check if the popped symbol matches the next symbol\": \"If the stack is empty, add the next symbol to the stack\": }"
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 1940
                },
                {
                    "x": 2264,
                    "y": 1940
                },
                {
                    "x": 2264,
                    "y": 2171
                },
                {
                    "x": 1274,
                    "y": 2171
                }
            ],
            "category": "caption",
            "html": "<caption id='85' style='font-size:16px'>Figure 6. Examples of self-discovered structures on BBH tasks<br>using PaLM 2-L. We observe traits of atomic reasoning modules<br>such as \"step-by-step thinking\", \"reflect on task nature\", and an in-<br>teresting creative thinking case where models devise an algorithm<br>using stack to solve parenthesis parsing task.</caption>",
            "id": 85,
            "page": 6,
            "text": "Figure 6. Examples of self-discovered structures on BBH tasks using PaLM 2-L. We observe traits of atomic reasoning modules such as \"step-by-step thinking\", \"reflect on task nature\", and an interesting creative thinking case where models devise an algorithm using stack to solve parenthesis parsing task."
        },
        {
            "bounding_box": [
                {
                    "x": 1272,
                    "y": 2239
                },
                {
                    "x": 2265,
                    "y": 2239
                },
                {
                    "x": 2265,
                    "y": 2684
                },
                {
                    "x": 1272,
                    "y": 2684
                }
            ],
            "category": "paragraph",
            "html": "<p id='86' style='font-size:18px'>multiple reasoning modules, and provides insights on how<br>to solve the tasks. Furthermore, example of comparing<br>reasoning processes from CoT, Plan-and-Solve, and SELF-<br>DISCOVER is shown in Figure 7. We find that CoT and<br>Plan-and-Solve makes incorrect assertions early and arrives<br>at a wrong answer while following structure from SELF-<br>DISCOVER leads the model to generate logical conclusions<br>(\"path is closed as the beginning and ending coordinates<br>are the same\") and arrive at the correct answer.</p>",
            "id": 86,
            "page": 6,
            "text": "multiple reasoning modules, and provides insights on how to solve the tasks. Furthermore, example of comparing reasoning processes from CoT, Plan-and-Solve, and SELFDISCOVER is shown in Figure 7. We find that CoT and Plan-and-Solve makes incorrect assertions early and arrives at a wrong answer while following structure from SELFDISCOVER leads the model to generate logical conclusions (\"path is closed as the beginning and ending coordinates are the same\") and arrive at the correct answer."
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 2748
                },
                {
                    "x": 2261,
                    "y": 2748
                },
                {
                    "x": 2261,
                    "y": 2860
                },
                {
                    "x": 1273,
                    "y": 2860
                }
            ],
            "category": "paragraph",
            "html": "<p id='87' style='font-size:22px'>5. Deep Diving Into Self-Discovered Reasoning<br>Structures</p>",
            "id": 87,
            "page": 6,
            "text": "5. Deep Diving Into Self-Discovered Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 2895
                },
                {
                    "x": 2261,
                    "y": 2895
                },
                {
                    "x": 2261,
                    "y": 2994
                },
                {
                    "x": 1274,
                    "y": 2994
                }
            ],
            "category": "paragraph",
            "html": "<p id='88' style='font-size:18px'>After experimental results showing the effectiveness and<br>efficiency of SELF-DISCOVER on a range of reasoning</p>",
            "id": 88,
            "page": 6,
            "text": "After experimental results showing the effectiveness and efficiency of SELF-DISCOVER on a range of reasoning"
        },
        {
            "bounding_box": [
                {
                    "x": 1229,
                    "y": 3052
                },
                {
                    "x": 1258,
                    "y": 3052
                },
                {
                    "x": 1258,
                    "y": 3088
                },
                {
                    "x": 1229,
                    "y": 3088
                }
            ],
            "category": "footer",
            "html": "<footer id='89' style='font-size:16px'>6</footer>",
            "id": 89,
            "page": 6,
            "text": "6"
        },
        {
            "bounding_box": [
                {
                    "x": 601,
                    "y": 192
                },
                {
                    "x": 1883,
                    "y": 192
                },
                {
                    "x": 1883,
                    "y": 236
                },
                {
                    "x": 601,
                    "y": 236
                }
            ],
            "category": "header",
            "html": "<header id='90' style='font-size:22px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 90,
            "page": 7,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 274,
                    "y": 283
                },
                {
                    "x": 2182,
                    "y": 283
                },
                {
                    "x": 2182,
                    "y": 1355
                },
                {
                    "x": 274,
                    "y": 1355
                }
            ],
            "category": "figure",
            "html": "<figure><img id='91' style='font-size:14px' alt=\"This SVG path element <path d='M 55.57,80.69 L 57.38,65.80 M 57.38,65.80 L 48.90,57.46 M 48.90,57.46 L\n45.58,47.78 M 45.58,47.78 L 53.25,36.07 L 66.29,48.90 L 78.69,61.09 L 55.57,80.69'/> draws a:\n(A) circle (B) heptagon (C) hexagon (D) kite (E) line (F) octagon (G) pentagon(H) rectangle (I) sector (J) triangle\nLet's think\nLet's devise a plan and solve Self-Discover Reasoning Structure (Ours)\nstep-by-step (CoT)\nthe problem (Plan-and-Solve)\nThis SVG path consists of This SVG Path element { 'Simplify SVG Path : ··\nmultiple lines drawn consists of many 'L' 'Breakdown of Path Commands ': {\nbetween different points. commands which draw a 'Move to Command (M) ' : 'Sets the starting point for the next\nThese points do not form straight line from the command without drawing anything. '\n,\na regular geometric shape current point to the new 'Line to Command (L) steps ' :\nsuch as a circle, point. But it does not {'Start and end coordinates of each line segment':\npentagon, heptagon, close the path, meaning 'M 55.57,80.69 L 57.38,65.80: From point (55.57, 80.69) to (57.38,\nhexagon, or octagon. ··· the shape is not a regular 65.80)'}, · ·· and finally closing the shape at (55.57, 80.69)'}\nThey do, however, seem polygon like a hexagon, 'Critical Thinking Analysis ': {\nto form a shape with four heptagon, octagon or 'Logical Reasoning': {\nsides, which could be pentagon. The 'Analysis of path continui ty': 'The path includes\nconsidered a form of a instructions make 4 lines multiple line segments that connect distinct points. The path ends by\nkite... in total but they are not connecting back to the starting point, indicating a closed shape. ',\nstraight and do not form a 'Identification of closed shapes ': 'The final line\nThus the final answer is parallelogram or a segment connects the last point back to the first point, which is\n(D) kite. X rectangle. ··· characteristic of a closed shape. '},\n···\nThus the final answer is 'Final Reasoning and Decision ': 'With 7 distinct points all\n(D) kite. connected in a closed path, the shape formed is a heptagon. '\n'Final Answer': 'B) heptagon'}\nV\" data-coord=\"top-left:(274,283); bottom-right:(2182,1355)\" /></figure>",
            "id": 91,
            "page": 7,
            "text": "This SVG path element <path d=\"M 55.57,80.69 L 57.38,65.80 M 57.38,65.80 L 48.90,57.46 M 48.90,57.46 L 45.58,47.78 M 45.58,47.78 L 53.25,36.07 L 66.29,48.90 L 78.69,61.09 L 55.57,80.69\"/> draws a: (A) circle (B) heptagon (C) hexagon (D) kite (E) line (F) octagon (G) pentagon(H) rectangle (I) sector (J) triangle Let's think Let's devise a plan and solve Self-Discover Reasoning Structure (Ours) step-by-step (CoT) the problem (Plan-and-Solve) This SVG path consists of This SVG Path element { \"Simplify SVG Path : ·· multiple lines drawn consists of many \"L\" \"Breakdown of Path Commands \": { between different points. commands which draw a \"Move to Command (M) \" : \"Sets the starting point for the next These points do not form straight line from the command without drawing anything. \" , a regular geometric shape current point to the new \"Line to Command (L) steps \" : such as a circle, point. But it does not {\"Start and end coordinates of each line segment\": pentagon, heptagon, close the path, meaning \"M 55.57,80.69 L 57.38,65.80: From point (55.57, 80.69) to (57.38, hexagon, or octagon. ··· the shape is not a regular 65.80)\"}, · ·· and finally closing the shape at (55.57, 80.69)\"} They do, however, seem polygon like a hexagon, \"Critical Thinking Analysis \": { to form a shape with four heptagon, octagon or \"Logical Reasoning\": { sides, which could be pentagon. The \"Analysis of path continui ty\": \"The path includes considered a form of a instructions make 4 lines multiple line segments that connect distinct points. The path ends by kite... in total but they are not connecting back to the starting point, indicating a closed shape. \", straight and do not form a \"Identification of closed shapes \": \"The final line Thus the final answer is parallelogram or a segment connects the last point back to the first point, which is (D) kite. X rectangle. ··· characteristic of a closed shape. \"}, ··· Thus the final answer is \"Final Reasoning and Decision \": \"With 7 distinct points all (D) kite. connected in a closed path, the shape formed is a heptagon. \" \"Final Answer\": \"B) heptagon\"} V"
        },
        {
            "bounding_box": [
                {
                    "x": 221,
                    "y": 1406
                },
                {
                    "x": 2265,
                    "y": 1406
                },
                {
                    "x": 2265,
                    "y": 1642
                },
                {
                    "x": 221,
                    "y": 1642
                }
            ],
            "category": "caption",
            "html": "<caption id='92' style='font-size:16px'>Figure 7. Comparison of generated reasoning process from CoT, Plan-and-Solve, and SELF-DISCOVER on BBH-geometric shape<br>task. Both CoT and Plan-and-Solve incorrectly asserts that the path does not form a regular shape as it is not a closed path (highlighted in<br>red) and arrive at a wrong answer. The reasoning structure (in blue Courier font) from SELF-DISCOVER first breaks down each line<br>segment and analyze the coordinates carefully, then leverages logical reasoning to conclude that it forms a closed shape as the path ends at<br>the same coordinate (highlighted in purple and orange), and selects the correct answer through final reasoning.</caption>",
            "id": 92,
            "page": 7,
            "text": "Figure 7. Comparison of generated reasoning process from CoT, Plan-and-Solve, and SELF-DISCOVER on BBH-geometric shape task. Both CoT and Plan-and-Solve incorrectly asserts that the path does not form a regular shape as it is not a closed path (highlighted in red) and arrive at a wrong answer. The reasoning structure (in blue Courier font) from SELF-DISCOVER first breaks down each line segment and analyze the coordinates carefully, then leverages logical reasoning to conclude that it forms a closed shape as the path ends at the same coordinate (highlighted in purple and orange), and selects the correct answer through final reasoning."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1662
                },
                {
                    "x": 1217,
                    "y": 1662
                },
                {
                    "x": 1217,
                    "y": 2266
                },
                {
                    "x": 225,
                    "y": 2266
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='93' style='font-size:18px'>tasks, this section further analyzes are all actions of SELF-<br>DISCOVER needed and what other benefits can self-<br>discovered structures bring? In Sec. 5.1, we show that it<br>is critical to the model's performance to use the reasoning<br>structures discovered through the three steps of SELECT,<br>ADAPT and IMPLEMENT. In Sec. 5.2, we demonstrate<br>the universality of the self-discovered reasoning structures<br>by (1) applying the structures discovered by PaLM 2-L to<br>GPT-4, (2) applying the structures discovered by GPT-4 to<br>Llama-2-70B. We further show the commonalities between<br>the reasoning structures and human reasoning patterns in<br>Appendix E.</p>",
            "id": 93,
            "page": 7,
            "text": "tasks, this section further analyzes are all actions of SELFDISCOVER needed and what other benefits can selfdiscovered structures bring? In Sec. 5.1, we show that it is critical to the model's performance to use the reasoning structures discovered through the three steps of SELECT, ADAPT and IMPLEMENT. In Sec. 5.2, we demonstrate the universality of the self-discovered reasoning structures by (1) applying the structures discovered by PaLM 2-L to GPT-4, (2) applying the structures discovered by GPT-4 to Llama-2-70B. We further show the commonalities between the reasoning structures and human reasoning patterns in Appendix E."
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 2315
                },
                {
                    "x": 1025,
                    "y": 2315
                },
                {
                    "x": 1025,
                    "y": 2365
                },
                {
                    "x": 223,
                    "y": 2365
                }
            ],
            "category": "paragraph",
            "html": "<p id='94' style='font-size:18px'>5.1. Importance of SELF-DISCOVER Actions</p>",
            "id": 94,
            "page": 7,
            "text": "5.1. Importance of SELF-DISCOVER Actions"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2392
                },
                {
                    "x": 1214,
                    "y": 2392
                },
                {
                    "x": 1214,
                    "y": 2895
                },
                {
                    "x": 224,
                    "y": 2895
                }
            ],
            "category": "paragraph",
            "html": "<p id='95' style='font-size:18px'>We conduct ablation study on the three actions: SELECT,<br>ADAPT, and IMPLEMENT to analyze the effects of SELF-<br>DISCOVER actions. Figure 8 show results using GPT-4 on 4<br>reasoning tasks when we apply SELECT (-S) or apply SE-<br>LECT and ADAPT (-SA) or apply all three actions. We find<br>that with each stage, model's zero-shot reasoning capability<br>improve consistently across tasks, indicating that all three<br>actions are beneficial. In particular, after all three actions<br>SAI, the reasoning structures are adapted to be task specific,<br>and bring the most gain to solving the reasoning tasks.</p>",
            "id": 95,
            "page": 7,
            "text": "We conduct ablation study on the three actions: SELECT, ADAPT, and IMPLEMENT to analyze the effects of SELFDISCOVER actions. Figure 8 show results using GPT-4 on 4 reasoning tasks when we apply SELECT (-S) or apply SELECT and ADAPT (-SA) or apply all three actions. We find that with each stage, model's zero-shot reasoning capability improve consistently across tasks, indicating that all three actions are beneficial. In particular, after all three actions SAI, the reasoning structures are adapted to be task specific, and bring the most gain to solving the reasoning tasks."
        },
        {
            "bounding_box": [
                {
                    "x": 1317,
                    "y": 1662
                },
                {
                    "x": 2225,
                    "y": 1662
                },
                {
                    "x": 2225,
                    "y": 2116
                },
                {
                    "x": 1317,
                    "y": 2116
                }
            ],
            "category": "figure",
            "html": "<br><figure><img id='96' style='font-size:14px' alt=\"Ablaton Studies on 3 Self-Discover Actions: SELECT, ADAPT, IMPLEMENT (SAI)\n100\n93 94 CoT\n89 90\n90 Ours-S\n86 85\nOurs-SA\n79 80\n80 Ours-SAI\nAccuracy 73 73\n70\n65\n61\n60\n50 50\n50\n45\n43\n40\n30\nSnarks Movie T4D Geometry\nTasks\" data-coord=\"top-left:(1317,1662); bottom-right:(2225,2116)\" /></figure>",
            "id": 96,
            "page": 7,
            "text": "Ablaton Studies on 3 Self-Discover Actions: SELECT, ADAPT, IMPLEMENT (SAI) 100 93 94 CoT 89 90 90 Ours-S 86 85 Ours-SA 79 80 80 Ours-SAI Accuracy 73 73 70 65 61 60 50 50 50 45 43 40 30 Snarks Movie T4D Geometry Tasks"
        },
        {
            "bounding_box": [
                {
                    "x": 1272,
                    "y": 2173
                },
                {
                    "x": 2264,
                    "y": 2173
                },
                {
                    "x": 2264,
                    "y": 2268
                },
                {
                    "x": 1272,
                    "y": 2268
                }
            ],
            "category": "caption",
            "html": "<caption id='97' style='font-size:16px'>Figure 8. Ablation study on three SELF-DISCOVER actions on<br>4 reasoning tasks: all three actions are beneficial for task-solving.</caption>",
            "id": 97,
            "page": 7,
            "text": "Figure 8. Ablation study on three SELF-DISCOVER actions on 4 reasoning tasks: all three actions are beneficial for task-solving."
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 2367
                },
                {
                    "x": 2185,
                    "y": 2367
                },
                {
                    "x": 2185,
                    "y": 2464
                },
                {
                    "x": 1273,
                    "y": 2464
                }
            ],
            "category": "paragraph",
            "html": "<p id='98' style='font-size:20px'>5.2. Towards Universality of Discovered Reasoning<br>Structures</p>",
            "id": 98,
            "page": 7,
            "text": "5.2. Towards Universality of Discovered Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 2495
                },
                {
                    "x": 2260,
                    "y": 2495
                },
                {
                    "x": 2260,
                    "y": 2542
                },
                {
                    "x": 1275,
                    "y": 2542
                }
            ],
            "category": "paragraph",
            "html": "<p id='99' style='font-size:18px'>Applying PaLM 2-L Discovered Structures to GPT-4</p>",
            "id": 99,
            "page": 7,
            "text": "Applying PaLM 2-L Discovered Structures to GPT-4"
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 2542
                },
                {
                    "x": 2266,
                    "y": 2542
                },
                {
                    "x": 2266,
                    "y": 2992
                },
                {
                    "x": 1273,
                    "y": 2992
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='100' style='font-size:18px'>We first use a PaLM 2-L model to discover the reasoning<br>structures of 4 reasoning tasks. Then, we apply the resulting<br>reasoning structures to the decoding of GPT-4 as grounding.<br>We compare our approach to OPRO (Yang et al., 2023)<br>which discovered zero-shot-prompts through optimizations.<br>We apply OPRO prompts optimized using PaLM 2-L on<br>each task to GPT-4 on the same reasoning tasks. Figure 9<br>shows that SELF-DISCOVER outperforms OPRO on 3 out<br>of 4 tasks despite that OPRO used 20% data to optimize the</p>",
            "id": 100,
            "page": 7,
            "text": "We first use a PaLM 2-L model to discover the reasoning structures of 4 reasoning tasks. Then, we apply the resulting reasoning structures to the decoding of GPT-4 as grounding. We compare our approach to OPRO (Yang , 2023) which discovered zero-shot-prompts through optimizations. We apply OPRO prompts optimized using PaLM 2-L on each task to GPT-4 on the same reasoning tasks. Figure 9 shows that SELF-DISCOVER outperforms OPRO on 3 out of 4 tasks despite that OPRO used 20% data to optimize the"
        },
        {
            "bounding_box": [
                {
                    "x": 1231,
                    "y": 3050
                },
                {
                    "x": 1257,
                    "y": 3050
                },
                {
                    "x": 1257,
                    "y": 3086
                },
                {
                    "x": 1231,
                    "y": 3086
                }
            ],
            "category": "footer",
            "html": "<footer id='101' style='font-size:16px'>7</footer>",
            "id": 101,
            "page": 7,
            "text": "7"
        },
        {
            "bounding_box": [
                {
                    "x": 600,
                    "y": 192
                },
                {
                    "x": 1881,
                    "y": 192
                },
                {
                    "x": 1881,
                    "y": 235
                },
                {
                    "x": 600,
                    "y": 235
                }
            ],
            "category": "header",
            "html": "<header id='102' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 102,
            "page": 8,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 258,
                    "y": 286
                },
                {
                    "x": 1178,
                    "y": 286
                },
                {
                    "x": 1178,
                    "y": 847
                },
                {
                    "x": 258,
                    "y": 847
                }
            ],
            "category": "figure",
            "html": "<figure><img id='103' style='font-size:14px' alt=\"Transferrability of PaLM 2-L Optimized Prompts/Structures on GPT-4\n100\n94 94\nOPRO*\n90\nSelf-Discover\n79 79\n80\n74\n70\nAccuracy\n60 57\n52\n50\n43\n40\n30\n20\nSnarks Movie T4D Geometry\nTasks\" data-coord=\"top-left:(258,286); bottom-right:(1178,847)\" /></figure>",
            "id": 103,
            "page": 8,
            "text": "Transferrability of PaLM 2-L Optimized Prompts/Structures on GPT-4 100 94 94 OPRO* 90 Self-Discover 79 79 80 74 70 Accuracy 60 57 52 50 43 40 30 20 Snarks Movie T4D Geometry Tasks"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 874
                },
                {
                    "x": 1214,
                    "y": 874
                },
                {
                    "x": 1214,
                    "y": 1245
                },
                {
                    "x": 223,
                    "y": 1245
                }
            ],
            "category": "caption",
            "html": "<caption id='104' style='font-size:16px'>Figure 9. Transferrability tests of optimized prompts (OPRO)<br>and composed structures (SELF-DISCOVER). The results shown<br>are from GPT-4 using the prompts and structures optimized or<br>composed using PaLM 2-L. We find that self-discovered reasoning<br>structure transfers more robustly than optimized prompts.<br>prompt. In contrast, SELF-DISCOVER is done in a zero-shot<br>manner, demonstrating the efficiency of our method and<br>universality of the discovered reasoning structures.</caption>",
            "id": 104,
            "page": 8,
            "text": "Figure 9. Transferrability tests of optimized prompts (OPRO) and composed structures (SELF-DISCOVER). The results shown are from GPT-4 using the prompts and structures optimized or composed using PaLM 2-L. We find that self-discovered reasoning structure transfers more robustly than optimized prompts. prompt. In contrast, SELF-DISCOVER is done in a zero-shot manner, demonstrating the efficiency of our method and universality of the discovered reasoning structures."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1299
                },
                {
                    "x": 1216,
                    "y": 1299
                },
                {
                    "x": 1216,
                    "y": 2000
                },
                {
                    "x": 224,
                    "y": 2000
                }
            ],
            "category": "paragraph",
            "html": "<p id='105' style='font-size:16px'>Applying GPT-4 Discovered Structures to Llama2 and<br>ChatGPT Motivated by transferrability performance<br>across LLMs, we further investigate can self-discovered rea-<br>soning structures from LLMs boost reasoning for smaller<br>LMs that are challenging to come up with structures them-<br>selves3. We use GPT-4 to discover the task-intrinsic rea-<br>soning structures, and then apply those structures to the<br>decoding of open-sourced Llama2-70B as well as GPT-3.5-<br>turbo (ChatGPT) on two subsets of tasks from BBH. We<br>find that using self-discovered structures on Llama2 (52%)<br>outperforms CoT (42%) on disambiguation QA zero-shot<br>and on GPT-3.5-turbo (56%) outperforms CoT (51%) on ge-<br>ometry with 3-shot demonstration from structured reasoning<br>process.</p>",
            "id": 105,
            "page": 8,
            "text": "Applying GPT-4 Discovered Structures to Llama2 and ChatGPT Motivated by transferrability performance across LLMs, we further investigate can self-discovered reasoning structures from LLMs boost reasoning for smaller LMs that are challenging to come up with structures themselves3. We use GPT-4 to discover the task-intrinsic reasoning structures, and then apply those structures to the decoding of open-sourced Llama2-70B as well as GPT-3.5turbo (ChatGPT) on two subsets of tasks from BBH. We find that using self-discovered structures on Llama2 (52%) outperforms CoT (42%) on disambiguation QA zero-shot and on GPT-3.5-turbo (56%) outperforms CoT (51%) on geometry with 3-shot demonstration from structured reasoning process."
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 2064
                },
                {
                    "x": 580,
                    "y": 2064
                },
                {
                    "x": 580,
                    "y": 2113
                },
                {
                    "x": 226,
                    "y": 2113
                }
            ],
            "category": "paragraph",
            "html": "<p id='106' style='font-size:22px'>6. Related Work</p>",
            "id": 106,
            "page": 8,
            "text": "6. Related Work"
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2149
                },
                {
                    "x": 664,
                    "y": 2149
                },
                {
                    "x": 664,
                    "y": 2196
                },
                {
                    "x": 225,
                    "y": 2196
                }
            ],
            "category": "paragraph",
            "html": "<p id='107' style='font-size:20px'>6.1. Prompting Methods</p>",
            "id": 107,
            "page": 8,
            "text": "6.1. Prompting Methods"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2225
                },
                {
                    "x": 1215,
                    "y": 2225
                },
                {
                    "x": 1215,
                    "y": 2876
                },
                {
                    "x": 224,
                    "y": 2876
                }
            ],
            "category": "paragraph",
            "html": "<p id='108' style='font-size:18px'>Recent advancements in the area of LLMs have given rise<br>to a plethora of few-shot (Brown et al., 2020) and instruc-<br>tion (Mishra et al., 2022c; Wei et al., 2021; Ouyang et al.,<br>2022) prompting techniques, including Chain-of-Thought<br>prompting (CoT) (Nye et al., 2021; Wei et al., 2022), Least-<br>to-most prompting (Zhou et al., 2022a; Drozdov et al.,<br>2022), Decomposed prompting (Khot et al., 2022), Re-<br>framing (Mishra et al., 2022b), Help Me Think Prompt-<br>ing (Mishra & Nouri, 2023), Stepback Prompting (Zheng<br>et al., 2023) and search-based approaches like Tree-of-<br>Thought (ToT) (Yao et al., 2023a), Graph-of-Thought (Besta<br>et al., 2023; Yao et al., 2023b), Branch-solve-merge (Saha<br>et al., 2023) and RAP (Hao et al., 2023). Each of the</p>",
            "id": 108,
            "page": 8,
            "text": "Recent advancements in the area of LLMs have given rise to a plethora of few-shot (Brown , 2020) and instruction (Mishra , 2022c; Wei , 2021; Ouyang , 2022) prompting techniques, including Chain-of-Thought prompting (CoT) (Nye , 2021; Wei , 2022), Leastto-most prompting (Zhou , 2022a; Drozdov , 2022), Decomposed prompting (Khot , 2022), Reframing (Mishra , 2022b), Help Me Think Prompting (Mishra & Nouri, 2023), Stepback Prompting (Zheng , 2023) and search-based approaches like Tree-ofThought (ToT) (Yao , 2023a), Graph-of-Thought (Besta , 2023; Yao , 2023b), Branch-solve-merge (Saha , 2023) and RAP (Hao , 2023). Each of the"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2905
                },
                {
                    "x": 1213,
                    "y": 2905
                },
                {
                    "x": 1213,
                    "y": 2991
                },
                {
                    "x": 224,
                    "y": 2991
                }
            ],
            "category": "paragraph",
            "html": "<p id='109' style='font-size:14px'>3We tried zero-shot meta prompting Llama2 but observed low-<br>quality structure outputs.</p>",
            "id": 109,
            "page": 8,
            "text": "3We tried zero-shot meta prompting Llama2 but observed lowquality structure outputs."
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 288
                },
                {
                    "x": 2263,
                    "y": 288
                },
                {
                    "x": 2263,
                    "y": 732
                },
                {
                    "x": 1275,
                    "y": 732
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='110' style='font-size:16px'>prompting methods has some strengths and weaknesses<br>in terms of their successful application domain. Our work<br>SELF-DISCOVER presents the missing piece in the prompt-<br>ing literature, as SELF-DISCOVER provides a way to self-<br>compose over various prompting methods via the proposed<br>self-discovery mechanism. Composing over prompting<br>methods in SELF-DISCOVER is analogous to the program-<br>ming literature where a program is written using various<br>basic building blocks such as for loop, if/else condition etc.</p>",
            "id": 110,
            "page": 8,
            "text": "prompting methods has some strengths and weaknesses in terms of their successful application domain. Our work SELF-DISCOVER presents the missing piece in the prompting literature, as SELF-DISCOVER provides a way to selfcompose over various prompting methods via the proposed self-discovery mechanism. Composing over prompting methods in SELF-DISCOVER is analogous to the programming literature where a program is written using various basic building blocks such as for loop, if/else condition etc."
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 789
                },
                {
                    "x": 1790,
                    "y": 789
                },
                {
                    "x": 1790,
                    "y": 836
                },
                {
                    "x": 1274,
                    "y": 836
                }
            ],
            "category": "paragraph",
            "html": "<p id='111' style='font-size:20px'>6.2. Reasoning and Planning</p>",
            "id": 111,
            "page": 8,
            "text": "6.2. Reasoning and Planning"
        },
        {
            "bounding_box": [
                {
                    "x": 1271,
                    "y": 867
                },
                {
                    "x": 2265,
                    "y": 867
                },
                {
                    "x": 2265,
                    "y": 2112
                },
                {
                    "x": 1271,
                    "y": 2112
                }
            ],
            "category": "paragraph",
            "html": "<p id='112' style='font-size:18px'>With the development of various reasoning and plan-<br>ning benchmarks such as GSM8K (Cobbe et al., 2021),<br>Math (Hendrycks et al.), BigBench (Srivastava et al., 2023)<br>etc., various methods have been proposed to improve model<br>performance. Often these methods induce specific reason-<br>ing structures mimicking the reasoning structure of the un-<br>derlying task associated with the dataset. For example,<br>chain of thought (Wei et al., 2022) and scratchpad (Nye<br>et al., 2021) induce generation of explanations associated<br>with a reasoning question. Similarly other methods induces<br>specific reasoning structures such as question summariza-<br>tion (Kuznia et al., 2022), question decomposition (Patel<br>et al., 2022), program generation (Mishra et al., 2022a;<br>Chen et al., 2022; Gao et al., 2023b), etc. However, in a real<br>world user traffic, queries can be diverse covering various<br>reasoning structures. Our work SELF-DISCOVER allows<br>models to combine multiple reasoning approaches by self-<br>composing into a structure without the need to access task<br>labels. There have been some related work that explores<br>LLM combining skills in-context such as SkiC (Chen et al.,<br>2023), devising a strategy (Gao et al., 2023a), and planning<br>with iterative quering (Liu et al., 2023). However, they<br>require human annotating skills and reasoning plans while<br>SELF-DISCOVER leverages a scalable solution with the help<br>of LLM's meta-task reasoning capabilities.</p>",
            "id": 112,
            "page": 8,
            "text": "With the development of various reasoning and planning benchmarks such as GSM8K (Cobbe , 2021), Math (Hendrycks ), BigBench (Srivastava , 2023) etc., various methods have been proposed to improve model performance. Often these methods induce specific reasoning structures mimicking the reasoning structure of the underlying task associated with the dataset. For example, chain of thought (Wei , 2022) and scratchpad (Nye , 2021) induce generation of explanations associated with a reasoning question. Similarly other methods induces specific reasoning structures such as question summarization (Kuznia , 2022), question decomposition (Patel , 2022), program generation (Mishra , 2022a; Chen , 2022; Gao , 2023b), etc. However, in a real world user traffic, queries can be diverse covering various reasoning structures. Our work SELF-DISCOVER allows models to combine multiple reasoning approaches by selfcomposing into a structure without the need to access task labels. There have been some related work that explores LLM combining skills in-context such as SkiC (Chen , 2023), devising a strategy (Gao , 2023a), and planning with iterative quering (Liu , 2023). However, they require human annotating skills and reasoning plans while SELF-DISCOVER leverages a scalable solution with the help of LLM's meta-task reasoning capabilities."
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 2174
                },
                {
                    "x": 1572,
                    "y": 2174
                },
                {
                    "x": 1572,
                    "y": 2226
                },
                {
                    "x": 1275,
                    "y": 2226
                }
            ],
            "category": "paragraph",
            "html": "<p id='113' style='font-size:22px'>7. Conclusion</p>",
            "id": 113,
            "page": 8,
            "text": "7. Conclusion"
        },
        {
            "bounding_box": [
                {
                    "x": 1271,
                    "y": 2259
                },
                {
                    "x": 2263,
                    "y": 2259
                },
                {
                    "x": 2263,
                    "y": 2808
                },
                {
                    "x": 1271,
                    "y": 2808
                }
            ],
            "category": "paragraph",
            "html": "<p id='114' style='font-size:16px'>We introduce SELF-DISCOVER, an efficient and performant<br>framework for models to self-discover a reasoning structure<br>for any task from a seed set of general problem-solving<br>skills. We observe drastic improvements on challenging<br>reasoning benchmarks from multiple LLMs up to 30%. Ab-<br>lations study of SELF-DISCOVER demonstrates that the<br>composed reasoning structures are universally transferable<br>between LLMs. Forward looking, we are excited to explore<br>more on LLM structured reasoning to push the boundary<br>of problem-solving and discover potentials for Human-AI<br>collaboration.</p>",
            "id": 114,
            "page": 8,
            "text": "We introduce SELF-DISCOVER, an efficient and performant framework for models to self-discover a reasoning structure for any task from a seed set of general problem-solving skills. We observe drastic improvements on challenging reasoning benchmarks from multiple LLMs up to 30%. Ablations study of SELF-DISCOVER demonstrates that the composed reasoning structures are universally transferable between LLMs. Forward looking, we are excited to explore more on LLM structured reasoning to push the boundary of problem-solving and discover potentials for Human-AI collaboration."
        },
        {
            "bounding_box": [
                {
                    "x": 1229,
                    "y": 3051
                },
                {
                    "x": 1256,
                    "y": 3051
                },
                {
                    "x": 1256,
                    "y": 3088
                },
                {
                    "x": 1229,
                    "y": 3088
                }
            ],
            "category": "footer",
            "html": "<footer id='115' style='font-size:14px'>8</footer>",
            "id": 115,
            "page": 8,
            "text": "8"
        },
        {
            "bounding_box": [
                {
                    "x": 603,
                    "y": 192
                },
                {
                    "x": 1881,
                    "y": 192
                },
                {
                    "x": 1881,
                    "y": 235
                },
                {
                    "x": 603,
                    "y": 235
                }
            ],
            "category": "header",
            "html": "<header id='116' style='font-size:16px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 116,
            "page": 9,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 281
                },
                {
                    "x": 626,
                    "y": 281
                },
                {
                    "x": 626,
                    "y": 332
                },
                {
                    "x": 226,
                    "y": 332
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='117' style='font-size:22px'>Acknowledgement</p>",
            "id": 117,
            "page": 9,
            "text": "Acknowledgement"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 365
                },
                {
                    "x": 1213,
                    "y": 365
                },
                {
                    "x": 1213,
                    "y": 464
                },
                {
                    "x": 223,
                    "y": 464
                }
            ],
            "category": "paragraph",
            "html": "<p id='118' style='font-size:14px'>We thank Andrew Dai and Adams Yu of Google DeepMind<br>for their insightful feedback on this paper.</p>",
            "id": 118,
            "page": 9,
            "text": "We thank Andrew Dai and Adams Yu of Google DeepMind for their insightful feedback on this paper."
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 528
                },
                {
                    "x": 468,
                    "y": 528
                },
                {
                    "x": 468,
                    "y": 580
                },
                {
                    "x": 226,
                    "y": 580
                }
            ],
            "category": "paragraph",
            "html": "<p id='119' style='font-size:20px'>References</p>",
            "id": 119,
            "page": 9,
            "text": "References"
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 608
                },
                {
                    "x": 1217,
                    "y": 608
                },
                {
                    "x": 1217,
                    "y": 805
                },
                {
                    "x": 225,
                    "y": 805
                }
            ],
            "category": "paragraph",
            "html": "<p id='120' style='font-size:16px'>Anil, R., Dai, A. M., Firat, 0., Johnson, M., Lepikhin,<br>D., Passos, A., Shakeri, S., Taropa, E., Bailey, P., Chen,<br>Z., et al. Palm 2 technical report. arXiv preprint<br>arXiv:2305.10403, 2023.</p>",
            "id": 120,
            "page": 9,
            "text": "Anil, R., Dai, A. M., Firat, 0., Johnson, M., Lepikhin, D., Passos, A., Shakeri, S., Taropa, E., Bailey, P., Chen, Z.,  Palm 2 technical report. arXiv preprint arXiv:2305.10403, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 840
                },
                {
                    "x": 1217,
                    "y": 840
                },
                {
                    "x": 1217,
                    "y": 1088
                },
                {
                    "x": 225,
                    "y": 1088
                }
            ],
            "category": "paragraph",
            "html": "<p id='121' style='font-size:18px'>Besta, M., Blach, N., Kubicek, A., Gerstenberger, R., Gi-<br>aninazzi, L., Gajda, J., Lehmann, T., Podstawski, M.,<br>Niewiadomski, H., Nyczyk, P., et al. Graph of thoughts:<br>Solving elaborate problems with large language models.<br>arXiv preprint arXiv:2308.09687, 2023.</p>",
            "id": 121,
            "page": 9,
            "text": "Besta, M., Blach, N., Kubicek, A., Gerstenberger, R., Gianinazzi, L., Gajda, J., Lehmann, T., Podstawski, M., Niewiadomski, H., Nyczyk, P.,  Graph of thoughts: Solving elaborate problems with large language models. arXiv preprint arXiv:2308.09687, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1121
                },
                {
                    "x": 1218,
                    "y": 1121
                },
                {
                    "x": 1218,
                    "y": 1368
                },
                {
                    "x": 225,
                    "y": 1368
                }
            ],
            "category": "paragraph",
            "html": "<p id='122' style='font-size:16px'>Brown, T., Mann, B., Ryder, N., Subbiah, M., Kaplan, J. D.,<br>Dhariwal, P., Neelakantan, A., Shyam, P., Sastry, G.,<br>Askell, A., et al. Language models are few-shot learners.<br>Advances in neural information processing systems, 33:<br>1877-1901, 2020.</p>",
            "id": 122,
            "page": 9,
            "text": "Brown, T., Mann, B., Ryder, N., Subbiah, M., Kaplan, J. D., Dhariwal, P., Neelakantan, A., Shyam, P., Sastry, G., Askell, A.,  Language models are few-shot learners. Advances in neural information processing systems, 33: 1877-1901, 2020."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1404
                },
                {
                    "x": 1215,
                    "y": 1404
                },
                {
                    "x": 1215,
                    "y": 1599
                },
                {
                    "x": 225,
                    "y": 1599
                }
            ],
            "category": "paragraph",
            "html": "<p id='123' style='font-size:20px'>Chen, J., Pan, X., Yu, D., Song, K., Wang, X., Yu, D.,<br>and Chen, J. Skills-in-context prompting: Unlocking<br>compositionality in large language models. arXiv preprint<br>arXiv:2308.00304, 2023.</p>",
            "id": 123,
            "page": 9,
            "text": "Chen, J., Pan, X., Yu, D., Song, K., Wang, X., Yu, D., and Chen, J. Skills-in-context prompting: Unlocking compositionality in large language models. arXiv preprint arXiv:2308.00304, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1634
                },
                {
                    "x": 1213,
                    "y": 1634
                },
                {
                    "x": 1213,
                    "y": 1831
                },
                {
                    "x": 225,
                    "y": 1831
                }
            ],
            "category": "paragraph",
            "html": "<p id='124' style='font-size:18px'>Chen, W., Ma, X., Wang, X., and Cohen, W. W. Program<br>of thoughts prompting: Disentangling computation from<br>reasoning for numerical reasoning tasks. arXiv preprint<br>arXiv:2211.12588, 2022.</p>",
            "id": 124,
            "page": 9,
            "text": "Chen, W., Ma, X., Wang, X., and Cohen, W. W. Program of thoughts prompting: Disentangling computation from reasoning for numerical reasoning tasks. arXiv preprint arXiv:2211.12588, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1867
                },
                {
                    "x": 1216,
                    "y": 1867
                },
                {
                    "x": 1216,
                    "y": 2065
                },
                {
                    "x": 225,
                    "y": 2065
                }
            ],
            "category": "paragraph",
            "html": "<p id='125' style='font-size:20px'>Chowdhery, A., Narang, S., Devlin, J., Bosma, M., Mishra,<br>G., Roberts, A., Barham, P., Chung, H. W., Sutton, C.,<br>Gehrmann, S., et al. Palm: Scaling language modeling<br>with pathways. arXiv preprint arXiv:2204.02311, 2022.</p>",
            "id": 125,
            "page": 9,
            "text": "Chowdhery, A., Narang, S., Devlin, J., Bosma, M., Mishra, G., Roberts, A., Barham, P., Chung, H. W., Sutton, C., Gehrmann, S.,  Palm: Scaling language modeling with pathways. arXiv preprint arXiv:2204.02311, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2099
                },
                {
                    "x": 1215,
                    "y": 2099
                },
                {
                    "x": 1215,
                    "y": 2294
                },
                {
                    "x": 225,
                    "y": 2294
                }
            ],
            "category": "paragraph",
            "html": "<p id='126' style='font-size:18px'>Chung, H. W., Hou, L., Longpre, S., Zoph, B., Tay, Y.,<br>Fedus, W., Li, Y., Wang, X., Dehghani, M., Brahma,<br>S., et al. Scaling instruction-finetuned language models.<br>arXiv preprint arXiv:2210.11416, 2022.</p>",
            "id": 126,
            "page": 9,
            "text": "Chung, H. W., Hou, L., Longpre, S., Zoph, B., Tay, Y., Fedus, W., Li, Y., Wang, X., Dehghani, M., Brahma, S.,  Scaling instruction-finetuned language models. arXiv preprint arXiv:2210.11416, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2332
                },
                {
                    "x": 1216,
                    "y": 2332
                },
                {
                    "x": 1216,
                    "y": 2527
                },
                {
                    "x": 224,
                    "y": 2527
                }
            ],
            "category": "paragraph",
            "html": "<p id='127' style='font-size:16px'>Cobbe, K., Kosaraju, V., Bavarian, M., Chen, M., Jun, H.,<br>Kaiser, L., Plappert, M., Tworek, J., Hilton, J., Nakano,<br>R., et al. Training verifiers to solve math word problems.<br>arXiv preprint arXiv:2110.14168, 2021.</p>",
            "id": 127,
            "page": 9,
            "text": "Cobbe, K., Kosaraju, V., Bavarian, M., Chen, M., Jun, H., Kaiser, L., Plappert, M., Tworek, J., Hilton, J., Nakano, R.,  Training verifiers to solve math word problems. arXiv preprint arXiv:2110.14168, 2021."
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 2562
                },
                {
                    "x": 1214,
                    "y": 2562
                },
                {
                    "x": 1214,
                    "y": 2759
                },
                {
                    "x": 226,
                    "y": 2759
                }
            ],
            "category": "paragraph",
            "html": "<p id='128' style='font-size:20px'>Drozdov, A., Scharli, N., Akyurek, E., Scales, N., Song,<br>X., Chen, X., Bousquet, O., and Zhou, D. Composi-<br>tional semantic parsing with large language models. arXiv<br>preprint arXiv:2209.15003, 2022.</p>",
            "id": 128,
            "page": 9,
            "text": "Drozdov, A., Scharli, N., Akyurek, E., Scales, N., Song, X., Chen, X., Bousquet, O., and Zhou, D. Compositional semantic parsing with large language models. arXiv preprint arXiv:2209.15003, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2794
                },
                {
                    "x": 1215,
                    "y": 2794
                },
                {
                    "x": 1215,
                    "y": 2991
                },
                {
                    "x": 225,
                    "y": 2991
                }
            ],
            "category": "paragraph",
            "html": "<p id='129' style='font-size:18px'>Fernando, C., Banarse, D., Michalewski, H., Osindero,<br>S., and Rockt�schel, T. Promptbreeder: Self-referential<br>self-improvement via prompt evolution. arXiv preprint<br>arXiv:2309.16797, 2023.</p>",
            "id": 129,
            "page": 9,
            "text": "Fernando, C., Banarse, D., Michalewski, H., Osindero, S., and Rockt�schel, T. Promptbreeder: Self-referential self-improvement via prompt evolution. arXiv preprint arXiv:2309.16797, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 1272,
                    "y": 283
                },
                {
                    "x": 2266,
                    "y": 283
                },
                {
                    "x": 2266,
                    "y": 483
                },
                {
                    "x": 1272,
                    "y": 483
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='130' style='font-size:16px'>Gao, C., Jiang, H., Cai, D., Shi, S., and Lam, W. Strategyllm:<br>Large language models as strategy generators, executors,<br>optimizers, and evaluators for problem solving. arXiv<br>preprint arXiv:2311.08803, 2023a.</p>",
            "id": 130,
            "page": 9,
            "text": "Gao, C., Jiang, H., Cai, D., Shi, S., and Lam, W. Strategyllm: Large language models as strategy generators, executors, optimizers, and evaluators for problem solving. arXiv preprint arXiv:2311.08803, 2023a."
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 531
                },
                {
                    "x": 2266,
                    "y": 531
                },
                {
                    "x": 2266,
                    "y": 730
                },
                {
                    "x": 1273,
                    "y": 730
                }
            ],
            "category": "paragraph",
            "html": "<p id='131' style='font-size:16px'>Gao, L., Madaan, A., Zhou, S., Alon, U., Liu, P., Yang,<br>Y., Callan, J., and Neubig, G. Pal: Program-aided lan-<br>guage models. In International Conference on Machine<br>Learning, pp. 10764-10799. PMLR, 2023b.</p>",
            "id": 131,
            "page": 9,
            "text": "Gao, L., Madaan, A., Zhou, S., Alon, U., Liu, P., Yang, Y., Callan, J., and Neubig, G. Pal: Program-aided language models. In International Conference on Machine Learning, pp. 10764-10799. PMLR, 2023b."
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 776
                },
                {
                    "x": 2265,
                    "y": 776
                },
                {
                    "x": 2265,
                    "y": 972
                },
                {
                    "x": 1273,
                    "y": 972
                }
            ],
            "category": "paragraph",
            "html": "<p id='132' style='font-size:18px'>Hao, S., Gu, Y., Ma, H., Hong, J. J., Wang, Z., Wang, D. Z.,<br>and Hu, Z. Reasoning with language model is planning<br>with world model. arXiv preprint arXiv:2305.14992,<br>2023.</p>",
            "id": 132,
            "page": 9,
            "text": "Hao, S., Gu, Y., Ma, H., Hong, J. J., Wang, Z., Wang, D. Z., and Hu, Z. Reasoning with language model is planning with world model. arXiv preprint arXiv:2305.14992, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 1022
                },
                {
                    "x": 2265,
                    "y": 1022
                },
                {
                    "x": 2265,
                    "y": 1218
                },
                {
                    "x": 1274,
                    "y": 1218
                }
            ],
            "category": "paragraph",
            "html": "<p id='133' style='font-size:20px'>Hendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart,<br>S., Tang, E., Song, D., and Steinhardt, J. Measuring<br>mathematical problem solving with the math dataset. Sort,<br>2(4):0-6.</p>",
            "id": 133,
            "page": 9,
            "text": "Hendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart, S., Tang, E., Song, D., and Steinhardt, J. Measuring mathematical problem solving with the math dataset. Sort, 2(4):0-6."
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 1266
                },
                {
                    "x": 2266,
                    "y": 1266
                },
                {
                    "x": 2266,
                    "y": 1416
                },
                {
                    "x": 1275,
                    "y": 1416
                }
            ],
            "category": "paragraph",
            "html": "<p id='134' style='font-size:18px'>Hendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart,<br>S., Tang, E., Song, D., and Steinhardt, J. Measuring math-<br>ematical problem solving with the math dataset, 2021.</p>",
            "id": 134,
            "page": 9,
            "text": "Hendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart, S., Tang, E., Song, D., and Steinhardt, J. Measuring mathematical problem solving with the math dataset, 2021."
        },
        {
            "bounding_box": [
                {
                    "x": 1277,
                    "y": 1462
                },
                {
                    "x": 2266,
                    "y": 1462
                },
                {
                    "x": 2266,
                    "y": 1709
                },
                {
                    "x": 1277,
                    "y": 1709
                }
            ],
            "category": "paragraph",
            "html": "<p id='135' style='font-size:18px'>Khot, T., Trivedi, H., Finlayson, M., Fu, Y., Richardson, K.,<br>Clark, P., and Sabharwal, A. Decomposed prompting:<br>A modular approach for solving complex tasks. In The<br>Eleventh International Conference on Learning Repre-<br>sentations, 2022.</p>",
            "id": 135,
            "page": 9,
            "text": "Khot, T., Trivedi, H., Finlayson, M., Fu, Y., Richardson, K., Clark, P., and Sabharwal, A. Decomposed prompting: A modular approach for solving complex tasks. In The Eleventh International Conference on Learning Representations, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 1277,
                    "y": 1758
                },
                {
                    "x": 2267,
                    "y": 1758
                },
                {
                    "x": 2267,
                    "y": 1955
                },
                {
                    "x": 1277,
                    "y": 1955
                }
            ],
            "category": "paragraph",
            "html": "<p id='136' style='font-size:16px'>Kojima, T., Gu, S. S., Reid, M., Matsuo, Y., and Iwasawa,<br>Y. Large language models are zero-shot reasoners. Ad-<br>vances in neural information processing systems, 35:<br>22199-22213, 2022.</p>",
            "id": 136,
            "page": 9,
            "text": "Kojima, T., Gu, S. S., Reid, M., Matsuo, Y., and Iwasawa, Y. Large language models are zero-shot reasoners. Advances in neural information processing systems, 35: 22199-22213, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 2003
                },
                {
                    "x": 2265,
                    "y": 2003
                },
                {
                    "x": 2265,
                    "y": 2250
                },
                {
                    "x": 1275,
                    "y": 2250
                }
            ],
            "category": "paragraph",
            "html": "<p id='137' style='font-size:16px'>Kuznia, K., Mishra, S., Parmar, M., and Baral, C. Less is<br>more: Summary of long instructions is better for program<br>synthesis. In Proceedings of the 2022 Conference on<br>Empirical Methods in Natural Language Processing, pp.<br>4532-4552, 2022.</p>",
            "id": 137,
            "page": 9,
            "text": "Kuznia, K., Mishra, S., Parmar, M., and Baral, C. Less is more: Summary of long instructions is better for program synthesis. In Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing, pp. 4532-4552, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 1273,
                    "y": 2297
                },
                {
                    "x": 2264,
                    "y": 2297
                },
                {
                    "x": 2264,
                    "y": 2497
                },
                {
                    "x": 1273,
                    "y": 2497
                }
            ],
            "category": "paragraph",
            "html": "<p id='138' style='font-size:20px'>Liu, T., Guo, Q., Yang, Y., Hu, X., Zhang, Y., Qiu, X.,<br>and Zhang, Z. Plan, verify and switch: Integrated<br>reasoning with diverse x-of-thoughts. arXiv preprint<br>arXiv:2310.14628, 2023.</p>",
            "id": 138,
            "page": 9,
            "text": "Liu, T., Guo, Q., Yang, Y., Hu, X., Zhang, Y., Qiu, X., and Zhang, Z. Plan, verify and switch: Integrated reasoning with diverse x-of-thoughts. arXiv preprint arXiv:2310.14628, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 1276,
                    "y": 2544
                },
                {
                    "x": 2268,
                    "y": 2544
                },
                {
                    "x": 2268,
                    "y": 2989
                },
                {
                    "x": 1276,
                    "y": 2989
                }
            ],
            "category": "paragraph",
            "html": "<p id='139' style='font-size:16px'>Mishra, S. and Nouri, E. HELP ME THINK: A simple<br>prompting strategy for non-experts to create customized<br>content with models. In Rogers, A., Boyd-Graber, J.,<br>and Okazaki, N. (eds.), Findings of the Association for<br>Computational Linguistics: ACL 2023, pp. 11834-11890,<br>Toronto, Canada, July 2023. Association for Computa-<br>tional Linguistics. doi: 10.18653/v1/2023.findings-acl.<br>751. URL https : / / aclanthology · org/2023 .<br>findings-acl · 751.</p>",
            "id": 139,
            "page": 9,
            "text": "Mishra, S. and Nouri, E. HELP ME THINK: A simple prompting strategy for non-experts to create customized content with models. In Rogers, A., Boyd-Graber, J., and Okazaki, N. (eds.), Findings of the Association for Computational Linguistics: ACL 2023, pp. 11834-11890, Toronto, Canada, July 2023. Association for Computational Linguistics. doi: 10.18653/v1/2023.findings-acl. 751. URL https : / / aclanthology · org/2023 . findings-acl · 751."
        },
        {
            "bounding_box": [
                {
                    "x": 1228,
                    "y": 3050
                },
                {
                    "x": 1256,
                    "y": 3050
                },
                {
                    "x": 1256,
                    "y": 3086
                },
                {
                    "x": 1228,
                    "y": 3086
                }
            ],
            "category": "footer",
            "html": "<footer id='140' style='font-size:14px'>9</footer>",
            "id": 140,
            "page": 9,
            "text": "9"
        },
        {
            "bounding_box": [
                {
                    "x": 601,
                    "y": 192
                },
                {
                    "x": 1883,
                    "y": 192
                },
                {
                    "x": 1883,
                    "y": 235
                },
                {
                    "x": 601,
                    "y": 235
                }
            ],
            "category": "header",
            "html": "<header id='141' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 141,
            "page": 10,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 285
                },
                {
                    "x": 1216,
                    "y": 285
                },
                {
                    "x": 1216,
                    "y": 581
                },
                {
                    "x": 224,
                    "y": 581
                }
            ],
            "category": "paragraph",
            "html": "<p id='142' style='font-size:18px'>Mishra, S., Finlayson, M., Lu, P., Tang, L., Welleck, S.,<br>Baral, C., Rajpurohit, T., Tafjord, 0., Sabharwal, A.,<br>Clark, P., et al. Lila: A unified benchmark for mathemati-<br>cal reasoning. In Proceedings of the 2022 Conference on<br>Empirical Methods in Natural Language Processing, pp.<br>5807-5832, 2022a.</p>",
            "id": 142,
            "page": 10,
            "text": "Mishra, S., Finlayson, M., Lu, P., Tang, L., Welleck, S., Baral, C., Rajpurohit, T., Tafjord, 0., Sabharwal, A., Clark, P.,  Lila: A unified benchmark for mathematical reasoning. In Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing, pp. 5807-5832, 2022a."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 622
                },
                {
                    "x": 1216,
                    "y": 622
                },
                {
                    "x": 1216,
                    "y": 818
                },
                {
                    "x": 225,
                    "y": 818
                }
            ],
            "category": "paragraph",
            "html": "<p id='143' style='font-size:20px'>Mishra, S., Khashabi, D., Baral, C., Choi, Y., and Hajishirzi,<br>H. Reframing instructional prompts to gptk's language.<br>In Findings of the Associationfor Computational Linguis-<br>tics: ACL 2022, pp. 589-612, 2022b.</p>",
            "id": 143,
            "page": 10,
            "text": "Mishra, S., Khashabi, D., Baral, C., Choi, Y., and Hajishirzi, H. Reframing instructional prompts to gptk's language. In Findings of the Associationfor Computational Linguistics: ACL 2022, pp. 589-612, 2022b."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 859
                },
                {
                    "x": 1214,
                    "y": 859
                },
                {
                    "x": 1214,
                    "y": 1106
                },
                {
                    "x": 224,
                    "y": 1106
                }
            ],
            "category": "paragraph",
            "html": "<p id='144' style='font-size:20px'>Mishra, S., Khashabi, D., Baral, C., and Hajishirzi, H. Cross-<br>task generalization via natural language crowdsourcing<br>instructions. In Proceedings of the 60th Annual Meeting<br>of the Association for Computational Linguistics (Volume<br>1: Long Papers), pp. 3470-3487, 2022c.</p>",
            "id": 144,
            "page": 10,
            "text": "Mishra, S., Khashabi, D., Baral, C., and Hajishirzi, H. Crosstask generalization via natural language crowdsourcing instructions. In Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pp. 3470-3487, 2022c."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1145
                },
                {
                    "x": 1214,
                    "y": 1145
                },
                {
                    "x": 1214,
                    "y": 1292
                },
                {
                    "x": 224,
                    "y": 1292
                }
            ],
            "category": "paragraph",
            "html": "<p id='145' style='font-size:18px'>Newell, A., Shaw, J. C., and Simon, H. A. Elements of a<br>theory of human problem solving. Psychological review,<br>65(3):151, 1958.</p>",
            "id": 145,
            "page": 10,
            "text": "Newell, A., Shaw, J. C., and Simon, H. A. Elements of a theory of human problem solving. Psychological review, 65(3):151, 1958."
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 1332
                },
                {
                    "x": 1215,
                    "y": 1332
                },
                {
                    "x": 1215,
                    "y": 1580
                },
                {
                    "x": 226,
                    "y": 1580
                }
            ],
            "category": "paragraph",
            "html": "<p id='146' style='font-size:18px'>Nye, M., Andreassen, A. J., Gur-Ari, G., Michalewski, H.,<br>Austin, J., Bieber, D., Dohan, D., Lewkowycz, A., Bosma,<br>M., Luan, D., et al. Show your work: Scratchpads for<br>intermediate computation with language models. arXiv<br>preprint arXiv:2112.00114, 2021.</p>",
            "id": 146,
            "page": 10,
            "text": "Nye, M., Andreassen, A. J., Gur-Ari, G., Michalewski, H., Austin, J., Bieber, D., Dohan, D., Lewkowycz, A., Bosma, M., Luan, D.,  Show your work: Scratchpads for intermediate computation with language models. arXiv preprint arXiv:2112.00114, 2021."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1620
                },
                {
                    "x": 1214,
                    "y": 1620
                },
                {
                    "x": 1214,
                    "y": 1769
                },
                {
                    "x": 224,
                    "y": 1769
                }
            ],
            "category": "paragraph",
            "html": "<p id='147' style='font-size:16px'>OpenAI. Chatgpt: Optimizing language models for dia-<br>logue, 2022. URL https : / / openai · com/blog/<br>chatgpt/.</p>",
            "id": 147,
            "page": 10,
            "text": "OpenAI. Chatgpt: Optimizing language models for dialogue, 2022. URL https : / / openai · com/blog/ chatgpt/."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1807
                },
                {
                    "x": 1208,
                    "y": 1807
                },
                {
                    "x": 1208,
                    "y": 1956
                },
                {
                    "x": 225,
                    "y": 1956
                }
            ],
            "category": "paragraph",
            "html": "<p id='148' style='font-size:14px'>OpenAI. Json generation mode, 2023a. URL<br>https : / /platform · openai · com/ docs /<br>guides /text-generation / json-mode.</p>",
            "id": 148,
            "page": 10,
            "text": "OpenAI. Json generation mode, 2023a. URL https : / /platform · openai · com/ docs / guides /text-generation / json-mode."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1995
                },
                {
                    "x": 1216,
                    "y": 1995
                },
                {
                    "x": 1216,
                    "y": 2091
                },
                {
                    "x": 225,
                    "y": 2091
                }
            ],
            "category": "paragraph",
            "html": "<p id='149' style='font-size:18px'>OpenAI, R. Gpt-4 technical report. arXiv, pp. 2303-08774,<br>2023b.</p>",
            "id": 149,
            "page": 10,
            "text": "OpenAI, R. Gpt-4 technical report. arXiv, pp. 2303-08774, 2023b."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2131
                },
                {
                    "x": 1214,
                    "y": 2131
                },
                {
                    "x": 1214,
                    "y": 2380
                },
                {
                    "x": 225,
                    "y": 2380
                }
            ],
            "category": "paragraph",
            "html": "<p id='150' style='font-size:20px'>Ouyang, L., Wu, J., Jiang, X., Almeida, D., Wainwright, C.,<br>Mishkin, P., Zhang, C., Agarwal, S., Slama, K., Ray, A.,<br>et al. Training language models to follow instructions<br>with human feedback. Advances in Neural Information<br>Processing Systems, 35:27730-27744, 2022.</p>",
            "id": 150,
            "page": 10,
            "text": "Ouyang, L., Wu, J., Jiang, X., Almeida, D., Wainwright, C., Mishkin, P., Zhang, C., Agarwal, S., Slama, K., Ray, A.,  Training language models to follow instructions with human feedback. Advances in Neural Information Processing Systems, 35:27730-27744, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 2419
                },
                {
                    "x": 1215,
                    "y": 2419
                },
                {
                    "x": 1215,
                    "y": 2618
                },
                {
                    "x": 226,
                    "y": 2618
                }
            ],
            "category": "paragraph",
            "html": "<p id='151' style='font-size:16px'>Patel, P., Mishra, S., Parmar, M., and Baral, C. Is a ques-<br>tion decomposition unit all we need? In Proceedings of<br>the 2022 Conference on Empirical Methods in Natural<br>Language Processing, pp. 4553-4569, 2022.</p>",
            "id": 151,
            "page": 10,
            "text": "Patel, P., Mishra, S., Parmar, M., and Baral, C. Is a question decomposition unit all we need? In Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing, pp. 4553-4569, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2655
                },
                {
                    "x": 1212,
                    "y": 2655
                },
                {
                    "x": 1212,
                    "y": 2755
                },
                {
                    "x": 224,
                    "y": 2755
                }
            ],
            "category": "paragraph",
            "html": "<p id='152' style='font-size:14px'>Polya, G. How to solve it: A new aspect of mathematical<br>method, volume 85. Princeton university press, 2004.</p>",
            "id": 152,
            "page": 10,
            "text": "Polya, G. How to solve it: A new aspect of mathematical method, volume 85. Princeton university press, 2004."
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 2795
                },
                {
                    "x": 1215,
                    "y": 2795
                },
                {
                    "x": 1215,
                    "y": 2991
                },
                {
                    "x": 226,
                    "y": 2991
                }
            ],
            "category": "paragraph",
            "html": "<p id='153' style='font-size:16px'>Rasmussen, J. Skills, rules, and knowledge; signals, signs,<br>and symbols, and other distinctions in human perfor-<br>mance models. IEEE transactions on systems, man, and<br>cybernetics, (3):257-266, 1983.</p>",
            "id": 153,
            "page": 10,
            "text": "Rasmussen, J. Skills, rules, and knowledge; signals, signs, and symbols, and other distinctions in human performance models. IEEE transactions on systems, man, and cybernetics, (3):257-266, 1983."
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 285
                },
                {
                    "x": 2266,
                    "y": 285
                },
                {
                    "x": 2266,
                    "y": 482
                },
                {
                    "x": 1274,
                    "y": 482
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='154' style='font-size:20px'>Saha, S., Levy, O., Celikyilmaz, A., Bansal, M., Weston,<br>J., and Li, X. Branch-solve-merge improves large lan-<br>guage model evaluation and generation. arXiv preprint<br>arXiv:2310.15123, 2023.</p>",
            "id": 154,
            "page": 10,
            "text": "Saha, S., Levy, O., Celikyilmaz, A., Bansal, M., Weston, J., and Li, X. Branch-solve-merge improves large language model evaluation and generation. arXiv preprint arXiv:2310.15123, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 514
                },
                {
                    "x": 2267,
                    "y": 514
                },
                {
                    "x": 2267,
                    "y": 809
                },
                {
                    "x": 1274,
                    "y": 809
                }
            ],
            "category": "paragraph",
            "html": "<p id='155' style='font-size:20px'>Srivastava, A., Rastogi, A., Rao, A., Shoeb, A. A. M., Abid,<br>A., Fisch, A., Brown, A. R., Santoro, A., Gupta, A.,<br>Garriga-Alonso, A., et al. Beyond the imitation game:<br>Quantifying and extrapolating the capabilities of language<br>models. Transactions on Machine Learning Research,<br>2023.</p>",
            "id": 155,
            "page": 10,
            "text": "Srivastava, A., Rastogi, A., Rao, A., Shoeb, A. A. M., Abid, A., Fisch, A., Brown, A. R., Santoro, A., Gupta, A., Garriga-Alonso, A.,  Beyond the imitation game: Quantifying and extrapolating the capabilities of language models. Transactions on Machine Learning Research, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 841
                },
                {
                    "x": 2266,
                    "y": 841
                },
                {
                    "x": 2266,
                    "y": 1090
                },
                {
                    "x": 1275,
                    "y": 1090
                }
            ],
            "category": "paragraph",
            "html": "<p id='156' style='font-size:20px'>Suzgun, M., Scales, N., Scharli, N., Gehrmann, S., Tay,<br>Y., Chung, H. W., Chowdhery, A., Le, Q. V., Chi,<br>E. H., Zhou, D., et al. Challenging big-bench tasks and<br>whether chain-of-thought can solve them. arXiv preprint<br>arXiv:2210.09261, 2022.</p>",
            "id": 156,
            "page": 10,
            "text": "Suzgun, M., Scales, N., Scharli, N., Gehrmann, S., Tay, Y., Chung, H. W., Chowdhery, A., Le, Q. V., Chi, E. H., Zhou, D.,  Challenging big-bench tasks and whether chain-of-thought can solve them. arXiv preprint arXiv:2210.09261, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 1274,
                    "y": 1120
                },
                {
                    "x": 2268,
                    "y": 1120
                },
                {
                    "x": 2268,
                    "y": 1366
                },
                {
                    "x": 1274,
                    "y": 1366
                }
            ],
            "category": "paragraph",
            "html": "<p id='157' style='font-size:18px'>Touvron, H., Martin, L., Stone, K., Albert, P., Almahairi,<br>A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P.,<br>Bhosale, S., et al. Llama 2: Open foundation and fine-<br>tuned chat models. arXiv preprint arXiv:2307.09288,<br>2023.</p>",
            "id": 157,
            "page": 10,
            "text": "Touvron, H., Martin, L., Stone, K., Albert, P., Almahairi, A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P., Bhosale, S.,  Llama 2: Open foundation and finetuned chat models. arXiv preprint arXiv:2307.09288, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 1276,
                    "y": 1399
                },
                {
                    "x": 2294,
                    "y": 1399
                },
                {
                    "x": 2294,
                    "y": 1796
                },
                {
                    "x": 1276,
                    "y": 1796
                }
            ],
            "category": "paragraph",
            "html": "<p id='158' style='font-size:16px'>Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones,<br>L., Gomez, A. N., Kaiser, L. u., and Polosukhin, I. Atten-<br>tion is all you need. In Advances in Neural Information<br>Processing Systems, volume 30. Curran Associates, Inc.,<br>2017. URL https : / /proceedings · neurips.<br>cc/paper_files/paper/2017/file/<br>3f5ee243547dee91 fbd053c1c4a845aa-Paper.<br>pdf.</p>",
            "id": 158,
            "page": 10,
            "text": "Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A. N., Kaiser, L. u., and Polosukhin, I. Attention is all you need. In Advances in Neural Information Processing Systems, volume 30. Curran Associates, Inc., 2017. URL https : / /proceedings · neurips. cc/paper_files/paper/2017/file/ 3f5ee243547dee91 fbd053c1c4a845aa-Paper. pdf."
        },
        {
            "bounding_box": [
                {
                    "x": 1276,
                    "y": 1826
                },
                {
                    "x": 2266,
                    "y": 1826
                },
                {
                    "x": 2266,
                    "y": 2027
                },
                {
                    "x": 1276,
                    "y": 2027
                }
            ],
            "category": "paragraph",
            "html": "<p id='159' style='font-size:20px'>Wang, L., Xu, W., Lan, Y., Hu, Z., Lan, Y., Lee, R. K.-W.,<br>and Lim, E.-P. Plan-and-solve prompting: Improving<br>zero-shot chain-of-thought reasoning by large language<br>models. arXiv preprint arXiv:2305.04091, 2023.</p>",
            "id": 159,
            "page": 10,
            "text": "Wang, L., Xu, W., Lan, Y., Hu, Z., Lan, Y., Lee, R. K.-W., and Lim, E.-P. Plan-and-solve prompting: Improving zero-shot chain-of-thought reasoning by large language models. arXiv preprint arXiv:2305.04091, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 1276,
                    "y": 2057
                },
                {
                    "x": 2267,
                    "y": 2057
                },
                {
                    "x": 2267,
                    "y": 2305
                },
                {
                    "x": 1276,
                    "y": 2305
                }
            ],
            "category": "paragraph",
            "html": "<p id='160' style='font-size:20px'>Wang, X., Wei, J., Schuurmans, D., Le, Q. V., Chi,<br>E. H., Narang, S., Chowdhery, A., and Zhou, D. Self-<br>consistency improves chain of thought reasoning in lan-<br>guage models. In The Eleventh International Conference<br>on Learning Representations, 2022.</p>",
            "id": 160,
            "page": 10,
            "text": "Wang, X., Wei, J., Schuurmans, D., Le, Q. V., Chi, E. H., Narang, S., Chowdhery, A., and Zhou, D. Selfconsistency improves chain of thought reasoning in language models. In The Eleventh International Conference on Learning Representations, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 1275,
                    "y": 2336
                },
                {
                    "x": 2266,
                    "y": 2336
                },
                {
                    "x": 2266,
                    "y": 2533
                },
                {
                    "x": 1275,
                    "y": 2533
                }
            ],
            "category": "paragraph",
            "html": "<p id='161' style='font-size:18px'>Wei, J., Bosma, M., Zhao, V., Guu, K., Yu, A. W., Lester,<br>B., Du, N., Dai, A. M., and Le, Q. V. Finetuned lan-<br>guage models are zero-shot learners. In International<br>Conference on Learning Representations, 2021.</p>",
            "id": 161,
            "page": 10,
            "text": "Wei, J., Bosma, M., Zhao, V., Guu, K., Yu, A. W., Lester, B., Du, N., Dai, A. M., and Le, Q. V. Finetuned language models are zero-shot learners. In International Conference on Learning Representations, 2021."
        },
        {
            "bounding_box": [
                {
                    "x": 1276,
                    "y": 2564
                },
                {
                    "x": 2267,
                    "y": 2564
                },
                {
                    "x": 2267,
                    "y": 2810
                },
                {
                    "x": 1276,
                    "y": 2810
                }
            ],
            "category": "paragraph",
            "html": "<p id='162' style='font-size:22px'>Wei, J., Wang, X., Schuurmans, D., Bosma, M., Xia, F.,<br>Chi, E., Le, Q. V., Zhou, D., et al. Chain-of-thought<br>prompting elicits reasoning in large language models.<br>Advances in Neural Information Processing Systems, 35:<br>24824-24837, 2022.</p>",
            "id": 162,
            "page": 10,
            "text": "Wei, J., Wang, X., Schuurmans, D., Bosma, M., Xia, F., Chi, E., Le, Q. V., Zhou, D.,  Chain-of-thought prompting elicits reasoning in large language models. Advances in Neural Information Processing Systems, 35: 24824-24837, 2022."
        },
        {
            "bounding_box": [
                {
                    "x": 1277,
                    "y": 2844
                },
                {
                    "x": 2264,
                    "y": 2844
                },
                {
                    "x": 2264,
                    "y": 2992
                },
                {
                    "x": 1277,
                    "y": 2992
                }
            ],
            "category": "paragraph",
            "html": "<p id='163' style='font-size:20px'>Yang, C., Wang, X., Lu, Y., Liu, H., Le, Q. V., Zhou, D., and<br>Chen, X. Large language models as optimizers. arXiv<br>preprint arXiv:2309.03409, 2023.</p>",
            "id": 163,
            "page": 10,
            "text": "Yang, C., Wang, X., Lu, Y., Liu, H., Le, Q. V., Zhou, D., and Chen, X. Large language models as optimizers. arXiv preprint arXiv:2309.03409, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 1220,
                    "y": 3050
                },
                {
                    "x": 1266,
                    "y": 3050
                },
                {
                    "x": 1266,
                    "y": 3089
                },
                {
                    "x": 1220,
                    "y": 3089
                }
            ],
            "category": "footer",
            "html": "<footer id='164' style='font-size:14px'>10</footer>",
            "id": 164,
            "page": 10,
            "text": "10"
        },
        {
            "bounding_box": [
                {
                    "x": 600,
                    "y": 192
                },
                {
                    "x": 1882,
                    "y": 192
                },
                {
                    "x": 1882,
                    "y": 235
                },
                {
                    "x": 600,
                    "y": 235
                }
            ],
            "category": "header",
            "html": "<header id='165' style='font-size:18px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 165,
            "page": 11,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 227,
                    "y": 283
                },
                {
                    "x": 1216,
                    "y": 283
                },
                {
                    "x": 1216,
                    "y": 481
                },
                {
                    "x": 227,
                    "y": 481
                }
            ],
            "category": "paragraph",
            "html": "<p id='166' style='font-size:18px'>Yao, S., Yu, D., Zhao, J., Shafran, I., Griffiths, T. L., Cao, Y.,<br>and Narasimhan, K. Tree of thoughts: Deliberate prob-<br>lem solving with large language models. arXiv preprint<br>arXiv:2305.10601, 2023a.</p>",
            "id": 166,
            "page": 11,
            "text": "Yao, S., Yu, D., Zhao, J., Shafran, I., Griffiths, T. L., Cao, Y., and Narasimhan, K. Tree of thoughts: Deliberate problem solving with large language models. arXiv preprint arXiv:2305.10601, 2023a."
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 515
                },
                {
                    "x": 1216,
                    "y": 515
                },
                {
                    "x": 1216,
                    "y": 666
                },
                {
                    "x": 226,
                    "y": 666
                }
            ],
            "category": "paragraph",
            "html": "<p id='167' style='font-size:20px'>Yao, Y., Li, Z., and Zhao, H. Beyond chain-of-thought,<br>effective graph-of-thought reasoning in large language<br>models. arXiv preprint arXiv:2305.16582, 2023b.</p>",
            "id": 167,
            "page": 11,
            "text": "Yao, Y., Li, Z., and Zhao, H. Beyond chain-of-thought, effective graph-of-thought reasoning in large language models. arXiv preprint arXiv:2305.16582, 2023b."
        },
        {
            "bounding_box": [
                {
                    "x": 227,
                    "y": 699
                },
                {
                    "x": 1215,
                    "y": 699
                },
                {
                    "x": 1215,
                    "y": 894
                },
                {
                    "x": 227,
                    "y": 894
                }
            ],
            "category": "paragraph",
            "html": "<p id='168' style='font-size:20px'>Yasunaga, M., Chen, X., Li, Y., Pasupat, P., Leskovec, J.,<br>Liang, P., Chi, E. H., and Zhou, D. Large language models<br>as analogical reasoners. arXiv preprint arXiv:2310.01714,<br>2023.</p>",
            "id": 168,
            "page": 11,
            "text": "Yasunaga, M., Chen, X., Li, Y., Pasupat, P., Leskovec, J., Liang, P., Chi, E. H., and Zhou, D. Large language models as analogical reasoners. arXiv preprint arXiv:2310.01714, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 932
                },
                {
                    "x": 1214,
                    "y": 932
                },
                {
                    "x": 1214,
                    "y": 1130
                },
                {
                    "x": 225,
                    "y": 1130
                }
            ],
            "category": "paragraph",
            "html": "<p id='169' style='font-size:16px'>Zheng, H. S., Mishra, S., Chen, X., Cheng, H.-T., Chi, E. H.,<br>Le, Q. V., and Zhou, D. Take a step back: Evoking<br>reasoning via abstraction in large language models. arXiv<br>preprint arXiv:2310.06117, 2023.</p>",
            "id": 169,
            "page": 11,
            "text": "Zheng, H. S., Mishra, S., Chen, X., Cheng, H.-T., Chi, E. H., Le, Q. V., and Zhou, D. Take a step back: Evoking reasoning via abstraction in large language models. arXiv preprint arXiv:2310.06117, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1165
                },
                {
                    "x": 1216,
                    "y": 1165
                },
                {
                    "x": 1216,
                    "y": 1361
                },
                {
                    "x": 224,
                    "y": 1361
                }
            ],
            "category": "paragraph",
            "html": "<p id='170' style='font-size:18px'>Zhong, R., Lee, K., Zhang, Z., and Klein, D. Adapt-<br>ing language models for zero-shot learning by meta-<br>tuning on dataset and prompt collections. arXiv preprint<br>arXiv:2104.04670, 2021.</p>",
            "id": 170,
            "page": 11,
            "text": "Zhong, R., Lee, K., Zhang, Z., and Klein, D. Adapting language models for zero-shot learning by metatuning on dataset and prompt collections. arXiv preprint arXiv:2104.04670, 2021."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1396
                },
                {
                    "x": 1213,
                    "y": 1396
                },
                {
                    "x": 1213,
                    "y": 1646
                },
                {
                    "x": 225,
                    "y": 1646
                }
            ],
            "category": "paragraph",
            "html": "<p id='171' style='font-size:20px'>Zhou, D., Scharli, N., Hou, L., Wei, J., Scales, N., Wang, X.,<br>Schuurmans, D., Cui, C., Bousquet, 0., Le, Q. V., et al.<br>Least-to-most prompting enables complex reasoning in<br>large language models. In The Eleventh International<br>Conference on Learning Representations, 2022a.</p>",
            "id": 171,
            "page": 11,
            "text": "Zhou, D., Scharli, N., Hou, L., Wei, J., Scales, N., Wang, X., Schuurmans, D., Cui, C., Bousquet, 0., Le, Q. V.,  Least-to-most prompting enables complex reasoning in large language models. In The Eleventh International Conference on Learning Representations, 2022a."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1679
                },
                {
                    "x": 1216,
                    "y": 1679
                },
                {
                    "x": 1216,
                    "y": 1926
                },
                {
                    "x": 225,
                    "y": 1926
                }
            ],
            "category": "paragraph",
            "html": "<p id='172' style='font-size:16px'>Zhou, P., Madaan, A., Potharaju, S. P., Gupta, A., McKee,<br>K. R., Holtzman, A., Pujara, J., Ren, X., Mishra, S.,<br>Nematzadeh, A., et al. How far are large language mod-<br>els from agents with theory-of-mind? arXiv preprint<br>arXiv:2310.03051, 2023.</p>",
            "id": 172,
            "page": 11,
            "text": "Zhou, P., Madaan, A., Potharaju, S. P., Gupta, A., McKee, K. R., Holtzman, A., Pujara, J., Ren, X., Mishra, S., Nematzadeh, A.,  How far are large language models from agents with theory-of-mind? arXiv preprint arXiv:2310.03051, 2023."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1961
                },
                {
                    "x": 1215,
                    "y": 1961
                },
                {
                    "x": 1215,
                    "y": 2161
                },
                {
                    "x": 224,
                    "y": 2161
                }
            ],
            "category": "paragraph",
            "html": "<p id='173' style='font-size:16px'>Zhou, Y., Muresanu, A. I., Han, Z., Paster, K., Pitis, S.,<br>Chan, H., and Ba, J. Large language models are human-<br>level prompt engineers. In The Eleventh International<br>Conference on Learning Representations, 2022b.</p>",
            "id": 173,
            "page": 11,
            "text": "Zhou, Y., Muresanu, A. I., Han, Z., Paster, K., Pitis, S., Chan, H., and Ba, J. Large language models are humanlevel prompt engineers. In The Eleventh International Conference on Learning Representations, 2022b."
        },
        {
            "bounding_box": [
                {
                    "x": 1218,
                    "y": 3050
                },
                {
                    "x": 1263,
                    "y": 3050
                },
                {
                    "x": 1263,
                    "y": 3089
                },
                {
                    "x": 1218,
                    "y": 3089
                }
            ],
            "category": "footer",
            "html": "<footer id='174' style='font-size:14px'>11</footer>",
            "id": 174,
            "page": 11,
            "text": "11"
        },
        {
            "bounding_box": [
                {
                    "x": 601,
                    "y": 190
                },
                {
                    "x": 1883,
                    "y": 190
                },
                {
                    "x": 1883,
                    "y": 236
                },
                {
                    "x": 601,
                    "y": 236
                }
            ],
            "category": "header",
            "html": "<header id='175' style='font-size:18px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 175,
            "page": 12,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 226,
                    "y": 278
                },
                {
                    "x": 912,
                    "y": 278
                },
                {
                    "x": 912,
                    "y": 334
                },
                {
                    "x": 226,
                    "y": 334
                }
            ],
            "category": "paragraph",
            "html": "<p id='176' style='font-size:22px'>A. Self-Discover Prompt Details</p>",
            "id": 176,
            "page": 12,
            "text": "A. Self-Discover Prompt Details"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 364
                },
                {
                    "x": 2262,
                    "y": 364
                },
                {
                    "x": 2262,
                    "y": 464
                },
                {
                    "x": 223,
                    "y": 464
                }
            ],
            "category": "paragraph",
            "html": "<p id='177' style='font-size:18px'>Table 2 shows all 39 reasoning modules we use for SELF-DISCOVER, adopted from Fernando et al. (2023), that contain<br>cognitive heuristics of problem-solving.</p>",
            "id": 177,
            "page": 12,
            "text": "Table 2 shows all 39 reasoning modules we use for SELF-DISCOVER, adopted from Fernando  (2023), that contain cognitive heuristics of problem-solving."
        },
        {
            "bounding_box": [
                {
                    "x": 222,
                    "y": 488
                },
                {
                    "x": 2262,
                    "y": 488
                },
                {
                    "x": 2262,
                    "y": 588
                },
                {
                    "x": 222,
                    "y": 588
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='178' style='font-size:16px'>Figure 10 contains the structure of the three actions of SELF-DISCOVER during Stage 1, where it discovers an intrinsic<br>reasoning structure on the task-level.</p>",
            "id": 178,
            "page": 12,
            "text": "Figure 10 contains the structure of the three actions of SELF-DISCOVER during Stage 1, where it discovers an intrinsic reasoning structure on the task-level."
        },
        {
            "bounding_box": [
                {
                    "x": 222,
                    "y": 614
                },
                {
                    "x": 2266,
                    "y": 614
                },
                {
                    "x": 2266,
                    "y": 766
                },
                {
                    "x": 222,
                    "y": 766
                }
            ],
            "category": "paragraph",
            "html": "<p id='179' style='font-size:16px'>For Stage 2, where we use the self-discovered structure to solve the task instances, we start with the prompt: \"Follow the<br>step-by-step reasoning plan in JSON to correctly solve the task. Fill in the values following the keys by reasoning specifically<br>about the task given. Do not simply rephrase the keys. , , followed by the reasoning structure, and finally the task instance.<br>,</p>",
            "id": 179,
            "page": 12,
            "text": "For Stage 2, where we use the self-discovered structure to solve the task instances, we start with the prompt: \"Follow the step-by-step reasoning plan in JSON to correctly solve the task. Fill in the values following the keys by reasoning specifically about the task given. Do not simply rephrase the keys. , , followed by the reasoning structure, and finally the task instance. ,"
        },
        {
            "bounding_box": [
                {
                    "x": 234,
                    "y": 799
                },
                {
                    "x": 2250,
                    "y": 799
                },
                {
                    "x": 2250,
                    "y": 1752
                },
                {
                    "x": 234,
                    "y": 1752
                }
            ],
            "category": "table",
            "html": "<table id='180' style='font-size:14px'><tr><td>SELECT</td><td>ADAPT</td><td>IMPLEMENT</td></tr><tr><td rowspan=\"3\">Select several reasoning modules that are crucial to utilize in order solve the given task: All reasoning module descriptions · Critical thinking: ... · Step-by-Step: ... ● Propose and verify: ... ...</td><td rowspan=\"3\">Rephrase and specify each reasoning module so that it better helps solving the task: SELECTED module descriptions: ● Critical thinking: ... Step-by-Step: ... ● ...</td><td>Operationalize the reasoning modules into a step-by-step reasoning plan in JSON format:</td></tr><tr><td>Paired IMPLEMENT Step Demonstration Reasoning description Example</td></tr><tr><td>Reasoning Plan Example</td></tr><tr><td rowspan=\"2\">Task examples w/o answer: Example 1: ... Example 2: ...</td><td rowspan=\"2\">Task examples w/o answer: Example 1: ... Example 2: ...</td><td>ADAPTED module description:</td></tr><tr><td>Task examples w/o answer: ...</td></tr><tr><td>Select several modules that are crucial for solving the tasks above:</td><td>Adapt each reasoning module description to better solve the tasks:</td><td>Implement a reasoning structure for solvers to follow step-by-step and arrive at correct answers:</td></tr></table>",
            "id": 180,
            "page": 12,
            "text": "SELECT ADAPT IMPLEMENT  Select several reasoning modules that are crucial to utilize in order solve the given task: All reasoning module descriptions · Critical thinking: ... · Step-by-Step: ... ● Propose and verify: ... ... Rephrase and specify each reasoning module so that it better helps solving the task: SELECTED module descriptions: ● Critical thinking: ... Step-by-Step: ... ● ... Operationalize the reasoning modules into a step-by-step reasoning plan in JSON format:  Paired IMPLEMENT Step Demonstration Reasoning description Example  Reasoning Plan Example  Task examples w/o answer: Example 1: ... Example 2: ... Task examples w/o answer: Example 1: ... Example 2: ... ADAPTED module description:  Task examples w/o answer: ...  Select several modules that are crucial for solving the tasks above: Adapt each reasoning module description to better solve the tasks:"
        },
        {
            "bounding_box": [
                {
                    "x": 222,
                    "y": 1804
                },
                {
                    "x": 2264,
                    "y": 1804
                },
                {
                    "x": 2264,
                    "y": 1945
                },
                {
                    "x": 222,
                    "y": 1945
                }
            ],
            "category": "paragraph",
            "html": "<p id='181' style='font-size:14px'>Figure 10. Meta-Prompts for the three actions of SELF-DISCOVER. Each meta-prompt consists of an instruction in the beginning and<br>the end, reasoning module descriptions, and task examples without labels. For IMPLEMENT, to show model an example of a reasoning<br>structure (plan), we present a human-written structure in JSON for another task.</p>",
            "id": 181,
            "page": 12,
            "text": "Figure 10. Meta-Prompts for the three actions of SELF-DISCOVER. Each meta-prompt consists of an instruction in the beginning and the end, reasoning module descriptions, and task examples without labels. For IMPLEMENT, to show model an example of a reasoning structure (plan), we present a human-written structure in JSON for another task."
        },
        {
            "bounding_box": [
                {
                    "x": 227,
                    "y": 2057
                },
                {
                    "x": 686,
                    "y": 2057
                },
                {
                    "x": 686,
                    "y": 2114
                },
                {
                    "x": 227,
                    "y": 2114
                }
            ],
            "category": "paragraph",
            "html": "<p id='182' style='font-size:20px'>B. Evaluation Details</p>",
            "id": 182,
            "page": 12,
            "text": "B. Evaluation Details"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 2143
                },
                {
                    "x": 2265,
                    "y": 2143
                },
                {
                    "x": 2265,
                    "y": 2446
                },
                {
                    "x": 223,
                    "y": 2446
                }
            ],
            "category": "paragraph",
            "html": "<p id='183' style='font-size:16px'>We use accuracy and exact matching as with other methods tested on BBH, T4D and MATH. To properly evaluate the<br>generated answers from LLMs, we prompt the models to end the answer with \"Thus, the final answer is [X]\", where X<br>is either one answer option such as \"A\" or a string such as \"valid\". During evaluation, we manually examine each task's<br>outputs from LLMs and design heuristics to extract the final answers. For MATH dataset, we find that it is challenging to<br>extract the answers accurately. As a result, we subsample 200 test examples from MATH, and manually sanity check and<br>annotate the extracted answers for all methods tested in our paper.</p>",
            "id": 183,
            "page": 12,
            "text": "We use accuracy and exact matching as with other methods tested on BBH, T4D and MATH. To properly evaluate the generated answers from LLMs, we prompt the models to end the answer with \"Thus, the final answer is [X]\", where X is either one answer option such as \"A\" or a string such as \"valid\". During evaluation, we manually examine each task's outputs from LLMs and design heuristics to extract the final answers. For MATH dataset, we find that it is challenging to extract the answers accurately. As a result, we subsample 200 test examples from MATH, and manually sanity check and annotate the extracted answers for all methods tested in our paper."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 2505
                },
                {
                    "x": 889,
                    "y": 2505
                },
                {
                    "x": 889,
                    "y": 2563
                },
                {
                    "x": 225,
                    "y": 2563
                }
            ],
            "category": "paragraph",
            "html": "<p id='184' style='font-size:20px'>C. BBH Per Task Performance</p>",
            "id": 184,
            "page": 12,
            "text": "C. BBH Per Task Performance"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2593
                },
                {
                    "x": 1406,
                    "y": 2593
                },
                {
                    "x": 1406,
                    "y": 2643
                },
                {
                    "x": 224,
                    "y": 2643
                }
            ],
            "category": "paragraph",
            "html": "<p id='185' style='font-size:16px'>Per-task performance on BBH (23 tasks in total) are shown in Table 3.</p>",
            "id": 185,
            "page": 12,
            "text": "Per-task performance on BBH (23 tasks in total) are shown in Table 3."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 2706
                },
                {
                    "x": 610,
                    "y": 2706
                },
                {
                    "x": 610,
                    "y": 2762
                },
                {
                    "x": 224,
                    "y": 2762
                }
            ],
            "category": "paragraph",
            "html": "<p id='186' style='font-size:22px'>D. Error Analysis</p>",
            "id": 186,
            "page": 12,
            "text": "D. Error Analysis"
        },
        {
            "bounding_box": [
                {
                    "x": 221,
                    "y": 2791
                },
                {
                    "x": 2265,
                    "y": 2791
                },
                {
                    "x": 2265,
                    "y": 2995
                },
                {
                    "x": 221,
                    "y": 2995
                }
            ],
            "category": "paragraph",
            "html": "<p id='187' style='font-size:16px'>We perform an error analysis of SELF-DISCOVER on the MATH dataset of 200 samples to understand the failure modes.<br>We manually annotate whether the generated reasoning structure is correct or not together with whether the correctness of<br>model prediction using SELF-DISCOVER. A reasoning structure is defined as correct if a human expert can solve the task by<br>simply following the reasoning structure.</p>",
            "id": 187,
            "page": 12,
            "text": "We perform an error analysis of SELF-DISCOVER on the MATH dataset of 200 samples to understand the failure modes. We manually annotate whether the generated reasoning structure is correct or not together with whether the correctness of model prediction using SELF-DISCOVER. A reasoning structure is defined as correct if a human expert can solve the task by simply following the reasoning structure."
        },
        {
            "bounding_box": [
                {
                    "x": 1217,
                    "y": 3048
                },
                {
                    "x": 1266,
                    "y": 3048
                },
                {
                    "x": 1266,
                    "y": 3090
                },
                {
                    "x": 1217,
                    "y": 3090
                }
            ],
            "category": "footer",
            "html": "<footer id='188' style='font-size:16px'>12</footer>",
            "id": 188,
            "page": 12,
            "text": "12"
        },
        {
            "bounding_box": [
                {
                    "x": 601,
                    "y": 191
                },
                {
                    "x": 1882,
                    "y": 191
                },
                {
                    "x": 1882,
                    "y": 237
                },
                {
                    "x": 601,
                    "y": 237
                }
            ],
            "category": "header",
            "html": "<header id='189' style='font-size:22px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 189,
            "page": 13,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 448
                },
                {
                    "x": 2264,
                    "y": 448
                },
                {
                    "x": 2264,
                    "y": 536
                },
                {
                    "x": 223,
                    "y": 536
                }
            ],
            "category": "paragraph",
            "html": "<p id='190' style='font-size:16px'>Table 2. All 39 reasoning modules consisting of high-level cognitive heuristics for problem-solving. We adopt them from Fernando et al.<br>(2023).</p>",
            "id": 190,
            "page": 13,
            "text": "Table 2. All 39 reasoning modules consisting of high-level cognitive heuristics for problem-solving. We adopt them from Fernando  (2023)."
        },
        {
            "bounding_box": [
                {
                    "x": 257,
                    "y": 539
                },
                {
                    "x": 569,
                    "y": 539
                },
                {
                    "x": 569,
                    "y": 581
                },
                {
                    "x": 257,
                    "y": 581
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='191' style='font-size:20px'>Reasoning Modules</p>",
            "id": 191,
            "page": 13,
            "text": "Reasoning Modules"
        },
        {
            "bounding_box": [
                {
                    "x": 252,
                    "y": 579
                },
                {
                    "x": 2239,
                    "y": 579
                },
                {
                    "x": 2239,
                    "y": 2836
                },
                {
                    "x": 252,
                    "y": 2836
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='192' style='font-size:14px'>1 How could I devise an experiment to help solve that problem?<br>2 Make a list of ideas for solving this problem, and apply them one by one to the problem to see if any progress can be made.<br>3 How could I measure progress on this problem?<br>4 How can I simplify the problem so that it is easier to solve?<br>5 What are the key assumptions underlying this problem?<br>6 What are the potential risks and drawbacks of each solution?<br>7 What are the alternative perspectives or viewpoints on this problem?<br>8 What are the long-term implications of this problem and its solutions?<br>9 How can I break down this problem into smaller, more manageable parts?<br>10 Critical Thinking: This style involves analyzing the problem from different perspectives, questioning assumptions, and evaluating<br>the evidence or information available. It focuses on logical reasoning, evidence-based decision-making, and identifying<br>potential biases or flaws in thinking.<br>11 Try creative thinking, generate innovative and out-of-the-box ideas to solve the problem. Explore unconventional solutions,<br>thinking beyond traditional boundaries, and encouraging imagination and originality.<br>12 Seek input and collaboration from others to solve the problem. Emphasize teamwork, open communication, and leveraging the<br>diverse perspectives and expertise of a group to come up with effective solutions.<br>13 Use systems thinking: Consider the problem as part of a larger system and understanding the interconnectedness of various elements.<br>Focuses on identifying the underlying causes, feedback loops, and interdependencies that influence the problem, and developing holistic<br>solutions that address the system as a whole.<br>14 Use Risk Analysis: Evaluate potential risks, uncertainties, and tradeoffs associated with different solutions or approaches to a<br>problem. Emphasize assessing the potential consequences and likelihood of success or failure, and making informed decisions based<br>on a balanced analysis of risks and benefits.<br>15 Use Reflective Thinking: Step back from the problem, take the time for introspection and self-reflection. Examine personal biases,<br>assumptions, and mental models that may influence problem-solving, and being open to learning from past experiences to improve<br>future approaches.<br>16 What is the core issue or problem that needs to be addressed?<br>17 What are the underlying causes or factors contributing to the problem?<br>18 Are there any potential solutions or strategies that have been tried before? If yes, what were the outcomes and lessons learned?<br>19 What are the potential obstacles or challenges that might arise in solving this problem?<br>20 Are there any relevant data or information that can provide insights into the problem? If yes, what data sources are available,<br>and how can they be analyzed?<br>21 Are there any stakeholders or individuals who are directly affected by the problem? What are their perspectives and needs?<br>22 What resources (financial, human, technological, etc.) are needed to tackle the problem effectively?<br>23 How can progress or success in solving the problem be measured or evaluated?<br>24 What indicators or metrics can be used?<br>25 Is the problem a technical or practical one that requires a specific expertise or skill set? Or is it more of a conceptual or<br>theoretical problem?<br>26 Does the problem involve a physical constraint, such as limited resources, infrastructure, or space?<br>27 Is the problem related to human behavior, such as a social, cultural, or psychological issue?<br>28 Does the problem involve decision-making or planning, where choices need to be made under uncertainty or with competing<br>objectives?<br>29 Is the problem an analytical one that requires data analysis, modeling, or optimization techniques?<br>30 Is the problem a design challenge that requires creative solutions and innovation?<br>31 Does the problem require addressing systemic or structural issues rather than just individual instances?<br>32 Is the problem time-sensitive or urgent, requiring immediate attention and action?<br>33 What kinds of solution typically are produced for this kind of problem specification?<br>34 Given the problem specification and the current best solution, have a guess about other possible solutions.<br>35 Let's imagine the current best solution is totally wrong, what other ways are there to think about the problem specification?<br>36 What is the best way to modify this current best solution, given what you know about these kinds of problem specification?<br>37 Ignoring the current best solution, create an entirely new solution to the problem.<br>38 Let's think step by step.<br>39 Let's make a step by step plan and implement it with good notion and explanation.</p>",
            "id": 192,
            "page": 13,
            "text": "1 How could I devise an experiment to help solve that problem? 2 Make a list of ideas for solving this problem, and apply them one by one to the problem to see if any progress can be made. 3 How could I measure progress on this problem? 4 How can I simplify the problem so that it is easier to solve? 5 What are the key assumptions underlying this problem? 6 What are the potential risks and drawbacks of each solution? 7 What are the alternative perspectives or viewpoints on this problem? 8 What are the long-term implications of this problem and its solutions? 9 How can I break down this problem into smaller, more manageable parts? 10 Critical Thinking: This style involves analyzing the problem from different perspectives, questioning assumptions, and evaluating the evidence or information available. It focuses on logical reasoning, evidence-based decision-making, and identifying potential biases or flaws in thinking. 11 Try creative thinking, generate innovative and out-of-the-box ideas to solve the problem. Explore unconventional solutions, thinking beyond traditional boundaries, and encouraging imagination and originality. 12 Seek input and collaboration from others to solve the problem. Emphasize teamwork, open communication, and leveraging the diverse perspectives and expertise of a group to come up with effective solutions. 13 Use systems thinking: Consider the problem as part of a larger system and understanding the interconnectedness of various elements. Focuses on identifying the underlying causes, feedback loops, and interdependencies that influence the problem, and developing holistic solutions that address the system as a whole. 14 Use Risk Analysis: Evaluate potential risks, uncertainties, and tradeoffs associated with different solutions or approaches to a problem. Emphasize assessing the potential consequences and likelihood of success or failure, and making informed decisions based on a balanced analysis of risks and benefits. 15 Use Reflective Thinking: Step back from the problem, take the time for introspection and self-reflection. Examine personal biases, assumptions, and mental models that may influence problem-solving, and being open to learning from past experiences to improve future approaches. 16 What is the core issue or problem that needs to be addressed? 17 What are the underlying causes or factors contributing to the problem? 18 Are there any potential solutions or strategies that have been tried before? If yes, what were the outcomes and lessons learned? 19 What are the potential obstacles or challenges that might arise in solving this problem? 20 Are there any relevant data or information that can provide insights into the problem? If yes, what data sources are available, and how can they be analyzed? 21 Are there any stakeholders or individuals who are directly affected by the problem? What are their perspectives and needs? 22 What resources (financial, human, technological, etc.) are needed to tackle the problem effectively? 23 How can progress or success in solving the problem be measured or evaluated? 24 What indicators or metrics can be used? 25 Is the problem a technical or practical one that requires a specific expertise or skill set? Or is it more of a conceptual or theoretical problem? 26 Does the problem involve a physical constraint, such as limited resources, infrastructure, or space? 27 Is the problem related to human behavior, such as a social, cultural, or psychological issue? 28 Does the problem involve decision-making or planning, where choices need to be made under uncertainty or with competing objectives? 29 Is the problem an analytical one that requires data analysis, modeling, or optimization techniques? 30 Is the problem a design challenge that requires creative solutions and innovation? 31 Does the problem require addressing systemic or structural issues rather than just individual instances? 32 Is the problem time-sensitive or urgent, requiring immediate attention and action? 33 What kinds of solution typically are produced for this kind of problem specification? 34 Given the problem specification and the current best solution, have a guess about other possible solutions. 35 Let's imagine the current best solution is totally wrong, what other ways are there to think about the problem specification? 36 What is the best way to modify this current best solution, given what you know about these kinds of problem specification? 37 Ignoring the current best solution, create an entirely new solution to the problem. 38 Let's think step by step. 39 Let's make a step by step plan and implement it with good notion and explanation."
        },
        {
            "bounding_box": [
                {
                    "x": 1218,
                    "y": 3047
                },
                {
                    "x": 1266,
                    "y": 3047
                },
                {
                    "x": 1266,
                    "y": 3090
                },
                {
                    "x": 1218,
                    "y": 3090
                }
            ],
            "category": "footer",
            "html": "<footer id='193' style='font-size:18px'>13</footer>",
            "id": 193,
            "page": 13,
            "text": "13"
        },
        {
            "bounding_box": [
                {
                    "x": 600,
                    "y": 190
                },
                {
                    "x": 1882,
                    "y": 190
                },
                {
                    "x": 1882,
                    "y": 237
                },
                {
                    "x": 600,
                    "y": 237
                }
            ],
            "category": "header",
            "html": "<header id='194' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 194,
            "page": 14,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 358,
                    "y": 310
                },
                {
                    "x": 2125,
                    "y": 310
                },
                {
                    "x": 2125,
                    "y": 356
                },
                {
                    "x": 358,
                    "y": 356
                }
            ],
            "category": "caption",
            "html": "<caption id='195' style='font-size:14px'>Table 3. Big Bench-Hard (Suzgun et al., 2022) per-task performance of GPT-4 and PaLM 2-L with SELF-DISCOVER.</caption>",
            "id": 195,
            "page": 14,
            "text": "Table 3. Big Bench-Hard (Suzgun , 2022) per-task performance of GPT-4 and PaLM 2-L with SELF-DISCOVER."
        },
        {
            "bounding_box": [
                {
                    "x": 233,
                    "y": 356
                },
                {
                    "x": 2254,
                    "y": 356
                },
                {
                    "x": 2254,
                    "y": 1269
                },
                {
                    "x": 233,
                    "y": 1269
                }
            ],
            "category": "table",
            "html": "<br><table id='196' style='font-size:14px'><tr><td>Big Bench-Hard Task</td><td>Human (Avg.)</td><td>Human (Max)</td><td>GPT-4 Direct</td><td>GPT-4 + CoT</td><td>GPT-4 + Self-Discover</td><td>PaLM 2-L Direct</td><td>PaLM 2-L + CoT</td><td>PaLM 2-L + Self-Discover</td></tr><tr><td>boolean_expressions</td><td>79</td><td>100</td><td>73</td><td>83</td><td>85</td><td>71</td><td>84</td><td>84</td></tr><tr><td>causal_judgement</td><td>70</td><td>100</td><td>67</td><td>75</td><td>80</td><td>46</td><td>59</td><td>61</td></tr><tr><td>date_understanding</td><td>77</td><td>100</td><td>74</td><td>80</td><td>81</td><td>73</td><td>78</td><td>78</td></tr><tr><td>disambiguation_qa</td><td>67</td><td>93</td><td>60</td><td>70</td><td>80</td><td>54</td><td>50</td><td>57</td></tr><tr><td>dyck_languages</td><td>48</td><td>100</td><td>69</td><td>73</td><td>77</td><td>94</td><td>95</td><td>98</td></tr><tr><td>formal_fallacies</td><td>91</td><td>100</td><td>60</td><td>60</td><td>80</td><td>60</td><td>63</td><td>69</td></tr><tr><td>geometric_shapes</td><td>54</td><td>100</td><td>30</td><td>56</td><td>60</td><td>33</td><td>34</td><td>39</td></tr><tr><td>hyperbaton</td><td>75</td><td>100</td><td>68</td><td>69</td><td>76</td><td>80</td><td>75</td><td>82</td></tr><tr><td>logical_deduction_seven_objects</td><td>40</td><td>89</td><td>60</td><td>70</td><td>70</td><td>45</td><td>39</td><td>50</td></tr><tr><td>movie_recommendation</td><td>61</td><td>90</td><td>70</td><td>70</td><td>86</td><td>83</td><td>54</td><td>66</td></tr><tr><td>multistep_arithmetic_two</td><td>10</td><td>25</td><td>10</td><td>92</td><td>70</td><td>4</td><td>50</td><td>47</td></tr><tr><td>navigate</td><td>82</td><td>100</td><td>70</td><td>90</td><td>90</td><td>38</td><td>63</td><td>67</td></tr><tr><td>object_counting</td><td>86</td><td>100</td><td>90</td><td>100</td><td>100</td><td>27</td><td>44</td><td>70</td></tr><tr><td>penguins_in_a_table</td><td>78</td><td>100</td><td>80</td><td>100</td><td>90</td><td>70</td><td>67</td><td>75</td></tr><tr><td>reasoning_about_colored_objects</td><td>75</td><td>100</td><td>77</td><td>80</td><td>79</td><td>36</td><td>79</td><td>75</td></tr><tr><td>ruin_names</td><td>78</td><td>100</td><td>90</td><td>80</td><td>97</td><td>79</td><td>58</td><td>90</td></tr><tr><td>salient_manslation_error_detection</td><td>37</td><td>80</td><td>40</td><td>50</td><td>70</td><td>56</td><td>48</td><td>60</td></tr><tr><td>snarks</td><td>77</td><td>100</td><td>73</td><td>89</td><td>97</td><td>58</td><td>62</td><td>86</td></tr><tr><td>sports_understanding</td><td>71</td><td>100</td><td>54</td><td>61</td><td>90</td><td>44</td><td>47</td><td>89</td></tr><tr><td>temporal_sequences</td><td>91</td><td>100</td><td>96</td><td>99</td><td>100</td><td>99</td><td>97</td><td>99</td></tr><tr><td>tracking_shuffled_objects_seven_objects</td><td>65</td><td>100</td><td>24</td><td>80</td><td>68</td><td>22</td><td>58</td><td>36</td></tr><tr><td>web_of_lies</td><td>81</td><td>100</td><td>15</td><td>80</td><td>71</td><td>54</td><td>42</td><td>67</td></tr><tr><td>word_sorting</td><td>63</td><td>100</td><td>65</td><td>90</td><td>85</td><td>12</td><td>4</td><td>15</td></tr></table>",
            "id": 196,
            "page": 14,
            "text": "Big Bench-Hard Task Human (Avg.) Human (Max) GPT-4 Direct GPT-4 + CoT GPT-4 + Self-Discover PaLM 2-L Direct PaLM 2-L + CoT PaLM 2-L + Self-Discover  boolean_expressions 79 100 73 83 85 71 84 84  causal_judgement 70 100 67 75 80 46 59 61  date_understanding 77 100 74 80 81 73 78 78  disambiguation_qa 67 93 60 70 80 54 50 57  dyck_languages 48 100 69 73 77 94 95 98  formal_fallacies 91 100 60 60 80 60 63 69  geometric_shapes 54 100 30 56 60 33 34 39  hyperbaton 75 100 68 69 76 80 75 82  logical_deduction_seven_objects 40 89 60 70 70 45 39 50  movie_recommendation 61 90 70 70 86 83 54 66  multistep_arithmetic_two 10 25 10 92 70 4 50 47  navigate 82 100 70 90 90 38 63 67  object_counting 86 100 90 100 100 27 44 70  penguins_in_a_table 78 100 80 100 90 70 67 75  reasoning_about_colored_objects 75 100 77 80 79 36 79 75  ruin_names 78 100 90 80 97 79 58 90  salient_manslation_error_detection 37 80 40 50 70 56 48 60  snarks 77 100 73 89 97 58 62 86  sports_understanding 71 100 54 61 90 44 47 89  temporal_sequences 91 100 96 99 100 99 97 99  tracking_shuffled_objects_seven_objects 65 100 24 80 68 22 58 36  web_of_lies 81 100 15 80 71 54 42 67  word_sorting 63 100 65 90 85 12 4"
        },
        {
            "bounding_box": [
                {
                    "x": 222,
                    "y": 1351
                },
                {
                    "x": 2263,
                    "y": 1351
                },
                {
                    "x": 2263,
                    "y": 1506
                },
                {
                    "x": 222,
                    "y": 1506
                }
            ],
            "category": "paragraph",
            "html": "<p id='197' style='font-size:16px'>Out of 200 examples, we find that 87.5% (175) examples have correct reasoning structures. 12.5% (25) examples have<br>incorrect reasoning structures leading to prediction errors. Table 4 shows 4 such examples where the LLM misunderstands<br>the task, or makes an error in one of the steps or adds unnecessary steps in the reasoning structure.</p>",
            "id": 197,
            "page": 14,
            "text": "Out of 200 examples, we find that 87.5% (175) examples have correct reasoning structures. 12.5% (25) examples have incorrect reasoning structures leading to prediction errors. Table 4 shows 4 such examples where the LLM misunderstands the task, or makes an error in one of the steps or adds unnecessary steps in the reasoning structure."
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1524
                },
                {
                    "x": 2264,
                    "y": 1524
                },
                {
                    "x": 2264,
                    "y": 1781
                },
                {
                    "x": 224,
                    "y": 1781
                }
            ],
            "category": "paragraph",
            "html": "<br><p id='198' style='font-size:16px'>Next, we analyze the errors made by the model in SELF-DISCOVER: out of 99 examples where the model prediction is<br>wrong, wrong reasoning structures account for only 25.3% of the errors. The remaining 74.7% errors are due to errors in<br>the intermediate calculations such as math computations. Table 5 shows 3 examples of such errors. This insight indicates<br>that future improvements should aim at improving the step-wise calculation accuracy of LLMs, such as using tools or code<br>generation.</p>",
            "id": 198,
            "page": 14,
            "text": "Next, we analyze the errors made by the model in SELF-DISCOVER: out of 99 examples where the model prediction is wrong, wrong reasoning structures account for only 25.3% of the errors. The remaining 74.7% errors are due to errors in the intermediate calculations such as math computations. Table 5 shows 3 examples of such errors. This insight indicates that future improvements should aim at improving the step-wise calculation accuracy of LLMs, such as using tools or code generation."
        },
        {
            "bounding_box": [
                {
                    "x": 225,
                    "y": 1838
                },
                {
                    "x": 643,
                    "y": 1838
                },
                {
                    "x": 643,
                    "y": 1899
                },
                {
                    "x": 225,
                    "y": 1899
                }
            ],
            "category": "paragraph",
            "html": "<p id='199' style='font-size:22px'>E. Further Anaysis</p>",
            "id": 199,
            "page": 14,
            "text": "E. Further Anaysis"
        },
        {
            "bounding_box": [
                {
                    "x": 224,
                    "y": 1925
                },
                {
                    "x": 2263,
                    "y": 1925
                },
                {
                    "x": 2263,
                    "y": 2280
                },
                {
                    "x": 224,
                    "y": 2280
                }
            ],
            "category": "paragraph",
            "html": "<p id='200' style='font-size:18px'>Model-Discovered Reasoning Structures vs. Human Reasoning Patterns We investigate whether LLM-discovered<br>reasoning structures share some commonalities with human reasoning patterns. We give humans 3 task instances without<br>labels and an example reasoning structure (same as SELF-DISCOVER meta-reasoning stage) and ask them to write a<br>reasoning structure for a task before solving it. Figure 11 shows comparison of human and LLM-composed reasoning<br>structures on the BBH-navigation task. We observe similar structures such as mental-noting after each movement. From<br>promising findings of LLM self-discovered structures boost and share traits of human meta-reasoning, we hope to encourage<br>more future work to study humna-AI collaboration for complex problem-solving.</p>",
            "id": 200,
            "page": 14,
            "text": "Model-Discovered Reasoning Structures vs. Human Reasoning Patterns We investigate whether LLM-discovered reasoning structures share some commonalities with human reasoning patterns. We give humans 3 task instances without labels and an example reasoning structure (same as SELF-DISCOVER meta-reasoning stage) and ask them to write a reasoning structure for a task before solving it. Figure 11 shows comparison of human and LLM-composed reasoning structures on the BBH-navigation task. We observe similar structures such as mental-noting after each movement. From promising findings of LLM self-discovered structures boost and share traits of human meta-reasoning, we hope to encourage more future work to study humna-AI collaboration for complex problem-solving."
        },
        {
            "bounding_box": [
                {
                    "x": 1217,
                    "y": 3047
                },
                {
                    "x": 1267,
                    "y": 3047
                },
                {
                    "x": 1267,
                    "y": 3091
                },
                {
                    "x": 1217,
                    "y": 3091
                }
            ],
            "category": "footer",
            "html": "<footer id='201' style='font-size:16px'>14</footer>",
            "id": 201,
            "page": 14,
            "text": "14"
        },
        {
            "bounding_box": [
                {
                    "x": 602,
                    "y": 191
                },
                {
                    "x": 1883,
                    "y": 191
                },
                {
                    "x": 1883,
                    "y": 236
                },
                {
                    "x": 602,
                    "y": 236
                }
            ],
            "category": "header",
            "html": "<header id='202' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 202,
            "page": 15,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 223,
                    "y": 397
                },
                {
                    "x": 2066,
                    "y": 397
                },
                {
                    "x": 2066,
                    "y": 444
                },
                {
                    "x": 223,
                    "y": 444
                }
            ],
            "category": "caption",
            "html": "<caption id='203' style='font-size:14px'>Table 4. Examples of wrong reasoning structures for MATH. The first error in the reasoning structure is highlighted in red.</caption>",
            "id": 203,
            "page": 15,
            "text": "Table 4. Examples of wrong reasoning structures for MATH. The first error in the reasoning structure is highlighted in red."
        },
        {
            "bounding_box": [
                {
                    "x": 391,
                    "y": 457
                },
                {
                    "x": 2098,
                    "y": 457
                },
                {
                    "x": 2098,
                    "y": 2898
                },
                {
                    "x": 391,
                    "y": 2898
                }
            ],
            "category": "table",
            "html": "<table id='204' style='font-size:14px'><tr><td>Prompt</td><td>Reasoning Structure</td><td>Error</td></tr><tr><td>How many numbers between 1 and 2005 are integer multi- ples of 3 or 4 but not 12?</td><td>1. Find the number of multiples of 3 between 1 and 2005. 2. Find the number of multiples of 4 between 1 and 2005. 3. Find the number of multiples of 12 between 1 and 2005. 4. Add the number of multiples of 3 and 4. 5. Subtract the number of multiples of 12 (to avoid double counting). 6. The result is the number of integers between 1 and 2005 that are multiples of 3 or 4 but not 12.</td><td>Need to sub- tract the num- ber of mul- tiples of 12 twice instead of once.</td></tr><tr><td>How many numbers are in the list 6,7,10,11,14,15,..., 94,95,98?</td><td>1. Find the number of pairs in the list. 2. Find the number of numbers in each pair. 3. Multiply the number of pairs by the number of numbers in each pair to find the total number of numbers in the list.</td><td>LLM misun- derstands the task: the rea- soning struc- ture is irrele- vant.</td></tr><tr><td>A restaurant offers three desserts, and exactly twice as many appetizers as main courses. A dinner consists of an appetizer, a main course, and a dessert. What is the least number of main courses that the restaurant should of- fer SO that a customer could have a different dinner each night in the year 2003?</td><td>1. Define the variables: - M: number of main courses - A: number of appetizers (twice the number of main courses) - D: number of desserts (fixed at 3) - T: total number of possible dinner combinations 2. Calculate the total number of possible dinner combinations: - T = M * A * D 3. Set the total number of possible dinner combi- nations equal to the number of nights in the year 2003: - T = 2003 4. Substitute the expression for A in terms of M: - T = M * (2 * M) * 3 5. Solve the equation for M: - 6M2 = 2003 6. Find the smallest integer value of M that satis- fies the equation.</td><td>There are 365 nights in the year 2003.</td></tr><tr><td>Determine the number of ways to arrange the letters of the word NINE.</td><td>1. Count the total number of letters in the word NINE. 2. Identify the number of times each letter appears in the word. 3. Calculate the factorial of the total number of letters. 4. Divide the factorial by the factorial of the num- ber of times each letter appears. 5. Multiply the results from step 4 for each unique letter. }</td><td>Step 5 is un- necessary and leads to error in the final re- sult.</td></tr></table>",
            "id": 204,
            "page": 15,
            "text": "Prompt Reasoning Structure Error  How many numbers between 1 and 2005 are integer multi- ples of 3 or 4 but not 12? 1. Find the number of multiples of 3 between 1 and 2005. 2. Find the number of multiples of 4 between 1 and 2005. 3. Find the number of multiples of 12 between 1 and 2005. 4. Add the number of multiples of 3 and 4. 5. Subtract the number of multiples of 12 (to avoid double counting). 6. The result is the number of integers between 1 and 2005 that are multiples of 3 or 4 but not 12. Need to sub- tract the num- ber of mul- tiples of 12 twice instead of once.  How many numbers are in the list 6,7,10,11,14,15,..., 94,95,98? 1. Find the number of pairs in the list. 2. Find the number of numbers in each pair. 3. Multiply the number of pairs by the number of numbers in each pair to find the total number of numbers in the list. LLM misun- derstands the task: the rea- soning struc- ture is irrele- vant.  A restaurant offers three desserts, and exactly twice as many appetizers as main courses. A dinner consists of an appetizer, a main course, and a dessert. What is the least number of main courses that the restaurant should of- fer SO that a customer could have a different dinner each night in the year 2003? 1. Define the variables: - M: number of main courses - A: number of appetizers (twice the number of main courses) - D: number of desserts (fixed at 3) - T: total number of possible dinner combinations 2. Calculate the total number of possible dinner combinations: - T = M * A * D 3. Set the total number of possible dinner combi- nations equal to the number of nights in the year 2003: - T = 2003 4. Substitute the expression for A in terms of M: - T = M * (2 * M) * 3 5. Solve the equation for M: - 6M2 = 2003 6. Find the smallest integer value of M that satis- fies the equation. There are 365 nights in the year 2003.  Determine the number of ways to arrange the letters of the word NINE. 1. Count the total number of letters in the word NINE. 2. Identify the number of times each letter appears in the word. 3. Calculate the factorial of the total number of letters. 4. Divide the factorial by the factorial of the num- ber of times each letter appears. 5. Multiply the results from step 4 for each unique letter. }"
        },
        {
            "bounding_box": [
                {
                    "x": 1217,
                    "y": 3048
                },
                {
                    "x": 1266,
                    "y": 3048
                },
                {
                    "x": 1266,
                    "y": 3090
                },
                {
                    "x": 1217,
                    "y": 3090
                }
            ],
            "category": "footer",
            "html": "<footer id='205' style='font-size:16px'>15</footer>",
            "id": 205,
            "page": 15,
            "text": "15"
        },
        {
            "bounding_box": [
                {
                    "x": 600,
                    "y": 190
                },
                {
                    "x": 1883,
                    "y": 190
                },
                {
                    "x": 1883,
                    "y": 237
                },
                {
                    "x": 600,
                    "y": 237
                }
            ],
            "category": "header",
            "html": "<header id='206' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 206,
            "page": 16,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 222,
                    "y": 531
                },
                {
                    "x": 2051,
                    "y": 531
                },
                {
                    "x": 2051,
                    "y": 580
                },
                {
                    "x": 222,
                    "y": 580
                }
            ],
            "category": "caption",
            "html": "<caption id='207' style='font-size:14px'>Table 5. Examples of wrong calculations for MATH. The first error in the intermediate computations is highlighted in red.</caption>",
            "id": 207,
            "page": 16,
            "text": "Table 5. Examples of wrong calculations for MATH. The first error in the intermediate computations is highlighted in red."
        },
        {
            "bounding_box": [
                {
                    "x": 391,
                    "y": 585
                },
                {
                    "x": 2106,
                    "y": 585
                },
                {
                    "x": 2106,
                    "y": 2763
                },
                {
                    "x": 391,
                    "y": 2763
                }
            ],
            "category": "table",
            "html": "<br><table id='208' style='font-size:14px'><tr><td>Prompt</td><td>Self-Discover Prediction</td><td>Error</td></tr><tr><td>How many ways are there to arrange 6 people around a circular table with 7 seats? (Two seatings are considered the same if one is a rotation of the other.)</td><td>\"1. Calculate the total number of ways to arrange 6 people in 7 seats without considering rotations as the same. \" : 7 * 6 * 5 * 4 * 3 * 2 = 5040 - There are 7 choices for the first person. - There are 6 choices for the second person. - There are 5 choices for the third person. - There are 4 choices for the fourth person. - There are 3 choices for the fifth person. There are 2 choices for the sixth person. \"2. Divide the result from step 1 by the number of rotations that are considered the same. \" : 5040 / 6 = 840 - There are 6 rotations that are considered the same.</td><td>There are 7 ro- tations instead of 6 that are considered the same.</td></tr><tr><td>A customer ordered 15 pieces of gourmet chocolate. The order can be packaged in small boxes that contain 1, 2 or 4 pieces of chocolate. Any box that is used must be full. How many different combinations of boxes can be used for the customer's 15 chocolate pieces? One such combination to be included is to use seven 2-piece boxes and one 1-piece box.</td><td>\"1. Find the number of ways to package the choco- lates using only boxes of 1 piece. \": 1, \"2. Find the number of ways to package the choco- lates using only boxes of 2 pieces. .... 1, \"3. Find the number of ways to package the choco- lates using only boxes of 4 pieces. \": 0, \"4. Find the number of ways to package the choco- lates using a combination of boxes of 1 and 2 pieces. \" : 7, \"5. Find the number of ways to package the choco- lates using a combination of boxes of 1 and 4 pieces. \" : 3, \"6. Find the number of ways to package the choco- lates using a combination of boxes of 2 and 4 pieces. \" : 2, \"7. Find the number of ways to package the choco- lates using a combination of boxes of 1, 2, and 4 pieces. \" : 4, \"8. Sum up the total number of ways from the seven cases above. \" : 1 + 1 + 0 + 7 + 3 + 2 + 4 = 18</td><td>There is 0 way to package 15 chocolates us- ing only boxes of 2 pieces.</td></tr><tr><td>How many primes are in the row of Pascal's Triangle that starts with a 1 followed by a 6?</td><td>\"1. Identify the row of Pascal's Triangle that starts with a 1 followed by a 6. \" : 1, 6, 15, 20, 15, 6, 1\" , \"2. List all the numbers in that row. : [1, 6, 15, 20, 15, 6, 1], \"3. Check each number in the list for primality. \": [False, True, False, False, False, True, False], \"4. Count the number of primes found in the list. \" ·· 2</td><td>6 is not a prime.</td></tr></table>",
            "id": 208,
            "page": 16,
            "text": "Prompt Self-Discover Prediction Error  How many ways are there to arrange 6 people around a circular table with 7 seats? (Two seatings are considered the same if one is a rotation of the other.) \"1. Calculate the total number of ways to arrange 6 people in 7 seats without considering rotations as the same. \" : 7 * 6 * 5 * 4 * 3 * 2 = 5040 - There are 7 choices for the first person. - There are 6 choices for the second person. - There are 5 choices for the third person. - There are 4 choices for the fourth person. - There are 3 choices for the fifth person. There are 2 choices for the sixth person. \"2. Divide the result from step 1 by the number of rotations that are considered the same. \" : 5040 / 6 = 840 - There are 6 rotations that are considered the same. There are 7 ro- tations instead of 6 that are considered the same.  A customer ordered 15 pieces of gourmet chocolate. The order can be packaged in small boxes that contain 1, 2 or 4 pieces of chocolate. Any box that is used must be full. How many different combinations of boxes can be used for the customer's 15 chocolate pieces? One such combination to be included is to use seven 2-piece boxes and one 1-piece box. \"1. Find the number of ways to package the choco- lates using only boxes of 1 piece. \": 1, \"2. Find the number of ways to package the choco- lates using only boxes of 2 pieces. .... 1, \"3. Find the number of ways to package the choco- lates using only boxes of 4 pieces. \": 0, \"4. Find the number of ways to package the choco- lates using a combination of boxes of 1 and 2 pieces. \" : 7, \"5. Find the number of ways to package the choco- lates using a combination of boxes of 1 and 4 pieces. \" : 3, \"6. Find the number of ways to package the choco- lates using a combination of boxes of 2 and 4 pieces. \" : 2, \"7. Find the number of ways to package the choco- lates using a combination of boxes of 1, 2, and 4 pieces. \" : 4, \"8. Sum up the total number of ways from the seven cases above. \" : 1 + 1 + 0 + 7 + 3 + 2 + 4 = 18 There is 0 way to package 15 chocolates us- ing only boxes of 2 pieces.  How many primes are in the row of Pascal's Triangle that starts with a 1 followed by a 6? \"1. Identify the row of Pascal's Triangle that starts with a 1 followed by a 6. \" : 1, 6, 15, 20, 15, 6, 1\" , \"2. List all the numbers in that row. : , \"3. Check each number in the list for primality. \": [False, True, False, False, False, True, False], \"4. Count the number of primes found in the list. \" ·· 2"
        },
        {
            "bounding_box": [
                {
                    "x": 1217,
                    "y": 3048
                },
                {
                    "x": 1268,
                    "y": 3048
                },
                {
                    "x": 1268,
                    "y": 3091
                },
                {
                    "x": 1217,
                    "y": 3091
                }
            ],
            "category": "footer",
            "html": "<footer id='209' style='font-size:16px'>16</footer>",
            "id": 209,
            "page": 16,
            "text": "16"
        },
        {
            "bounding_box": [
                {
                    "x": 600,
                    "y": 191
                },
                {
                    "x": 1882,
                    "y": 191
                },
                {
                    "x": 1882,
                    "y": 236
                },
                {
                    "x": 600,
                    "y": 236
                }
            ],
            "category": "header",
            "html": "<header id='210' style='font-size:20px'>SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures</header>",
            "id": 210,
            "page": 17,
            "text": "SELF-DISCOVER: Large Language Models Self-Compose Reasoning Structures"
        },
        {
            "bounding_box": [
                {
                    "x": 261,
                    "y": 1129
                },
                {
                    "x": 2226,
                    "y": 1129
                },
                {
                    "x": 2226,
                    "y": 1322
                },
                {
                    "x": 261,
                    "y": 1322
                }
            ],
            "category": "paragraph",
            "html": "<p id='211' style='font-size:22px'>Task-Navigation: If you follow these instructions, do you return to the starting point? Always<br>face forward. Take 1 step backward. Take 9 steps left. Take 2 steps backward. Take 6 steps forward.<br>Take 4 steps forward. Take 4 steps backward. Take 3 steps right.</p>",
            "id": 211,
            "page": 17,
            "text": "Task-Navigation: If you follow these instructions, do you return to the starting point? Always face forward. Take 1 step backward. Take 9 steps left. Take 2 steps backward. Take 6 steps forward. Take 4 steps forward. Take 4 steps backward. Take 3 steps right."
        },
        {
            "bounding_box": [
                {
                    "x": 256,
                    "y": 1366
                },
                {
                    "x": 2235,
                    "y": 1366
                },
                {
                    "x": 2235,
                    "y": 2068
                },
                {
                    "x": 256,
                    "y": 2068
                }
            ],
            "category": "figure",
            "html": "<figure><img id='212' style='font-size:14px' alt=\"Human-Written Structure: Model-Discovered Structure:\n1\nShared\n' Break down instructions into individual movements\n'Position after instruction 1':\nStructure:\n{\n'Position after instruction 2':\nStep-wise ' Instruction 1 ' ' '\n:\n,\nmental notes = Effect on position after Instruction 1 ' ·\n' '\n,\n'Position after instruction n' : 'Instruction 2' :\n' '\n,\n'Is final position the same as starting ' Effect on position after Instruction 2 ' :\n' '\n,\nposition?':\n' Additional instructions if present': ' '\n}\n},\n'Simplify the sequence of movements = : {\n'Simplified representation of series': ' '\n} ...\n}\" data-coord=\"top-left:(256,1366); bottom-right:(2235,2068)\" /></figure>",
            "id": 212,
            "page": 17,
            "text": "Human-Written Structure: Model-Discovered Structure: 1 Shared \" Break down instructions into individual movements \"Position after instruction 1\": Structure: { \"Position after instruction 2\": Step-wise \" Instruction 1 \" \" \" : , mental notes = Effect on position after Instruction 1 \" · \" \" , \"Position after instruction n\" : \"Instruction 2\" : \" \" , \"Is final position the same as starting \" Effect on position after Instruction 2 \" : \" \" , position?\": \" Additional instructions if present\": \" \" } }, \"Simplify the sequence of movements = : { \"Simplified representation of series\": \" \" } ... }"
        },
        {
            "bounding_box": [
                {
                    "x": 219,
                    "y": 2132
                },
                {
                    "x": 2265,
                    "y": 2132
                },
                {
                    "x": 2265,
                    "y": 2227
                },
                {
                    "x": 219,
                    "y": 2227
                }
            ],
            "category": "caption",
            "html": "<caption id='213' style='font-size:16px'>Figure 11. Case study of human-written structure shares commonalities with LLM-discovered reasoning structure. We observe<br>similar reasoning patterns-both structures contain step-wise analysis of each instruction.</caption>",
            "id": 213,
            "page": 17,
            "text": "Figure 11. Case study of human-written structure shares commonalities with LLM-discovered reasoning structure. We observe similar reasoning patterns-both structures contain step-wise analysis of each instruction."
        },
        {
            "bounding_box": [
                {
                    "x": 1218,
                    "y": 3047
                },
                {
                    "x": 1266,
                    "y": 3047
                },
                {
                    "x": 1266,
                    "y": 3090
                },
                {
                    "x": 1218,
                    "y": 3090
                }
            ],
            "category": "footer",
            "html": "<footer id='214' style='font-size:18px'>17</footer>",
            "id": 214,
            "page": 17,
            "text": "17"
        }
    ]
}